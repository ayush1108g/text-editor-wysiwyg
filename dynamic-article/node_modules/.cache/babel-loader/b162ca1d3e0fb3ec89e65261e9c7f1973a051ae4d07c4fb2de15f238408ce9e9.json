{"ast":null,"code":"/*\n * wysiwyg web editor\n *\n * suneditor.js\n * Copyright 2017 JiHong Lee.\n * MIT license.\n */\n'use strict';\n\nexport default {\n  name: 'list',\n  display: 'submenu',\n  add: function (core, targetElement) {\n    const context = core.context;\n    context.list = {\n      targetButton: targetElement,\n      _list: null,\n      currentList: '',\n      icons: {\n        bullets: core.icons.list_bullets,\n        number: core.icons.list_number\n      }\n    };\n\n    /** set submenu */\n    let listDiv = this.setSubmenu(core);\n    let listUl = listDiv.querySelector('ul');\n\n    /** add event listeners */\n    listUl.addEventListener('click', this.pickup.bind(core));\n    context.list._list = listUl.querySelectorAll('li button');\n\n    /** append target button menu */\n    core.initMenuTarget(this.name, targetElement, listDiv);\n\n    /** empty memory */\n    listDiv = null, listUl = null;\n  },\n  setSubmenu: function (core) {\n    const lang = core.lang;\n    const listDiv = core.util.createElement('DIV');\n    listDiv.className = 'se-submenu se-list-layer';\n    listDiv.innerHTML = '' + '<div class=\"se-list-inner\">' + '<ul class=\"se-list-basic\">' + '<li><button type=\"button\" class=\"se-btn-list se-tooltip\" data-command=\"OL\" title=\"' + lang.toolbar.orderList + '\" aria-label=\"' + lang.toolbar.orderList + '\">' + core.icons.list_number + '</button></li>' + '<li><button type=\"button\" class=\"se-btn-list se-tooltip\" data-command=\"UL\" title=\"' + lang.toolbar.unorderList + '\" aria-label=\"' + lang.toolbar.unorderList + '\">' + core.icons.list_bullets + '</button></li>' + '</ul>' + '</div>';\n    return listDiv;\n  },\n  /**\n  * @Override core\n  */\n  active: function (element) {\n    const button = this.context.list.targetButton;\n    const icon = button.firstElementChild;\n    const util = this.util;\n    if (util.isList(element)) {\n      const nodeName = element.nodeName;\n      button.setAttribute('data-focus', nodeName);\n      util.addClass(button, 'active');\n      if (/UL/i.test(nodeName)) {\n        util.changeElement(icon, this.context.list.icons.bullets);\n      } else {\n        util.changeElement(icon, this.context.list.icons.number);\n      }\n      return true;\n    } else {\n      button.removeAttribute('data-focus');\n      util.changeElement(icon, this.context.list.icons.number);\n      util.removeClass(button, 'active');\n    }\n    return false;\n  },\n  /**\n  * @Override submenu\n  */\n  on: function () {\n    const listContext = this.context.list;\n    const list = listContext._list;\n    const currentList = listContext.targetButton.getAttribute('data-focus') || '';\n    if (currentList !== listContext.currentList) {\n      for (let i = 0, len = list.length; i < len; i++) {\n        if (currentList === list[i].getAttribute('data-command')) {\n          this.util.addClass(list[i], 'active');\n        } else {\n          this.util.removeClass(list[i], 'active');\n        }\n      }\n      listContext.currentList = currentList;\n    }\n  },\n  editList: function (command, selectedCells, detach) {\n    let range = this.getRange();\n    let selectedFormats = !selectedCells ? this.getSelectedElementsAndComponents(false) : selectedCells;\n    if (selectedFormats.length === 0) {\n      if (selectedCells) return;\n      range = this.getRange_addLine(range, null);\n      selectedFormats = this.getSelectedElementsAndComponents(false);\n      if (selectedFormats.length === 0) return;\n    }\n    const util = this.util;\n    util.sortByDepth(selectedFormats, true);\n\n    // merge\n    let firstSel = selectedFormats[0];\n    let lastSel = selectedFormats[selectedFormats.length - 1];\n    let topEl = (util.isListCell(firstSel) || util.isComponent(firstSel)) && !firstSel.previousElementSibling ? firstSel.parentNode.previousElementSibling : firstSel.previousElementSibling;\n    let bottomEl = (util.isListCell(lastSel) || util.isComponent(lastSel)) && !lastSel.nextElementSibling ? lastSel.parentNode.nextElementSibling : lastSel.nextElementSibling;\n    const isCollapsed = range.collapsed;\n    const originRange = {\n      sc: range.startContainer,\n      so: range.startContainer === range.endContainer && util.onlyZeroWidthSpace(range.startContainer) && range.startOffset === 0 && range.endOffset === 1 ? range.endOffset : range.startOffset,\n      ec: range.endContainer,\n      eo: range.endOffset\n    };\n    let afterRange = null;\n    let isRemove = true;\n    for (let i = 0, len = selectedFormats.length; i < len; i++) {\n      if (!util.isList(util.getRangeFormatElement(selectedFormats[i], function (current) {\n        return this.getRangeFormatElement(current) && current !== selectedFormats[i];\n      }.bind(util)))) {\n        isRemove = false;\n        break;\n      }\n    }\n    if (isRemove && (!topEl || firstSel.tagName !== topEl.tagName || command !== topEl.tagName.toUpperCase()) && (!bottomEl || lastSel.tagName !== bottomEl.tagName || command !== bottomEl.tagName.toUpperCase())) {\n      if (detach) {\n        for (let i = 0, len = selectedFormats.length; i < len; i++) {\n          for (let j = i - 1; j >= 0; j--) {\n            if (selectedFormats[j].contains(selectedFormats[i])) {\n              selectedFormats.splice(i, 1);\n              i--;\n              len--;\n              break;\n            }\n          }\n        }\n      }\n      const currentFormat = util.getRangeFormatElement(firstSel);\n      const cancel = currentFormat && currentFormat.tagName === command;\n      let rangeArr, tempList;\n      const passComponent = function (current) {\n        return !this.isComponent(current);\n      }.bind(util);\n      if (!cancel) tempList = util.createElement(command);\n      for (let i = 0, len = selectedFormats.length, r, o; i < len; i++) {\n        o = util.getRangeFormatElement(selectedFormats[i], passComponent);\n        if (!o || !util.isList(o)) continue;\n        if (!r) {\n          r = o;\n          rangeArr = {\n            r: r,\n            f: [util.getParentElement(selectedFormats[i], 'LI')]\n          };\n        } else {\n          if (r !== o) {\n            if (detach && util.isListCell(o.parentNode)) {\n              this.plugins.list._detachNested.call(this, rangeArr.f);\n            } else {\n              afterRange = this.detachRangeFormatElement(rangeArr.f[0].parentNode, rangeArr.f, tempList, false, true);\n            }\n            o = selectedFormats[i].parentNode;\n            if (!cancel) tempList = util.createElement(command);\n            r = o;\n            rangeArr = {\n              r: r,\n              f: [util.getParentElement(selectedFormats[i], 'LI')]\n            };\n          } else {\n            rangeArr.f.push(util.getParentElement(selectedFormats[i], 'LI'));\n          }\n        }\n        if (i === len - 1) {\n          if (detach && util.isListCell(o.parentNode)) {\n            this.plugins.list._detachNested.call(this, rangeArr.f);\n          } else {\n            afterRange = this.detachRangeFormatElement(rangeArr.f[0].parentNode, rangeArr.f, tempList, false, true);\n          }\n        }\n      }\n    } else {\n      const topElParent = topEl ? topEl.parentNode : topEl;\n      const bottomElParent = bottomEl ? bottomEl.parentNode : bottomEl;\n      topEl = topElParent && !util.isWysiwygDiv(topElParent) && topElParent.nodeName === command ? topElParent : topEl;\n      bottomEl = bottomElParent && !util.isWysiwygDiv(bottomElParent) && bottomElParent.nodeName === command ? bottomElParent : bottomEl;\n      const mergeTop = topEl && topEl.tagName === command;\n      const mergeBottom = bottomEl && bottomEl.tagName === command;\n      let list = mergeTop ? topEl : util.createElement(command);\n      let firstList = null;\n      let lastList = null;\n      let topNumber = null;\n      let bottomNumber = null;\n      const passComponent = function (current) {\n        return !this.isComponent(current) && !this.isList(current);\n      }.bind(util);\n      for (let i = 0, len = selectedFormats.length, newCell, fTag, isCell, next, originParent, nextParent, parentTag, siblingTag, rangeTag; i < len; i++) {\n        fTag = selectedFormats[i];\n        if (fTag.childNodes.length === 0 && !util._isIgnoreNodeChange(fTag)) {\n          util.removeItem(fTag);\n          continue;\n        }\n        next = selectedFormats[i + 1];\n        originParent = fTag.parentNode;\n        nextParent = next ? next.parentNode : null;\n        isCell = util.isListCell(fTag);\n        rangeTag = util.isRangeFormatElement(originParent) ? originParent : null;\n        parentTag = isCell && !util.isWysiwygDiv(originParent) ? originParent.parentNode : originParent;\n        siblingTag = isCell && !util.isWysiwygDiv(originParent) ? !next || util.isListCell(parentTag) ? originParent : originParent.nextSibling : fTag.nextSibling;\n        newCell = util.createElement('LI');\n        util.copyFormatAttributes(newCell, fTag);\n        if (i === 0 && originRange.sc === fTag) {\n          originRange.sc = newCell;\n        }\n        if (i === len - 1 && originRange.ec === fTag) {\n          originRange.ec = newCell;\n        }\n        if (util.isComponent(fTag)) {\n          const isHR = /^HR$/i.test(fTag.nodeName);\n          if (!isHR) newCell.innerHTML = '<br>';\n          newCell.innerHTML += fTag.outerHTML;\n          if (isHR) newCell.innerHTML += '<br>';\n        } else {\n          const fChildren = fTag.childNodes;\n          while (fChildren[0]) {\n            newCell.appendChild(fChildren[0]);\n          }\n        }\n        list.appendChild(newCell);\n        if (!next) lastList = list;\n        if (!next || parentTag !== nextParent || util.isRangeFormatElement(siblingTag)) {\n          if (!firstList) firstList = list;\n          if ((!mergeTop || !next || parentTag !== nextParent) && !(next && util.isList(nextParent) && nextParent === originParent)) {\n            if (list.parentNode !== parentTag) parentTag.insertBefore(list, siblingTag);\n          }\n        }\n        util.removeItem(fTag);\n        if (mergeTop && topNumber === null) topNumber = list.children.length - 1;\n        if (next && (util.getRangeFormatElement(nextParent, passComponent) !== util.getRangeFormatElement(originParent, passComponent) || util.isList(nextParent) && util.isList(originParent) && util.getElementDepth(nextParent) !== util.getElementDepth(originParent))) {\n          list = util.createElement(command);\n        }\n        if (rangeTag && rangeTag.children.length === 0) util.removeItem(rangeTag);\n      }\n      if (topNumber) {\n        firstList = firstList.children[topNumber];\n      }\n      if (mergeBottom) {\n        bottomNumber = list.children.length - 1;\n        list.innerHTML += bottomEl.innerHTML;\n        lastList = list.children[bottomNumber];\n        util.removeItem(bottomEl);\n      }\n    }\n    this.effectNode = null;\n    return !isCollapsed ? originRange : afterRange;\n  },\n  _detachNested: function (cells) {\n    const first = cells[0];\n    const last = cells[cells.length - 1];\n    const next = last.nextElementSibling;\n    const originList = first.parentNode;\n    const sibling = originList.parentNode.nextElementSibling;\n    const parentNode = originList.parentNode.parentNode;\n    for (let c = 0, cLen = cells.length; c < cLen; c++) {\n      parentNode.insertBefore(cells[c], sibling);\n    }\n    if (next && originList.children.length > 0) {\n      const newList = originList.cloneNode(false);\n      const children = originList.childNodes;\n      const index = this.util.getPositionIndex(next);\n      while (children[index]) {\n        newList.appendChild(children[index]);\n      }\n      last.appendChild(newList);\n    }\n    if (originList.children.length === 0) this.util.removeItem(originList);\n    this.util.mergeSameTags(parentNode);\n    const edge = this.util.getEdgeChildNodes(first, last);\n    return {\n      cc: first.parentNode,\n      sc: edge.sc,\n      ec: edge.ec\n    };\n  },\n  editInsideList: function (remove, selectedCells) {\n    selectedCells = !selectedCells ? this.getSelectedElements().filter(function (el) {\n      return this.isListCell(el);\n    }.bind(this.util)) : selectedCells;\n    const cellsLen = selectedCells.length;\n    if (cellsLen === 0 || !remove && !this.util.isListCell(selectedCells[0].previousElementSibling) && !this.util.isListCell(selectedCells[cellsLen - 1].nextElementSibling)) {\n      return {\n        sc: selectedCells[0],\n        so: 0,\n        ec: selectedCells[cellsLen - 1],\n        eo: 1\n      };\n    }\n    let originList = selectedCells[0].parentNode;\n    let lastCell = selectedCells[cellsLen - 1];\n    let range = null;\n    if (remove) {\n      if (originList !== lastCell.parentNode && this.util.isList(lastCell.parentNode.parentNode) && lastCell.nextElementSibling) {\n        lastCell = lastCell.nextElementSibling;\n        while (lastCell) {\n          selectedCells.push(lastCell);\n          lastCell = lastCell.nextElementSibling;\n        }\n      }\n      range = this.plugins.list.editList.call(this, originList.nodeName.toUpperCase(), selectedCells, true);\n    } else {\n      let innerList = this.util.createElement(originList.nodeName);\n      let prev = selectedCells[0].previousElementSibling;\n      let next = lastCell.nextElementSibling;\n      const nodePath = {\n        s: null,\n        e: null,\n        sl: originList,\n        el: originList\n      };\n      for (let i = 0, len = cellsLen, c; i < len; i++) {\n        c = selectedCells[i];\n        if (c.parentNode !== originList) {\n          this.plugins.list._insiedList.call(this, originList, innerList, prev, next, nodePath);\n          originList = c.parentNode;\n          innerList = this.util.createElement(originList.nodeName);\n        }\n        prev = c.previousElementSibling;\n        next = c.nextElementSibling;\n        innerList.appendChild(c);\n      }\n      this.plugins.list._insiedList.call(this, originList, innerList, prev, next, nodePath);\n      const sc = this.util.getNodeFromPath(nodePath.s, nodePath.sl);\n      const ec = this.util.getNodeFromPath(nodePath.e, nodePath.el);\n      range = {\n        sc: sc,\n        so: 0,\n        ec: ec,\n        eo: ec.textContent.length\n      };\n    }\n    return range;\n  },\n  _insiedList: function (originList, innerList, prev, next, nodePath) {\n    let insertPrev = false;\n    if (prev && innerList.tagName === prev.tagName) {\n      const children = innerList.children;\n      while (children[0]) {\n        prev.appendChild(children[0]);\n      }\n      innerList = prev;\n      insertPrev = true;\n    }\n    if (next && innerList.tagName === next.tagName) {\n      const children = next.children;\n      while (children[0]) {\n        innerList.appendChild(children[0]);\n      }\n      const temp = next.nextElementSibling;\n      next.parentNode.removeChild(next);\n      next = temp;\n    }\n    if (!insertPrev) {\n      if (this.util.isListCell(prev)) {\n        originList = prev;\n        next = null;\n      }\n      originList.insertBefore(innerList, next);\n      if (!nodePath.s) {\n        nodePath.s = this.util.getNodePath(innerList.firstElementChild.firstChild, originList, null);\n        nodePath.sl = originList;\n      }\n      const slPath = originList.contains(nodePath.sl) ? this.util.getNodePath(nodePath.sl, originList) : null;\n      nodePath.e = this.util.getNodePath(innerList.lastElementChild.firstChild, originList, null);\n      nodePath.el = originList;\n      this.util.mergeSameTags(originList, [nodePath.s, nodePath.e, slPath], false);\n      this.util.mergeNestedTags(originList);\n      if (slPath) nodePath.sl = this.util.getNodeFromPath(slPath, originList);\n    }\n    return innerList;\n  },\n  pickup: function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    let target = e.target;\n    let command = '';\n    while (!command && !/^UL$/i.test(target.tagName)) {\n      command = target.getAttribute('data-command');\n      target = target.parentNode;\n    }\n    if (!command) return;\n    const range = this.plugins.list.editList.call(this, command, null, false);\n    if (range) this.setRange(range.sc, range.so, range.ec, range.eo);\n    this.submenuOff();\n\n    // history stack\n    this.history.push(false);\n  }\n};","map":{"version":3,"names":["name","display","add","core","targetElement","context","list","targetButton","_list","currentList","icons","bullets","list_bullets","number","list_number","listDiv","setSubmenu","listUl","querySelector","addEventListener","pickup","bind","querySelectorAll","initMenuTarget","lang","util","createElement","className","innerHTML","toolbar","orderList","unorderList","active","element","button","icon","firstElementChild","isList","nodeName","setAttribute","addClass","test","changeElement","removeAttribute","removeClass","on","listContext","getAttribute","i","len","length","editList","command","selectedCells","detach","range","getRange","selectedFormats","getSelectedElementsAndComponents","getRange_addLine","sortByDepth","firstSel","lastSel","topEl","isListCell","isComponent","previousElementSibling","parentNode","bottomEl","nextElementSibling","isCollapsed","collapsed","originRange","sc","startContainer","so","endContainer","onlyZeroWidthSpace","startOffset","endOffset","ec","eo","afterRange","isRemove","getRangeFormatElement","current","tagName","toUpperCase","j","contains","splice","currentFormat","cancel","rangeArr","tempList","passComponent","r","o","f","getParentElement","plugins","_detachNested","call","detachRangeFormatElement","push","topElParent","bottomElParent","isWysiwygDiv","mergeTop","mergeBottom","firstList","lastList","topNumber","bottomNumber","newCell","fTag","isCell","next","originParent","nextParent","parentTag","siblingTag","rangeTag","childNodes","_isIgnoreNodeChange","removeItem","isRangeFormatElement","nextSibling","copyFormatAttributes","isHR","outerHTML","fChildren","appendChild","insertBefore","children","getElementDepth","effectNode","cells","first","last","originList","sibling","c","cLen","newList","cloneNode","index","getPositionIndex","mergeSameTags","edge","getEdgeChildNodes","cc","editInsideList","remove","getSelectedElements","filter","el","cellsLen","lastCell","innerList","prev","nodePath","s","e","sl","_insiedList","getNodeFromPath","textContent","insertPrev","temp","removeChild","getNodePath","firstChild","slPath","lastElementChild","mergeNestedTags","preventDefault","stopPropagation","target","setRange","submenuOff","history"],"sources":["E:/Programming/React/New folder (2)/dynamicArt/dynamic-article/node_modules/suneditor/src/plugins/submenu/list.js"],"sourcesContent":["/*\n * wysiwyg web editor\n *\n * suneditor.js\n * Copyright 2017 JiHong Lee.\n * MIT license.\n */\n'use strict';\n\nexport default {\n    name: 'list',\n    display: 'submenu',\n    add: function (core, targetElement) {\n        const context = core.context;\n        context.list = {\n            targetButton: targetElement,\n            _list: null,\n            currentList: '',\n            icons: {\n                bullets: core.icons.list_bullets,\n                number: core.icons.list_number\n            }\n        };\n\n        /** set submenu */\n        let listDiv = this.setSubmenu(core);\n        let listUl = listDiv.querySelector('ul');\n\n        /** add event listeners */\n        listUl.addEventListener('click', this.pickup.bind(core));\n        context.list._list = listUl.querySelectorAll('li button');\n\n        /** append target button menu */\n        core.initMenuTarget(this.name, targetElement, listDiv);\n\n        /** empty memory */\n        listDiv = null, listUl = null;\n    },\n\n    setSubmenu: function (core) {\n        const lang = core.lang;\n        const listDiv = core.util.createElement('DIV');\n\n        listDiv.className = 'se-submenu se-list-layer';\n        listDiv.innerHTML = '' +\n            '<div class=\"se-list-inner\">' +\n                '<ul class=\"se-list-basic\">' +\n                    '<li><button type=\"button\" class=\"se-btn-list se-tooltip\" data-command=\"OL\" title=\"' + lang.toolbar.orderList + '\" aria-label=\"' + lang.toolbar.orderList + '\">' +\n                        core.icons.list_number +\n                    '</button></li>' +\n                    '<li><button type=\"button\" class=\"se-btn-list se-tooltip\" data-command=\"UL\" title=\"' + lang.toolbar.unorderList + '\" aria-label=\"' + lang.toolbar.unorderList + '\">' +\n                        core.icons.list_bullets +\n                    '</button></li>' +\n                '</ul>' +\n            '</div>';\n\n        return listDiv;\n    },\n\n     /**\n     * @Override core\n     */\n    active: function (element) {\n        const button = this.context.list.targetButton;\n        const icon = button.firstElementChild;\n        const util = this.util;\n\n        if (util.isList(element)) {\n            const nodeName = element.nodeName;\n            button.setAttribute('data-focus', nodeName);\n            util.addClass(button, 'active');\n            if (/UL/i.test(nodeName)) {\n                util.changeElement(icon, this.context.list.icons.bullets);\n            } else {\n                util.changeElement(icon, this.context.list.icons.number);\n            }\n            \n            return true;\n        } else {\n            button.removeAttribute('data-focus');\n            util.changeElement(icon, this.context.list.icons.number);\n            util.removeClass(button, 'active');\n        }\n\n        return false;\n    },\n\n     /**\n     * @Override submenu\n     */\n    on: function () {\n        const listContext = this.context.list;\n        const list = listContext._list;\n        const currentList = listContext.targetButton.getAttribute('data-focus') || '';\n\n        if (currentList !== listContext.currentList) {\n            for (let i = 0, len = list.length; i < len; i++) {\n                if (currentList === list[i].getAttribute('data-command')) {\n                    this.util.addClass(list[i], 'active');\n                } else {\n                    this.util.removeClass(list[i], 'active');\n                }\n            }\n\n            listContext.currentList = currentList;\n        }\n    },\n\n    editList: function (command, selectedCells, detach) {\n        let range = this.getRange();\n        let selectedFormats = !selectedCells ? this.getSelectedElementsAndComponents(false) : selectedCells;\n\n        if (selectedFormats.length === 0) {\n            if (selectedCells) return;\n            range = this.getRange_addLine(range, null);\n            selectedFormats = this.getSelectedElementsAndComponents(false);\n            if (selectedFormats.length === 0) return;\n        }\n        \n        const util = this.util;\n        util.sortByDepth(selectedFormats, true);\n\n        // merge\n        let firstSel = selectedFormats[0];\n        let lastSel = selectedFormats[selectedFormats.length - 1];\n        let topEl = (util.isListCell(firstSel) || util.isComponent(firstSel)) && !firstSel.previousElementSibling ? firstSel.parentNode.previousElementSibling : firstSel.previousElementSibling;\n        let bottomEl = (util.isListCell(lastSel) || util.isComponent(lastSel)) && !lastSel.nextElementSibling ? lastSel.parentNode.nextElementSibling : lastSel.nextElementSibling;\n\n        const isCollapsed = range.collapsed;\n        const originRange = {\n            sc: range.startContainer,\n            so: (range.startContainer === range.endContainer && util.onlyZeroWidthSpace(range.startContainer) && range.startOffset === 0 && range.endOffset === 1) ? range.endOffset : range.startOffset,\n            ec: range.endContainer,\n            eo: range.endOffset\n        };\n        let afterRange = null;\n        let isRemove = true;\n\n        for (let i = 0, len = selectedFormats.length; i < len; i++) {\n            if (!util.isList(util.getRangeFormatElement(selectedFormats[i], function (current) {\n                return this.getRangeFormatElement(current) && current !== selectedFormats[i];\n            }.bind(util)))) {\n                isRemove = false;\n                break;\n            }\n        }\n\n        if (isRemove && (!topEl || (firstSel.tagName !== topEl.tagName || command !== topEl.tagName.toUpperCase())) && (!bottomEl || (lastSel.tagName !== bottomEl.tagName || command !== bottomEl.tagName.toUpperCase()))) {\n            if (detach) {\n                for (let i = 0, len = selectedFormats.length; i < len; i++) {\n                    for (let j = i - 1; j >= 0; j--) {\n                        if (selectedFormats[j].contains(selectedFormats[i])) {\n                            selectedFormats.splice(i, 1);\n                            i--; len--;\n                            break;\n                        }\n                    }\n                }\n            }\n\n            const currentFormat = util.getRangeFormatElement(firstSel);\n            const cancel = currentFormat && currentFormat.tagName === command;\n            let rangeArr, tempList;\n            const passComponent = function (current) {\n                return !this.isComponent(current);\n            }.bind(util);\n            \n            if (!cancel) tempList = util.createElement(command);\n\n            for (let i = 0, len = selectedFormats.length, r, o; i < len; i++) {\n                o = util.getRangeFormatElement(selectedFormats[i], passComponent);\n                if (!o || !util.isList(o)) continue;\n\n                if (!r) {\n                    r = o;\n                    rangeArr = {r: r, f: [util.getParentElement(selectedFormats[i], 'LI')]};\n                } else {\n                    if (r !== o) {\n                        if (detach && util.isListCell(o.parentNode)) {\n                            this.plugins.list._detachNested.call(this, rangeArr.f);\n                        } else {\n                            afterRange = this.detachRangeFormatElement(rangeArr.f[0].parentNode, rangeArr.f, tempList, false, true);\n                        }\n                        \n                        o = selectedFormats[i].parentNode;\n                        if (!cancel) tempList = util.createElement(command);\n                        \n                        r = o;\n                        rangeArr = {r: r, f: [util.getParentElement(selectedFormats[i], 'LI')]};\n                    } else {\n                        rangeArr.f.push(util.getParentElement(selectedFormats[i], 'LI'));\n                    }\n                }\n                \n                if (i === len - 1) {\n                    if (detach && util.isListCell(o.parentNode)) {\n                        this.plugins.list._detachNested.call(this, rangeArr.f);\n                    } else {\n                        afterRange = this.detachRangeFormatElement(rangeArr.f[0].parentNode, rangeArr.f, tempList, false, true);\n                    }\n                }\n            }\n        } else {\n            const topElParent = topEl ? topEl.parentNode : topEl;\n            const bottomElParent = bottomEl ? bottomEl.parentNode : bottomEl;\n            topEl = topElParent && !util.isWysiwygDiv(topElParent) && topElParent.nodeName === command ? topElParent : topEl;\n            bottomEl = bottomElParent && !util.isWysiwygDiv(bottomElParent) && bottomElParent.nodeName === command ? bottomElParent : bottomEl;\n\n            const mergeTop = topEl && topEl.tagName === command;\n            const mergeBottom = bottomEl && bottomEl.tagName === command;\n            \n            let list = mergeTop ? topEl : util.createElement(command);\n            let firstList = null;\n            let lastList = null;\n            let topNumber = null;\n            let bottomNumber = null;\n\n            const passComponent = function (current) {\n                return !this.isComponent(current) && !this.isList(current);\n            }.bind(util);\n            \n            for (let i = 0, len = selectedFormats.length, newCell, fTag, isCell, next, originParent, nextParent, parentTag, siblingTag, rangeTag; i < len; i++) {\n                fTag = selectedFormats[i];\n                if (fTag.childNodes.length === 0 && !util._isIgnoreNodeChange(fTag)) {\n                    util.removeItem(fTag);\n                    continue;\n                }\n                next = selectedFormats[i + 1];\n                originParent = fTag.parentNode;\n                nextParent = next ? next.parentNode : null;\n                isCell = util.isListCell(fTag);\n                rangeTag = util.isRangeFormatElement(originParent) ? originParent : null;\n                parentTag = isCell && !util.isWysiwygDiv(originParent) ? originParent.parentNode : originParent;\n                siblingTag = isCell && !util.isWysiwygDiv(originParent) ? (!next || util.isListCell(parentTag)) ? originParent : originParent.nextSibling : fTag.nextSibling;\n\n                newCell = util.createElement('LI');\n                util.copyFormatAttributes(newCell, fTag);\n\n                if (i ===  0 && originRange.sc === fTag) {\n                    originRange.sc = newCell;\n                }\n                if (i === len - 1 && originRange.ec === fTag) {\n                    originRange.ec = newCell;\n                }\n\n                if (util.isComponent(fTag)) {\n                    const isHR = /^HR$/i.test(fTag.nodeName);\n                    if (!isHR) newCell.innerHTML = '<br>';\n                    newCell.innerHTML += fTag.outerHTML;\n                    if (isHR) newCell.innerHTML += '<br>';\n                } else {\n                    const fChildren = fTag.childNodes;\n                    while (fChildren[0]) {\n                        newCell.appendChild(fChildren[0]);\n                    }\n                }\n                list.appendChild(newCell);\n\n                if (!next) lastList = list;\n                if (!next || parentTag !== nextParent || util.isRangeFormatElement(siblingTag)) {\n                    if (!firstList) firstList = list;\n                    if ((!mergeTop || !next || parentTag !== nextParent) && !(next && util.isList(nextParent) && nextParent === originParent)) {\n                        if (list.parentNode !== parentTag) parentTag.insertBefore(list, siblingTag);\n                    }\n                }\n\n                util.removeItem(fTag);\n                if (mergeTop && topNumber === null) topNumber = list.children.length - 1;\n                if (next && (util.getRangeFormatElement(nextParent, passComponent) !== util.getRangeFormatElement(originParent, passComponent) || (util.isList(nextParent) && util.isList(originParent) && util.getElementDepth(nextParent) !== util.getElementDepth(originParent)))) {\n                    list = util.createElement(command);\n                }\n\n                if (rangeTag && rangeTag.children.length === 0) util.removeItem(rangeTag);\n            }\n\n            if (topNumber) {\n                firstList = firstList.children[topNumber];\n            }\n\n            if (mergeBottom) {\n                bottomNumber = list.children.length - 1;\n                list.innerHTML += bottomEl.innerHTML;\n                lastList = list.children[bottomNumber];\n                util.removeItem(bottomEl);\n            }\n        }\n        \n        this.effectNode = null;\n        return !isCollapsed ? originRange : afterRange;\n    },\n\n    _detachNested: function (cells) {\n        const first = cells[0];\n        const last = cells[cells.length - 1];\n        const next = last.nextElementSibling;\n        const originList = first.parentNode;\n        const sibling = originList.parentNode.nextElementSibling;\n        const parentNode = originList.parentNode.parentNode;\n\n        for (let c = 0, cLen = cells.length; c < cLen; c++) {\n            parentNode.insertBefore(cells[c], sibling);\n        }\n\n        if (next && originList.children.length > 0) {\n            const newList = originList.cloneNode(false);\n            const children = originList.childNodes;\n            const index = this.util.getPositionIndex(next);\n            while (children[index]) {\n                newList.appendChild(children[index]);\n            }\n            last.appendChild(newList);\n        }\n\n        if (originList.children.length === 0) this.util.removeItem(originList);\n        this.util.mergeSameTags(parentNode);\n\n        const edge = this.util.getEdgeChildNodes(first, last);\n\n        return {\n            cc: first.parentNode,\n            sc: edge.sc,\n            ec: edge.ec\n        };\n    },\n\n    editInsideList: function (remove, selectedCells) {\n        selectedCells = !selectedCells ? this.getSelectedElements().filter(function (el) { return this.isListCell(el); }.bind(this.util)) : selectedCells;\n        const cellsLen = selectedCells.length;\n        if (cellsLen === 0 || (!remove && (!this.util.isListCell(selectedCells[0].previousElementSibling) && !this.util.isListCell(selectedCells[cellsLen - 1].nextElementSibling)))) {\n            return {\n                sc: selectedCells[0],\n                so: 0,\n                ec: selectedCells[cellsLen - 1],\n                eo: 1\n            };\n        }\n\n        let originList = selectedCells[0].parentNode;\n        let lastCell = selectedCells[cellsLen - 1];\n        let range = null;\n\n        if (remove) {\n            if (originList !== lastCell.parentNode && this.util.isList(lastCell.parentNode.parentNode) && lastCell.nextElementSibling) {\n                lastCell = lastCell.nextElementSibling;\n                while (lastCell) {\n                    selectedCells.push(lastCell);\n                    lastCell = lastCell.nextElementSibling;\n                }\n            }\n            range = this.plugins.list.editList.call(this, originList.nodeName.toUpperCase(), selectedCells, true);\n        } else {\n            let innerList = this.util.createElement(originList.nodeName);\n            let prev = selectedCells[0].previousElementSibling;\n            let next = lastCell.nextElementSibling;\n            const nodePath = { s: null, e: null, sl: originList, el: originList };\n\n            for (let i = 0, len = cellsLen, c; i < len; i++) {\n                c = selectedCells[i];\n                if (c.parentNode !== originList) {\n                    this.plugins.list._insiedList.call(this, originList, innerList, prev, next, nodePath);\n                    originList = c.parentNode;\n                    innerList = this.util.createElement(originList.nodeName);\n                }\n                \n                prev = c.previousElementSibling;\n                next = c.nextElementSibling;\n                innerList.appendChild(c);\n            }\n            \n            this.plugins.list._insiedList.call(this, originList, innerList, prev, next, nodePath);\n\n            const sc = this.util.getNodeFromPath(nodePath.s, nodePath.sl);\n            const ec = this.util.getNodeFromPath(nodePath.e, nodePath.el);\n            range = {\n                sc: sc,\n                so: 0,\n                ec: ec,\n                eo: ec.textContent.length\n            };\n        }\n\n        return range;\n    },\n\n    _insiedList: function (originList, innerList, prev, next, nodePath) {\n        let insertPrev = false;\n\n        if (prev && innerList.tagName === prev.tagName) {\n            const children = innerList.children;\n            while (children[0]) {\n                prev.appendChild(children[0]);\n            }\n\n            innerList = prev;\n            insertPrev = true;\n        }\n\n        if (next && innerList.tagName === next.tagName) {\n            const children = next.children;\n            while (children[0]) {\n                innerList.appendChild(children[0]);\n            }\n\n            const temp = next.nextElementSibling;\n            next.parentNode.removeChild(next);\n            next = temp;\n        }\n\n        if (!insertPrev) {\n            if (this.util.isListCell(prev)) {\n                originList = prev;\n                next = null;\n            }\n\n            originList.insertBefore(innerList, next);\n\n            if (!nodePath.s) {\n                nodePath.s = this.util.getNodePath(innerList.firstElementChild.firstChild, originList, null);\n                nodePath.sl = originList;\n            }\n\n            const slPath = originList.contains(nodePath.sl) ? this.util.getNodePath(nodePath.sl, originList) : null;\n            nodePath.e = this.util.getNodePath(innerList.lastElementChild.firstChild, originList, null);\n            nodePath.el = originList;\n\n            this.util.mergeSameTags(originList, [nodePath.s, nodePath.e, slPath], false);\n            this.util.mergeNestedTags(originList);\n            if (slPath) nodePath.sl = this.util.getNodeFromPath(slPath, originList);\n        }\n\n        return innerList;\n    },\n\n    pickup: function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        let target = e.target;\n        let command = '';\n\n        while (!command && !/^UL$/i.test(target.tagName)) {\n            command = target.getAttribute('data-command');\n            target = target.parentNode;\n        }\n\n        if (!command) return;\n\n        const range = this.plugins.list.editList.call(this, command, null, false);\n        if (range) this.setRange(range.sc, range.so, range.ec, range.eo);\n\n        this.submenuOff();\n\n        // history stack\n        this.history.push(false);\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}