{"ast":null,"code":"/*\n * wysiwyg web editor\n *\n * suneditor.js\n * Copyright 2017 JiHong Lee.\n * MIT license.\n */\n'use strict';\n\n(function (global, factory) {\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = global.document ? factory(global, true) : function (w) {\n      if (!w.document) {\n        throw new Error('SUNEDITOR_MODULES a window with a document');\n      }\n      return factory(w);\n    };\n  } else {\n    factory(global);\n  }\n})(typeof window !== 'undefined' ? window : this, function (window, noGlobal) {\n  const fileManager = {\n    name: 'fileManager',\n    _xmlHttp: null,\n    _checkMediaComponent: function (tag) {\n      if (/IMG/i.test(tag)) {\n        return !/FIGURE/i.test(tag.parentElement.nodeName) || !/FIGURE/i.test(tag.parentElement.parentElement.nodeName);\n      }\n      return true;\n    },\n    /**\n     * @description Upload the file to the server.\n     * @param {String} uploadUrl Upload server url\n     * @param {Object|null} uploadHeader Request header\n     * @param {FormData} formData FormData in body\n     * @param {Function|null} callBack Success call back function\n     * @param {Function|null} errorCallBack Error call back function\n     * @example this.plugins.fileManager.upload.call(this, imageUploadUrl, this.options.imageUploadHeader, formData, this.plugins.image.callBack_imgUpload.bind(this, info), this.functions.onImageUploadError);\n     */\n    upload: function (uploadUrl, uploadHeader, formData, callBack, errorCallBack) {\n      this.showLoading();\n      const filePlugin = this.plugins.fileManager;\n      const xmlHttp = filePlugin._xmlHttp = this.util.getXMLHttpRequest();\n      xmlHttp.onreadystatechange = filePlugin._callBackUpload.bind(this, xmlHttp, callBack, errorCallBack);\n      xmlHttp.open('post', uploadUrl, true);\n      if (uploadHeader !== null && typeof uploadHeader === 'object' && this._w.Object.keys(uploadHeader).length > 0) {\n        for (let key in uploadHeader) {\n          xmlHttp.setRequestHeader(key, uploadHeader[key]);\n        }\n      }\n      xmlHttp.send(formData);\n    },\n    _callBackUpload: function (xmlHttp, callBack, errorCallBack) {\n      if (xmlHttp.readyState === 4) {\n        if (xmlHttp.status === 200) {\n          try {\n            callBack(xmlHttp);\n          } catch (e) {\n            throw Error('[SUNEDITOR.fileManager.upload.callBack.fail] cause : \"' + e.message + '\"');\n          } finally {\n            this.closeLoading();\n          }\n        } else {\n          // exception\n          this.closeLoading();\n          const res = !xmlHttp.responseText ? xmlHttp : JSON.parse(xmlHttp.responseText);\n          if (typeof errorCallBack !== 'function' || errorCallBack('', res, this)) {\n            const err = '[SUNEDITOR.fileManager.upload.serverException] status: ' + xmlHttp.status + ', response: ' + (res.errorMessage || xmlHttp.responseText);\n            this.functions.noticeOpen(err);\n            throw Error(err);\n          }\n        }\n      }\n    },\n    /**\n     * @description Checke the file's information and modify the tag that does not fit the format.\n     * @param {String} pluginName Plugin name\n     * @param {Array} tagNames Tag array to check\n     * @param {Function|null} uploadEventHandler Event handler to process updated file info after checking (used in \"setInfo\")\n     * @param {Function} modifyHandler A function to modify a tag that does not fit the format (Argument value: Tag element)\n     * @param {Boolean} resizing True if the plugin is using a resizing module\n     * @example \n     * const modifyHandler = function (tag) {\n     *      imagePlugin.onModifyMode.call(this, tag, null);\n     *      imagePlugin.openModify.call(this, true);\n     *      imagePlugin.update_image.call(this, true, false, true);\n     *  }.bind(this);\n     *  this.plugins.fileManager.checkInfo.call(this, 'image', ['img'], this.functions.onImageUpload, modifyHandler, true);\n     */\n    checkInfo: function (pluginName, tagNames, uploadEventHandler, modifyHandler, resizing) {\n      let tags = [];\n      for (let i = 0, len = tagNames.length; i < len; i++) {\n        tags = tags.concat([].slice.call(this.context.element.wysiwyg.querySelectorAll(tagNames[i] + ':not([data-se-embed=\"true\"])')));\n      }\n      const fileManagerPlugin = this.plugins.fileManager;\n      const context = this.context[pluginName];\n      const infoList = context._infoList;\n      const setFileInfo = fileManagerPlugin.setInfo.bind(this);\n      if (tags.length === infoList.length) {\n        // reset\n        if (this._componentsInfoReset) {\n          for (let i = 0, len = tags.length; i < len; i++) {\n            setFileInfo(pluginName, tags[i], uploadEventHandler, null, resizing);\n          }\n          return;\n        } else {\n          let infoUpdate = false;\n          for (let i = 0, len = infoList.length, info; i < len; i++) {\n            info = infoList[i];\n            if (tags.filter(function (t) {\n              return info.src === t.src && info.index.toString() === t.getAttribute('data-index');\n            }).length === 0) {\n              infoUpdate = true;\n              break;\n            }\n          }\n          // pass\n          if (!infoUpdate) return;\n        }\n      }\n\n      // check\n      const _resize_plugin = resizing ? this.context.resizing._resize_plugin : '';\n      if (resizing) this.context.resizing._resize_plugin = pluginName;\n      const currentTags = [];\n      const infoIndex = [];\n      for (let i = 0, len = infoList.length; i < len; i++) {\n        infoIndex[i] = infoList[i].index;\n      }\n      context.__updateTags = tags;\n      while (tags.length > 0) {\n        const tag = tags.shift();\n        if (!this.util.getParentElement(tag, this.util.isMediaComponent) || !fileManagerPlugin._checkMediaComponent(tag)) {\n          currentTags.push(context._infoIndex);\n          modifyHandler(tag);\n        } else if (!tag.getAttribute('data-index') || infoIndex.indexOf(tag.getAttribute('data-index') * 1) < 0) {\n          currentTags.push(context._infoIndex);\n          tag.removeAttribute('data-index');\n          setFileInfo(pluginName, tag, uploadEventHandler, null, resizing);\n        } else {\n          currentTags.push(tag.getAttribute('data-index') * 1);\n        }\n      }\n      for (let i = 0, dataIndex; i < infoList.length; i++) {\n        dataIndex = infoList[i].index;\n        if (currentTags.indexOf(dataIndex) > -1) continue;\n        infoList.splice(i, 1);\n        if (typeof uploadEventHandler === 'function') uploadEventHandler(null, dataIndex, 'delete', null, 0, this);\n        i--;\n      }\n      if (resizing) this.context.resizing._resize_plugin = _resize_plugin;\n    },\n    /**\n     * @description Create info object of file and add it to \"_infoList\" (this.context[pluginName]._infoList[])\n     * @param {String} pluginName Plugin name \n     * @param {Element} element \n     * @param {Function|null} uploadEventHandler Event handler to process updated file info (created in setInfo)\n     * @param {Object|null} file \n     * @param {Boolean} resizing True if the plugin is using a resizing module\n     * @example \n     * uploadCallBack {.. file = { name: fileList[i].name, size: fileList[i].size };\n     * this.plugins.fileManager.setInfo.call(this, 'image', oImg, this.functions.onImageUpload, file, true);\n     */\n    setInfo: function (pluginName, element, uploadEventHandler, file, resizing) {\n      const _resize_plugin = resizing ? this.context.resizing._resize_plugin : '';\n      if (resizing) this.context.resizing._resize_plugin = pluginName;\n      const plguin = this.plugins[pluginName];\n      const context = this.context[pluginName];\n      const infoList = context._infoList;\n      let dataIndex = element.getAttribute('data-index');\n      let info = null;\n      let state = '';\n      if (!file) {\n        file = {\n          'name': element.getAttribute('data-file-name') || (typeof element.src === 'string' ? element.src.split('/').pop() : ''),\n          'size': element.getAttribute('data-file-size') || 0\n        };\n      }\n\n      // create\n      if (!dataIndex || this._componentsInfoInit) {\n        state = 'create';\n        dataIndex = context._infoIndex++;\n        element.setAttribute('data-index', dataIndex);\n        element.setAttribute('data-file-name', file.name);\n        element.setAttribute('data-file-size', file.size);\n        info = {\n          src: element.src,\n          index: dataIndex * 1,\n          name: file.name,\n          size: file.size\n        };\n        infoList.push(info);\n      } else {\n        // update\n        state = 'update';\n        dataIndex *= 1;\n        for (let i = 0, len = infoList.length; i < len; i++) {\n          if (dataIndex === infoList[i].index) {\n            info = infoList[i];\n            break;\n          }\n        }\n        if (!info) {\n          dataIndex = context._infoIndex++;\n          info = {\n            index: dataIndex\n          };\n          infoList.push(info);\n        }\n        info.src = element.src;\n        info.name = element.getAttribute(\"data-file-name\");\n        info.size = element.getAttribute(\"data-file-size\") * 1;\n      }\n\n      // method bind\n      info.element = element;\n      info.delete = plguin.destroy.bind(this, element);\n      info.select = function (element) {\n        element.scrollIntoView(true);\n        this._w.setTimeout(plguin.select.bind(this, element));\n      }.bind(this, element);\n      if (resizing) {\n        if (!element.getAttribute('origin-size') && element.naturalWidth) {\n          element.setAttribute('origin-size', element.naturalWidth + ',' + element.naturalHeight);\n        }\n        if (!element.getAttribute('data-origin')) {\n          const container = this.util.getParentElement(element, this.util.isMediaComponent);\n          const cover = this.util.getParentElement(element, 'FIGURE');\n          const w = this.plugins.resizing._module_getSizeX.call(this, context, element, cover, container);\n          const h = this.plugins.resizing._module_getSizeY.call(this, context, element, cover, container);\n          element.setAttribute('data-origin', w + ',' + h);\n          element.setAttribute('data-size', w + ',' + h);\n        }\n        if (!element.style.width) {\n          const size = (element.getAttribute('data-size') || element.getAttribute('data-origin') || '').split(',');\n          plguin.onModifyMode.call(this, element, null);\n          plguin.applySize.call(this, size[0], size[1]);\n        }\n        this.context.resizing._resize_plugin = _resize_plugin;\n      }\n      if (typeof uploadEventHandler === 'function') uploadEventHandler(element, dataIndex, state, info, --context._uploadFileLength < 0 ? 0 : context._uploadFileLength, this);\n    },\n    /**\n     * @description Delete info object at \"_infoList\"\n     * @param {String} pluginName Plugin name \n     * @param {Number} index index of info object (this.context[pluginName]._infoList[].index)\n     * @param {Function|null} uploadEventHandler Event handler to process updated file info (created in setInfo)\n     */\n    deleteInfo: function (pluginName, index, uploadEventHandler) {\n      if (index >= 0) {\n        const infoList = this.context[pluginName]._infoList;\n        for (let i = 0, len = infoList.length; i < len; i++) {\n          if (index === infoList[i].index) {\n            infoList.splice(i, 1);\n            if (typeof uploadEventHandler === 'function') uploadEventHandler(null, index, 'delete', null, 0, this);\n            return;\n          }\n        }\n      }\n    },\n    /**\n     * @description Reset info object and \"_infoList = []\", \"_infoIndex = 0\"\n     * @param {String} pluginName Plugin name \n     * @param {Function|null} uploadEventHandler Event handler to process updated file info (created in setInfo)\n     */\n    resetInfo: function (pluginName, uploadEventHandler) {\n      const context = this.context[pluginName];\n      if (typeof uploadEventHandler === 'function') {\n        const infoList = context._infoList;\n        for (let i = 0, len = infoList.length; i < len; i++) {\n          uploadEventHandler(null, infoList[i].index, 'delete', null, 0, this);\n        }\n      }\n      context._infoList = [];\n      context._infoIndex = 0;\n    }\n  };\n  if (typeof noGlobal === typeof undefined) {\n    if (!window.SUNEDITOR_MODULES) {\n      Object.defineProperty(window, 'SUNEDITOR_MODULES', {\n        enumerable: true,\n        writable: false,\n        configurable: false,\n        value: {}\n      });\n    }\n    Object.defineProperty(window.SUNEDITOR_MODULES, 'fileManager', {\n      enumerable: true,\n      writable: false,\n      configurable: false,\n      value: fileManager\n    });\n  }\n  return fileManager;\n});","map":{"version":3,"names":["global","factory","module","exports","document","w","Error","window","noGlobal","fileManager","name","_xmlHttp","_checkMediaComponent","tag","test","parentElement","nodeName","upload","uploadUrl","uploadHeader","formData","callBack","errorCallBack","showLoading","filePlugin","plugins","xmlHttp","util","getXMLHttpRequest","onreadystatechange","_callBackUpload","bind","open","_w","Object","keys","length","key","setRequestHeader","send","readyState","status","e","message","closeLoading","res","responseText","JSON","parse","err","errorMessage","functions","noticeOpen","checkInfo","pluginName","tagNames","uploadEventHandler","modifyHandler","resizing","tags","i","len","concat","slice","call","context","element","wysiwyg","querySelectorAll","fileManagerPlugin","infoList","_infoList","setFileInfo","setInfo","_componentsInfoReset","infoUpdate","info","filter","t","src","index","toString","getAttribute","_resize_plugin","currentTags","infoIndex","__updateTags","shift","getParentElement","isMediaComponent","push","_infoIndex","indexOf","removeAttribute","dataIndex","splice","file","plguin","state","split","pop","_componentsInfoInit","setAttribute","size","delete","destroy","select","scrollIntoView","setTimeout","naturalWidth","naturalHeight","container","cover","_module_getSizeX","h","_module_getSizeY","style","width","onModifyMode","applySize","_uploadFileLength","deleteInfo","resetInfo","undefined","SUNEDITOR_MODULES","defineProperty","enumerable","writable","configurable","value"],"sources":["E:/Programming/React/New folder (2)/dynamicArt/dynamic-article/node_modules/suneditor/src/plugins/modules/fileManager.js"],"sourcesContent":["/*\n * wysiwyg web editor\n *\n * suneditor.js\n * Copyright 2017 JiHong Lee.\n * MIT license.\n */\n'use strict';\n\n(function (global, factory) {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        module.exports = global.document ?\n            factory(global, true) :\n            function (w) {\n                if (!w.document) {\n                    throw new Error('SUNEDITOR_MODULES a window with a document');\n                }\n                return factory(w);\n            };\n    } else {\n        factory(global);\n    }\n}(typeof window !== 'undefined' ? window : this, function (window, noGlobal) {\n    const fileManager = {\n        name: 'fileManager',\n        _xmlHttp: null,\n\n        _checkMediaComponent: function (tag) {\n            if (/IMG/i.test(tag)) {\n                return !/FIGURE/i.test(tag.parentElement.nodeName) || !/FIGURE/i.test(tag.parentElement.parentElement.nodeName);\n            }\n            return true;\n        },\n\n        /**\n         * @description Upload the file to the server.\n         * @param {String} uploadUrl Upload server url\n         * @param {Object|null} uploadHeader Request header\n         * @param {FormData} formData FormData in body\n         * @param {Function|null} callBack Success call back function\n         * @param {Function|null} errorCallBack Error call back function\n         * @example this.plugins.fileManager.upload.call(this, imageUploadUrl, this.options.imageUploadHeader, formData, this.plugins.image.callBack_imgUpload.bind(this, info), this.functions.onImageUploadError);\n         */\n        upload: function (uploadUrl, uploadHeader, formData, callBack, errorCallBack) {\n            this.showLoading();\n            const filePlugin = this.plugins.fileManager;\n            const xmlHttp = filePlugin._xmlHttp = this.util.getXMLHttpRequest();\n\n            xmlHttp.onreadystatechange = filePlugin._callBackUpload.bind(this, xmlHttp, callBack, errorCallBack);\n            xmlHttp.open('post', uploadUrl, true);\n            if(uploadHeader !== null && typeof uploadHeader === 'object' && this._w.Object.keys(uploadHeader).length > 0){\n                for(let key in uploadHeader){\n                    xmlHttp.setRequestHeader(key, uploadHeader[key]);\n                }\n            }\n            xmlHttp.send(formData);\n        },\n\n        _callBackUpload: function (xmlHttp, callBack, errorCallBack) {\n            if (xmlHttp.readyState === 4) {\n                if (xmlHttp.status === 200) {\n                    try {\n                        callBack(xmlHttp);\n                    } catch (e) {\n                        throw Error('[SUNEDITOR.fileManager.upload.callBack.fail] cause : \"' + e.message + '\"');\n                    } finally {\n                        this.closeLoading();\n                    }\n                } else { // exception\n                    this.closeLoading();\n                    const res = !xmlHttp.responseText ? xmlHttp : JSON.parse(xmlHttp.responseText);\n                    if (typeof errorCallBack !== 'function' || errorCallBack('', res, this)) {\n                        const err = '[SUNEDITOR.fileManager.upload.serverException] status: ' + xmlHttp.status + ', response: ' + (res.errorMessage || xmlHttp.responseText);\n                        this.functions.noticeOpen(err);\n                        throw Error(err);\n                    }\n                }\n            }\n        },\n        \n        /**\n         * @description Checke the file's information and modify the tag that does not fit the format.\n         * @param {String} pluginName Plugin name\n         * @param {Array} tagNames Tag array to check\n         * @param {Function|null} uploadEventHandler Event handler to process updated file info after checking (used in \"setInfo\")\n         * @param {Function} modifyHandler A function to modify a tag that does not fit the format (Argument value: Tag element)\n         * @param {Boolean} resizing True if the plugin is using a resizing module\n         * @example \n         * const modifyHandler = function (tag) {\n         *      imagePlugin.onModifyMode.call(this, tag, null);\n         *      imagePlugin.openModify.call(this, true);\n         *      imagePlugin.update_image.call(this, true, false, true);\n         *  }.bind(this);\n         *  this.plugins.fileManager.checkInfo.call(this, 'image', ['img'], this.functions.onImageUpload, modifyHandler, true);\n         */\n        checkInfo: function (pluginName, tagNames, uploadEventHandler, modifyHandler, resizing) {\n            let tags = [];\n            for (let i = 0, len = tagNames.length; i < len; i++) {\n                tags = tags.concat([].slice.call(this.context.element.wysiwyg.querySelectorAll(tagNames[i] + ':not([data-se-embed=\"true\"])')));\n            }\n\n            const fileManagerPlugin = this.plugins.fileManager;\n            const context = this.context[pluginName];\n            const infoList = context._infoList;\n            const setFileInfo = fileManagerPlugin.setInfo.bind(this);\n\n            if (tags.length === infoList.length) {\n                // reset\n                if (this._componentsInfoReset) {\n                    for (let i = 0, len = tags.length; i < len; i++) {\n                        setFileInfo(pluginName, tags[i], uploadEventHandler, null, resizing);\n                    }\n                    return ;\n                } else {\n                    let infoUpdate = false;\n                    for (let i = 0, len = infoList.length, info; i < len; i++) {\n                        info = infoList[i];\n                        if (tags.filter(function (t) { return info.src === t.src && info.index.toString() === t.getAttribute('data-index'); }).length === 0) {\n                            infoUpdate = true;\n                            break;\n                        }\n                    }\n                    // pass\n                    if (!infoUpdate) return;\n                }\n            }\n\n            // check\n            const _resize_plugin = resizing ? this.context.resizing._resize_plugin : '';\n            if (resizing) this.context.resizing._resize_plugin = pluginName;\n            const currentTags = [];\n            const infoIndex = [];\n            for (let i = 0, len = infoList.length; i < len; i++) {\n                infoIndex[i] = infoList[i].index;\n            }\n            context.__updateTags = tags;\n\n            while (tags.length > 0) {\n                const tag = tags.shift();\n                if (!this.util.getParentElement(tag, this.util.isMediaComponent) || !fileManagerPlugin._checkMediaComponent(tag)) {\n                    currentTags.push(context._infoIndex);\n                    modifyHandler(tag);\n                } else if (!tag.getAttribute('data-index') || infoIndex.indexOf(tag.getAttribute('data-index') * 1) < 0) {\n                    currentTags.push(context._infoIndex);\n                    tag.removeAttribute('data-index');\n                    setFileInfo(pluginName, tag, uploadEventHandler, null, resizing);\n                } else {\n                    currentTags.push(tag.getAttribute('data-index') * 1);\n                }\n            }\n\n            for (let i = 0, dataIndex; i < infoList.length; i++) {\n                dataIndex = infoList[i].index;\n                if (currentTags.indexOf(dataIndex) > -1) continue;\n\n                infoList.splice(i, 1);\n                if (typeof uploadEventHandler === 'function') uploadEventHandler(null, dataIndex, 'delete', null, 0, this);\n                i--;\n            }\n\n            if (resizing) this.context.resizing._resize_plugin = _resize_plugin;\n        },\n\n        /**\n         * @description Create info object of file and add it to \"_infoList\" (this.context[pluginName]._infoList[])\n         * @param {String} pluginName Plugin name \n         * @param {Element} element \n         * @param {Function|null} uploadEventHandler Event handler to process updated file info (created in setInfo)\n         * @param {Object|null} file \n         * @param {Boolean} resizing True if the plugin is using a resizing module\n         * @example \n         * uploadCallBack {.. file = { name: fileList[i].name, size: fileList[i].size };\n         * this.plugins.fileManager.setInfo.call(this, 'image', oImg, this.functions.onImageUpload, file, true);\n         */\n        setInfo: function (pluginName, element, uploadEventHandler, file, resizing) {\n            const _resize_plugin = resizing ? this.context.resizing._resize_plugin : '';\n            if (resizing) this.context.resizing._resize_plugin = pluginName;\n    \n            const plguin = this.plugins[pluginName];\n            const context = this.context[pluginName];\n            const infoList = context._infoList;\n            let dataIndex = element.getAttribute('data-index');\n            let info = null;\n            let state = '';\n\n            if (!file) {\n                file = {\n                    'name': element.getAttribute('data-file-name') || (typeof element.src === 'string' ? element.src.split('/').pop() : ''),\n                    'size': element.getAttribute('data-file-size') || 0\n                };\n            }\n    \n            // create\n            if (!dataIndex || this._componentsInfoInit) {\n                state = 'create';\n                dataIndex = context._infoIndex++;\n    \n                element.setAttribute('data-index', dataIndex);\n                element.setAttribute('data-file-name', file.name);\n                element.setAttribute('data-file-size', file.size);\n    \n                info = {\n                    src: element.src,\n                    index: dataIndex * 1,\n                    name: file.name,\n                    size: file.size\n                };\n    \n                infoList.push(info);\n            } else { // update\n                state = 'update';\n                dataIndex *= 1;\n    \n                for (let i = 0, len = infoList.length; i < len; i++) {\n                    if (dataIndex === infoList[i].index) {\n                        info = infoList[i];\n                        break;\n                    }\n                }\n    \n                if (!info) {\n                    dataIndex = context._infoIndex++;\n                    info = { index: dataIndex };\n                    infoList.push(info);\n                }\n    \n                info.src = element.src;\n                info.name = element.getAttribute(\"data-file-name\");\n                info.size = element.getAttribute(\"data-file-size\") * 1;\n            }\n    \n            // method bind\n            info.element = element;\n            info.delete = plguin.destroy.bind(this, element);\n            info.select = function (element) {\n                element.scrollIntoView(true);\n                this._w.setTimeout(plguin.select.bind(this, element));\n            }.bind(this, element);\n    \n            if (resizing) {\n                if (!element.getAttribute('origin-size') && element.naturalWidth) {\n                    element.setAttribute('origin-size', element.naturalWidth + ',' + element.naturalHeight);\n                }\n    \n                if (!element.getAttribute('data-origin')) {\n                    const container = this.util.getParentElement(element, this.util.isMediaComponent);\n                    const cover = this.util.getParentElement(element, 'FIGURE');\n        \n                    const w = this.plugins.resizing._module_getSizeX.call(this, context, element, cover, container);\n                    const h = this.plugins.resizing._module_getSizeY.call(this, context, element, cover, container);\n                    element.setAttribute('data-origin', w + ',' + h);\n                    element.setAttribute('data-size', w + ',' + h);\n                }\n        \n                if (!element.style.width) {\n                    const size = (element.getAttribute('data-size') || element.getAttribute('data-origin') || '').split(',');\n                    plguin.onModifyMode.call(this, element, null);\n                    plguin.applySize.call(this, size[0], size[1]);\n                }\n        \n                this.context.resizing._resize_plugin = _resize_plugin;\n            }\n\n            if (typeof uploadEventHandler === 'function') uploadEventHandler(element, dataIndex, state, info, --context._uploadFileLength < 0 ? 0 : context._uploadFileLength, this);\n        },\n\n        /**\n         * @description Delete info object at \"_infoList\"\n         * @param {String} pluginName Plugin name \n         * @param {Number} index index of info object (this.context[pluginName]._infoList[].index)\n         * @param {Function|null} uploadEventHandler Event handler to process updated file info (created in setInfo)\n         */\n        deleteInfo: function (pluginName, index, uploadEventHandler) {\n            if (index >= 0) {\n                const infoList = this.context[pluginName]._infoList;\n    \n                for (let i = 0, len = infoList.length; i < len; i++) {\n                    if (index === infoList[i].index) {\n                        infoList.splice(i, 1);\n                        if (typeof uploadEventHandler === 'function') uploadEventHandler(null, index, 'delete', null, 0, this);\n                        return;\n                    }\n                }\n            }\n        },\n\n        /**\n         * @description Reset info object and \"_infoList = []\", \"_infoIndex = 0\"\n         * @param {String} pluginName Plugin name \n         * @param {Function|null} uploadEventHandler Event handler to process updated file info (created in setInfo)\n         */\n        resetInfo: function (pluginName, uploadEventHandler) {\n            const context = this.context[pluginName];\n\n            if (typeof uploadEventHandler === 'function') {\n                const infoList = context._infoList;\n                for (let i = 0, len = infoList.length; i < len; i++) {\n                    uploadEventHandler(null, infoList[i].index, 'delete', null, 0, this);\n                }\n            }\n\n            context._infoList = [];\n            context._infoIndex = 0;\n        }\n    };\n\n    if (typeof noGlobal === typeof undefined) {\n        if (!window.SUNEDITOR_MODULES) {\n            Object.defineProperty(window, 'SUNEDITOR_MODULES', {\n                enumerable: true,\n                writable: false,\n                configurable: false,\n                value: {}\n            });\n        }\n\n        Object.defineProperty(window.SUNEDITOR_MODULES, 'fileManager', {\n            enumerable: true,\n            writable: false,\n            configurable: false,\n            value: fileManager\n        });\n    }\n\n    return fileManager;\n}));"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}