{"ast":null,"code":"/*\r\n * wysiwyg web editor\r\n *\r\n * suneditor.js\r\n * Copyright 2018 JiHong Lee.\r\n * MIT license.\r\n */\n'use strict';\n\nexport default {\n  name: 'colorPicker',\n  /**\r\n   * @description Constructor\r\n   * @param {Object} core Core object \r\n   */\n  add: function (core) {\n    const context = core.context;\n    context.colorPicker = {\n      colorListHTML: '',\n      _colorInput: '',\n      _defaultColor: '#000',\n      _styleProperty: 'color',\n      _currentColor: '',\n      _colorList: []\n    };\n\n    /** set submenu */\n    context.colorPicker.colorListHTML = this.createColorList(core, this._makeColorList);\n  },\n  /**\r\n   * @description Create color list\r\n   * @param {Object} core Core object \r\n   * @param {Function} makeColor this._makeColorList\r\n   * @returns {String} HTML string\r\n   */\n  createColorList: function (core, makeColor) {\n    const option = core.options;\n    const lang = core.lang;\n    const colorList = !option.colorList || option.colorList.length === 0 ? ['#ff0000', '#ff5e00', '#ffe400', '#abf200', '#00d8ff', '#0055ff', '#6600ff', '#ff00dd', '#000000', '#ffd8d8', '#fae0d4', '#faf4c0', '#e4f7ba', '#d4f4fa', '#d9e5ff', '#e8d9ff', '#ffd9fa', '#f1f1f1', '#ffa7a7', '#ffc19e', '#faed7d', '#cef279', '#b2ebf4', '#b2ccff', '#d1b2ff', '#ffb2f5', '#bdbdbd', '#f15f5f', '#f29661', '#e5d85c', '#bce55c', '#5cd1e5', '#6699ff', '#a366ff', '#f261df', '#8c8c8c', '#980000', '#993800', '#998a00', '#6b9900', '#008299', '#003399', '#3d0099', '#990085', '#353535', '#670000', '#662500', '#665c00', '#476600', '#005766', '#002266', '#290066', '#660058', '#222222'] : option.colorList;\n    let colorArr = [];\n    let list = '<div class=\"se-list-inner\">';\n    for (let i = 0, len = colorList.length, color; i < len; i++) {\n      color = colorList[i];\n      if (!color) continue;\n      if (typeof color === 'string') {\n        colorArr.push(color);\n        if (i < len - 1) continue;\n      }\n      if (colorArr.length > 0) {\n        list += '<div class=\"se-selector-color\">' + makeColor(colorArr) + '</div>';\n        colorArr = [];\n      }\n      if (typeof color === 'object') {\n        list += '<div class=\"se-selector-color\">' + makeColor(color) + '</div>';\n      }\n    }\n    list += '' + '<form class=\"se-form-group\">' + '<input type=\"text\" maxlength=\"9\" class=\"_se_color_picker_input se-color-input\"/>' + '<button type=\"submit\" class=\"se-btn-primary _se_color_picker_submit\" title=\"' + lang.dialogBox.submitButton + '\" aria-label=\"' + lang.dialogBox.submitButton + '\">' + core.icons.checked + '</button>' + '<button type=\"button\" class=\"se-btn _se_color_picker_remove\" title=\"' + lang.toolbar.removeFormat + '\" aria-label=\"' + lang.toolbar.removeFormat + '\">' + core.icons.erase + '</button>' + '</form>' + '</div>';\n    return list;\n  },\n  /**\r\n   * @description Internal function used by this.createColorList\r\n   * @param {Array} colorList Color list\r\n   * @private\r\n   */\n  _makeColorList: function (colorList) {\n    let list = '';\n    list += '<ul class=\"se-color-pallet\">';\n    for (let i = 0, len = colorList.length, color; i < len; i++) {\n      color = colorList[i];\n      if (typeof color === 'string') {\n        list += '<li>' + '<button type=\"button\" data-value=\"' + color + '\" title=\"' + color + '\" aria-label=\"' + color + '\" style=\"background-color:' + color + ';\"></button>' + '</li>';\n      }\n    }\n    list += '</ul>';\n    return list;\n  },\n  /**\r\n   * @description Displays or resets the currently selected color at color list.\r\n   * @param {Node} node Current Selected node\r\n   * @param {String|null} color Color value\r\n   */\n  init: function (node, color) {\n    const colorPicker = this.plugins.colorPicker;\n    let fillColor = color ? color : colorPicker.getColorInNode.call(this, node) || this.context.colorPicker._defaultColor;\n    fillColor = colorPicker.isHexColor(fillColor) ? fillColor : colorPicker.rgb2hex(fillColor) || fillColor;\n    const colorList = this.context.colorPicker._colorList;\n    if (colorList) {\n      for (let i = 0, len = colorList.length; i < len; i++) {\n        if (fillColor.toLowerCase() === colorList[i].getAttribute('data-value').toLowerCase()) {\n          this.util.addClass(colorList[i], 'active');\n        } else {\n          this.util.removeClass(colorList[i], 'active');\n        }\n      }\n    }\n    colorPicker.setInputText.call(this, colorPicker.colorName2hex.call(this, fillColor));\n  },\n  /**\r\n   * @description Store color values\r\n   * @param {String} hexColorStr Hax color value\r\n   */\n  setCurrentColor: function (hexColorStr) {\n    this.context.colorPicker._currentColor = hexColorStr;\n    this.context.colorPicker._colorInput.style.borderColor = hexColorStr;\n  },\n  /**\r\n   * @description Set color at input element\r\n   * @param {String} hexColorStr Hax color value\r\n   */\n  setInputText: function (hexColorStr) {\n    hexColorStr = /^#/.test(hexColorStr) ? hexColorStr : '#' + hexColorStr;\n    this.context.colorPicker._colorInput.value = hexColorStr;\n    this.plugins.colorPicker.setCurrentColor.call(this, hexColorStr);\n  },\n  /**\r\n   * @description Gets color value at color property of node\r\n   * @param {Node} node Selected node \r\n   * @returns {String}\r\n   */\n  getColorInNode: function (node) {\n    let findColor = '';\n    const styleProperty = this.context.colorPicker._styleProperty;\n    while (node && !this.util.isWysiwygDiv(node) && findColor.length === 0) {\n      if (node.nodeType === 1 && node.style[styleProperty]) findColor = node.style[styleProperty];\n      node = node.parentNode;\n    }\n    return findColor;\n  },\n  /**\r\n   * @description Function to check hex format color\r\n   * @param {String} str Color value\r\n   */\n  isHexColor: function (str) {\n    return /^#[0-9a-f]{3}(?:[0-9a-f]{3})?$/i.test(str);\n  },\n  /**\r\n   * @description Function to convert hex format to a rgb color\r\n   * @param {String} rgb RGB color format\r\n   * @returns {String}\r\n   */\n  rgb2hex: function (rgb) {\n    const rgbMatch = rgb.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i);\n    return rgbMatch && rgbMatch.length === 4 ? \"#\" + (\"0\" + parseInt(rgbMatch[1], 10).toString(16)).slice(-2) + (\"0\" + parseInt(rgbMatch[2], 10).toString(16)).slice(-2) + (\"0\" + parseInt(rgbMatch[3], 10).toString(16)).slice(-2) : '';\n  },\n  /**\r\n   * @description Converts color values of other formats to hex color values and returns.\r\n   * @param {String} colorName Color value\r\n   * @returns {String}\r\n   */\n  colorName2hex: function (colorName) {\n    if (/^#/.test(colorName)) return colorName;\n    var temp = this.util.createElement('div');\n    temp.style.display = 'none';\n    temp.style.color = colorName;\n    var colors = this._w.getComputedStyle(this._d.body.appendChild(temp)).color.match(/\\d+/g).map(function (a) {\n      return parseInt(a, 10);\n    });\n    this.util.removeItem(temp);\n    return colors.length >= 3 ? '#' + ((1 << 24) + (colors[0] << 16) + (colors[1] << 8) + colors[2]).toString(16).substr(1) : false;\n  }\n};","map":{"version":3,"names":["name","add","core","context","colorPicker","colorListHTML","_colorInput","_defaultColor","_styleProperty","_currentColor","_colorList","createColorList","_makeColorList","makeColor","option","options","lang","colorList","length","colorArr","list","i","len","color","push","dialogBox","submitButton","icons","checked","toolbar","removeFormat","erase","init","node","plugins","fillColor","getColorInNode","call","isHexColor","rgb2hex","toLowerCase","getAttribute","util","addClass","removeClass","setInputText","colorName2hex","setCurrentColor","hexColorStr","style","borderColor","test","value","findColor","styleProperty","isWysiwygDiv","nodeType","parentNode","str","rgb","rgbMatch","match","parseInt","toString","slice","colorName","temp","createElement","display","colors","_w","getComputedStyle","_d","body","appendChild","map","a","removeItem","substr"],"sources":["E:/Programming/React/New folder (2)/dynamicArt/dynamic-article/node_modules/suneditor/src/plugins/modules/_colorPicker.js"],"sourcesContent":["/*\r\n * wysiwyg web editor\r\n *\r\n * suneditor.js\r\n * Copyright 2018 JiHong Lee.\r\n * MIT license.\r\n */\r\n'use strict';\r\n\r\nexport default {\r\n    name: 'colorPicker',\r\n    /**\r\n     * @description Constructor\r\n     * @param {Object} core Core object \r\n     */\r\n    add: function (core) {\r\n        const context = core.context;\r\n        context.colorPicker = {\r\n            colorListHTML: '',\r\n            _colorInput: '',\r\n            _defaultColor: '#000',\r\n            _styleProperty: 'color',\r\n            _currentColor: '',\r\n            _colorList: []\r\n        };\r\n\r\n        /** set submenu */\r\n        context.colorPicker.colorListHTML = this.createColorList(core, this._makeColorList);\r\n    },\r\n\r\n    /**\r\n     * @description Create color list\r\n     * @param {Object} core Core object \r\n     * @param {Function} makeColor this._makeColorList\r\n     * @returns {String} HTML string\r\n     */\r\n    createColorList: function (core, makeColor) {\r\n        const option = core.options;\r\n        const lang = core.lang;\r\n        const colorList = !option.colorList || option.colorList.length === 0 ?\r\n            [\r\n                '#ff0000', '#ff5e00', '#ffe400', '#abf200', '#00d8ff', '#0055ff', '#6600ff', '#ff00dd', '#000000',\r\n                '#ffd8d8', '#fae0d4', '#faf4c0', '#e4f7ba', '#d4f4fa', '#d9e5ff', '#e8d9ff', '#ffd9fa', '#f1f1f1',\r\n                '#ffa7a7', '#ffc19e', '#faed7d', '#cef279', '#b2ebf4', '#b2ccff', '#d1b2ff', '#ffb2f5', '#bdbdbd',\r\n                '#f15f5f', '#f29661', '#e5d85c', '#bce55c', '#5cd1e5', '#6699ff', '#a366ff', '#f261df', '#8c8c8c',\r\n                '#980000', '#993800', '#998a00', '#6b9900', '#008299', '#003399', '#3d0099', '#990085', '#353535',\r\n                '#670000', '#662500', '#665c00', '#476600', '#005766', '#002266', '#290066', '#660058', '#222222'\r\n            ] : option.colorList;\r\n\r\n        let colorArr = [];\r\n        let list = '<div class=\"se-list-inner\">';\r\n            for (let i = 0, len = colorList.length, color; i < len; i++) {\r\n                color = colorList[i];\r\n                if (!color) continue;\r\n                \r\n                if (typeof color === 'string') {\r\n                    colorArr.push(color);\r\n                    if (i < len - 1) continue;\r\n                }\r\n                if (colorArr.length > 0) {\r\n                    list += '<div class=\"se-selector-color\">' + makeColor(colorArr) + '</div>';\r\n                    colorArr = [];\r\n                }\r\n                if (typeof color === 'object') {\r\n                    list += '<div class=\"se-selector-color\">' + makeColor(color) + '</div>';\r\n                }\r\n            }\r\n            list += '' +\r\n            '<form class=\"se-form-group\">' +\r\n                '<input type=\"text\" maxlength=\"9\" class=\"_se_color_picker_input se-color-input\"/>' +\r\n                '<button type=\"submit\" class=\"se-btn-primary _se_color_picker_submit\" title=\"' + lang.dialogBox.submitButton + '\" aria-label=\"' + lang.dialogBox.submitButton + '\">' +\r\n                    core.icons.checked +\r\n                '</button>' +\r\n                '<button type=\"button\" class=\"se-btn _se_color_picker_remove\" title=\"' + lang.toolbar.removeFormat + '\" aria-label=\"' + lang.toolbar.removeFormat + '\">' +\r\n                    core.icons.erase +\r\n                '</button>' +\r\n            '</form>' +\r\n            '</div>';\r\n\r\n        return list;\r\n    },\r\n\r\n    /**\r\n     * @description Internal function used by this.createColorList\r\n     * @param {Array} colorList Color list\r\n     * @private\r\n     */\r\n    _makeColorList: function (colorList) {\r\n        let list = '';\r\n\r\n        list += '<ul class=\"se-color-pallet\">';\r\n        for (let i = 0, len = colorList.length, color; i < len; i++) {\r\n            color = colorList[i];\r\n            if (typeof color === 'string') {\r\n                list += '<li>' +\r\n                            '<button type=\"button\" data-value=\"' + color + '\" title=\"' + color + '\" aria-label=\"' + color + '\" style=\"background-color:' + color + ';\"></button>' +\r\n                        '</li>';\r\n            }\r\n        }\r\n        list += '</ul>';\r\n\r\n        return list;\r\n    },\r\n    \r\n    /**\r\n     * @description Displays or resets the currently selected color at color list.\r\n     * @param {Node} node Current Selected node\r\n     * @param {String|null} color Color value\r\n     */\r\n    init: function (node, color) {\r\n        const colorPicker = this.plugins.colorPicker;\r\n        let fillColor = color ? color : colorPicker.getColorInNode.call(this, node) || this.context.colorPicker._defaultColor;\r\n        fillColor = colorPicker.isHexColor(fillColor) ? fillColor : colorPicker.rgb2hex(fillColor) || fillColor;\r\n\r\n        const colorList = this.context.colorPicker._colorList;\r\n        if (colorList) {\r\n            for (let i = 0, len = colorList.length; i < len; i++) {\r\n                if (fillColor.toLowerCase() === colorList[i].getAttribute('data-value').toLowerCase()) {\r\n                    this.util.addClass(colorList[i], 'active');\r\n                } else {\r\n                    this.util.removeClass(colorList[i], 'active');\r\n                }\r\n            }\r\n        }\r\n\r\n        colorPicker.setInputText.call(this, colorPicker.colorName2hex.call(this, fillColor));\r\n    },\r\n\r\n    /**\r\n     * @description Store color values\r\n     * @param {String} hexColorStr Hax color value\r\n     */\r\n    setCurrentColor: function (hexColorStr) {\r\n        this.context.colorPicker._currentColor = hexColorStr;\r\n        this.context.colorPicker._colorInput.style.borderColor = hexColorStr;\r\n    },\r\n\r\n    /**\r\n     * @description Set color at input element\r\n     * @param {String} hexColorStr Hax color value\r\n     */\r\n    setInputText: function (hexColorStr) {\r\n        hexColorStr = /^#/.test(hexColorStr) ? hexColorStr : '#' + hexColorStr;\r\n        this.context.colorPicker._colorInput.value = hexColorStr;\r\n        this.plugins.colorPicker.setCurrentColor.call(this, hexColorStr);\r\n    },\r\n\r\n    /**\r\n     * @description Gets color value at color property of node\r\n     * @param {Node} node Selected node \r\n     * @returns {String}\r\n     */\r\n    getColorInNode: function (node) {\r\n        let findColor = '';\r\n        const styleProperty = this.context.colorPicker._styleProperty;\r\n\r\n        while (node && !this.util.isWysiwygDiv(node) && findColor.length === 0) {\r\n            if (node.nodeType === 1 && node.style[styleProperty]) findColor = node.style[styleProperty];\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return findColor;\r\n    },\r\n\r\n    /**\r\n     * @description Function to check hex format color\r\n     * @param {String} str Color value\r\n     */\r\n    isHexColor: function (str) {\r\n        return /^#[0-9a-f]{3}(?:[0-9a-f]{3})?$/i.test(str);\r\n    },\r\n\r\n    /**\r\n     * @description Function to convert hex format to a rgb color\r\n     * @param {String} rgb RGB color format\r\n     * @returns {String}\r\n     */\r\n    rgb2hex: function (rgb) {\r\n        const rgbMatch = rgb.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i);\r\n\r\n        return (rgbMatch && rgbMatch.length === 4) ? \"#\" +\r\n            (\"0\" + parseInt(rgbMatch[1],10).toString(16)).slice(-2) +\r\n            (\"0\" + parseInt(rgbMatch[2],10).toString(16)).slice(-2) +\r\n            (\"0\" + parseInt(rgbMatch[3],10).toString(16)).slice(-2) : '';\r\n    },\r\n\r\n    /**\r\n     * @description Converts color values of other formats to hex color values and returns.\r\n     * @param {String} colorName Color value\r\n     * @returns {String}\r\n     */\r\n    colorName2hex: function (colorName) {\r\n        if (/^#/.test(colorName)) return colorName;\r\n        var temp = this.util.createElement('div');\r\n        temp.style.display = 'none';\r\n        temp.style.color = colorName;\r\n        var colors = this._w.getComputedStyle(this._d.body.appendChild(temp)).color.match(/\\d+/g).map(function (a) { return parseInt(a,10); });\r\n        this.util.removeItem(temp);\r\n        return (colors.length >= 3) ? '#' + (((1 << 24) + (colors[0] << 16) + (colors[1] << 8) + colors[2]).toString(16).substr(1)) : false;\r\n    }\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}