{"ast":null,"code":"var _jsxFileName = \"E:\\\\Programming\\\\React\\\\New folder (2)\\\\dynamicArt\\\\dynamic-article\\\\src\\\\Editor.js\",\n  _s = $RefreshSig$();\nimport { Button, Card, Input, Row } from \"antd\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport SunEditor from \"suneditor-react\";\nimport \"suneditor/dist/css/suneditor.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MySunEditor = ({\n  onChange,\n  initialTemplateName = \"\",\n  initialContent = \"\",\n  initialTempVar = []\n}) => {\n  _s();\n  const [templateName, setTemplateName] = useState(initialTemplateName);\n  const [tempVar, setTempVar] = useState(initialTempVar);\n  /**\r\n   * @type {React.MutableRefObject<SunEditor>} get type definitions for editor\r\n   */\n\n  const editor = useRef();\n\n  // useEffect(() => {\n  //   // Set the initial content when it changes\n  //   if (editor.current) {\n  //     editor.current.setContents(initialContent);\n  //   }\n  // }, [initialContent]);\n\n  // The sunEditor parameter will be set to the core suneditor instance when this function is called\n  const getSunEditorInstance = sunEditor => {\n    editor.current = sunEditor;\n  };\n  const handleCreate = () => {};\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"m-10\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(SunEditor\n      // defaultValue={initialContent}\n      // setContents={initialContent}\n      , {\n        defaultValue: initialContent,\n        onChange: onChange,\n        setOptions: {\n          buttonList: [[\"font\", \"fontSize\", \"formatBlock\"], [\"bold\", \"underline\", \"italic\", \"strike\", \"subscript\", \"superscript\"], [\"align\", \"horizontalRule\", \"list\", \"table\"], [\"fontColor\", \"hiliteColor\"], [\"outdent\", \"indent\"], [\"undo\", \"redo\"], [\"removeFormat\"], [\"outdent\", \"indent\"], [\"link\", \"image\"], [\"preview\", \"print\"], [\"fullScreen\", \"showBlocks\", \"codeView\"]]\n        },\n        getSunEditorInstance: getSunEditorInstance,\n        height: \"60vh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: tempVar === null || tempVar === void 0 ? void 0 : tempVar.map((variable, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"m-10\",\n        children: variable\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(MySunEditor, \"AyuCUtI4LqgjBm/OwsBvLD1DnSc=\");\n_c = MySunEditor;\nexport default MySunEditor;\nvar _c;\n$RefreshReg$(_c, \"MySunEditor\");","map":{"version":3,"names":["Button","Card","Input","Row","React","useRef","useState","useEffect","SunEditor","jsxDEV","_jsxDEV","MySunEditor","onChange","initialTemplateName","initialContent","initialTempVar","_s","templateName","setTemplateName","tempVar","setTempVar","editor","getSunEditorInstance","sunEditor","current","handleCreate","className","children","defaultValue","setOptions","buttonList","height","fileName","_jsxFileName","lineNumber","columnNumber","map","variable","index","_c","$RefreshReg$"],"sources":["E:/Programming/React/New folder (2)/dynamicArt/dynamic-article/src/Editor.js"],"sourcesContent":["import { Button, Card, Input, Row } from \"antd\";\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport SunEditor from \"suneditor-react\";\r\nimport \"suneditor/dist/css/suneditor.min.css\";\r\n\r\nconst MySunEditor = ({\r\n  onChange,\r\n  initialTemplateName = \"\",\r\n  initialContent = \"\",\r\n  initialTempVar = [],\r\n}) => {\r\n  const [templateName, setTemplateName] = useState(initialTemplateName);\r\n  const [tempVar, setTempVar] = useState(initialTempVar);\r\n  /**\r\n   * @type {React.MutableRefObject<SunEditor>} get type definitions for editor\r\n   */\r\n\r\n  const editor = useRef();\r\n\r\n  // useEffect(() => {\r\n  //   // Set the initial content when it changes\r\n  //   if (editor.current) {\r\n  //     editor.current.setContents(initialContent);\r\n  //   }\r\n  // }, [initialContent]);\r\n\r\n  // The sunEditor parameter will be set to the core suneditor instance when this function is called\r\n  const getSunEditorInstance = (sunEditor) => {\r\n    editor.current = sunEditor;\r\n  };\r\n  const handleCreate = () => {};\r\n\r\n  return (\r\n    <Card className=\"m-10\">\r\n      {/* <Row>\r\n        <Input\r\n          addonBefore=\"Template Name\"\r\n          placeholder=\"Enter template name\"\r\n          addonAfter={\r\n            <Button type=\"primary\" onClick={handleCreate}>\r\n              Create Template\r\n            </Button>\r\n          }\r\n          value={templateName}\r\n          onChange={(e) => {\r\n            setTemplateName(e.target.value);\r\n          }}\r\n          type=\"text\"\r\n          name=\"templateName\"\r\n          id=\"templateName\"\r\n        />\r\n      </Row> */}\r\n      <Row>\r\n        <SunEditor\r\n          // defaultValue={initialContent}\r\n          // setContents={initialContent}\r\n          defaultValue={initialContent}\r\n          onChange={onChange}\r\n          setOptions={{\r\n            buttonList: [\r\n              [\"font\", \"fontSize\", \"formatBlock\"],\r\n              [\r\n                \"bold\",\r\n                \"underline\",\r\n                \"italic\",\r\n                \"strike\",\r\n                \"subscript\",\r\n                \"superscript\",\r\n              ],\r\n              [\"align\", \"horizontalRule\", \"list\", \"table\"],\r\n              [\"fontColor\", \"hiliteColor\"],\r\n              [\"outdent\", \"indent\"],\r\n              [\"undo\", \"redo\"],\r\n              [\"removeFormat\"],\r\n              [\"outdent\", \"indent\"],\r\n              [\"link\", \"image\"],\r\n              [\"preview\", \"print\"],\r\n              [\"fullScreen\", \"showBlocks\", \"codeView\"],\r\n            ],\r\n          }}\r\n          getSunEditorInstance={getSunEditorInstance}\r\n          height=\"60vh\"\r\n        />\r\n      </Row>\r\n      <Row>\r\n        {tempVar?.map((variable, index) => (\r\n          <span className=\"m-10\" key={index}>\r\n            {variable}\r\n          </span>\r\n        ))}\r\n      </Row>\r\n    </Card>\r\n  );\r\n};\r\nexport default MySunEditor;\r\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,GAAG,QAAQ,MAAM;AAC/C,OAAOC,KAAK,IAAIC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,SAAS,MAAM,iBAAiB;AACvC,OAAO,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,WAAW,GAAGA,CAAC;EACnBC,QAAQ;EACRC,mBAAmB,GAAG,EAAE;EACxBC,cAAc,GAAG,EAAE;EACnBC,cAAc,GAAG;AACnB,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAACO,mBAAmB,CAAC;EACrE,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAACS,cAAc,CAAC;EACtD;AACF;AACA;;EAEE,MAAMM,MAAM,GAAGhB,MAAM,CAAC,CAAC;;EAEvB;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA,MAAMiB,oBAAoB,GAAIC,SAAS,IAAK;IAC1CF,MAAM,CAACG,OAAO,GAAGD,SAAS;EAC5B,CAAC;EACD,MAAME,YAAY,GAAGA,CAAA,KAAM,CAAC,CAAC;EAE7B,oBACEf,OAAA,CAACT,IAAI;IAACyB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBAmBpBjB,OAAA,CAACP,GAAG;MAAAwB,QAAA,eACFjB,OAAA,CAACF;MACC;MACA;MAAA;QACAoB,YAAY,EAAEd,cAAe;QAC7BF,QAAQ,EAAEA,QAAS;QACnBiB,UAAU,EAAE;UACVC,UAAU,EAAE,CACV,CAAC,MAAM,EAAE,UAAU,EAAE,aAAa,CAAC,EACnC,CACE,MAAM,EACN,WAAW,EACX,QAAQ,EACR,QAAQ,EACR,WAAW,EACX,aAAa,CACd,EACD,CAAC,OAAO,EAAE,gBAAgB,EAAE,MAAM,EAAE,OAAO,CAAC,EAC5C,CAAC,WAAW,EAAE,aAAa,CAAC,EAC5B,CAAC,SAAS,EAAE,QAAQ,CAAC,EACrB,CAAC,MAAM,EAAE,MAAM,CAAC,EAChB,CAAC,cAAc,CAAC,EAChB,CAAC,SAAS,EAAE,QAAQ,CAAC,EACrB,CAAC,MAAM,EAAE,OAAO,CAAC,EACjB,CAAC,SAAS,EAAE,OAAO,CAAC,EACpB,CAAC,YAAY,EAAE,YAAY,EAAE,UAAU,CAAC;QAE5C,CAAE;QACFR,oBAAoB,EAAEA,oBAAqB;QAC3CS,MAAM,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNzB,OAAA,CAACP,GAAG;MAAAwB,QAAA,EACDR,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEiB,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAC5B5B,OAAA;QAAMgB,SAAS,EAAC,MAAM;QAAAC,QAAA,EACnBU;MAAQ,GADiBC,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE3B,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX,CAAC;AAACnB,EAAA,CAxFIL,WAAW;AAAA4B,EAAA,GAAX5B,WAAW;AAyFjB,eAAeA,WAAW;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}