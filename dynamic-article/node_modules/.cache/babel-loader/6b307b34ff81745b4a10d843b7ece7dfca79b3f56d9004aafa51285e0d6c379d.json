{"ast":null,"code":"/*\r\n * wysiwyg web editor\r\n *\r\n * suneditor.js\r\n * Copyright 2017 JiHong Lee.\r\n * MIT license.\r\n */\n'use strict';\n\nimport _Constructor from './constructor';\nimport _Context from './context';\nimport _history from './history';\nimport _util from './util';\nimport _notice from '../plugins/modules/_notice';\n\n/**\r\n * @description SunEditor constuctor function.\r\n * create core object and event registration.\r\n * core, event, functions\r\n * @param {Object} context\r\n * @param {Object} pluginCallButtons\r\n * @param {Object} plugins \r\n * @param {Object} lang\r\n * @param {Object} options\r\n * @param {Object} _responsiveButtons\r\n * @returns {Object} functions Object\r\n */\nexport default function (context, pluginCallButtons, plugins, lang, options, _responsiveButtons) {\n  const _d = context.element.originElement.ownerDocument || document;\n  const _w = _d.defaultView || window;\n  const util = _util;\n  const icons = options.icons;\n\n  /**\r\n   * @description editor core object\r\n   * should always bind this object when registering an event in the plug-in.\r\n   */\n  const core = {\n    _d: _d,\n    _w: _w,\n    _parser: new _w.DOMParser(),\n    _prevRtl: options.rtl,\n    _editorHeight: 0,\n    _editorHeightPadding: 0,\n    _listCamel: options.__listCommonStyle,\n    _listKebab: util.camelToKebabCase(options.__listCommonStyle),\n    /**\r\n     * @description Document object of the iframe if created as an iframe || _d\r\n     * @private\r\n     */\n    _wd: null,\n    /**\r\n     * @description Window object of the iframe if created as an iframe || _w\r\n     * @private\r\n     */\n    _ww: null,\n    /**\r\n     * @description Closest ShadowRoot to editor if found\r\n     * @private\r\n     */\n    _shadowRoot: null,\n    /**\r\n     * @description Block controller mousedown events in \"shadowRoot\" environment\r\n     * @private\r\n     */\n    _shadowRootControllerEventTarget: null,\n    /**\r\n     * @description Util object\r\n     */\n    util: util,\n    /**\r\n     * @description Functions object\r\n     */\n    functions: null,\n    /**\r\n     * @description Editor options\r\n     */\n    options: null,\n    /**\r\n     * @description Computed style of the wysiwyg area (window.getComputedStyle(context.element.wysiwyg))\r\n     */\n    wwComputedStyle: null,\n    /**\r\n     * @description Notice object\r\n     */\n    notice: _notice,\n    /**\r\n     * @description Default icons object\r\n     */\n    icons: icons,\n    /**\r\n     * @description History object for undo, redo\r\n     */\n    history: null,\n    /**\r\n     * @description Elements and user options parameters of the suneditor\r\n     */\n    context: context,\n    /**\r\n     * @description Plugin buttons\r\n     */\n    pluginCallButtons: pluginCallButtons,\n    /**\r\n     * @description Loaded plugins\r\n     */\n    plugins: plugins || {},\n    /**\r\n     * @description Whether the plugin is initialized\r\n     */\n    initPlugins: {},\n    /**\r\n     * @description Object for managing submenu elements\r\n     * @private\r\n     */\n    _targetPlugins: {},\n    /**\r\n     * @description Save rendered submenus and containers\r\n     * @private\r\n     */\n    _menuTray: {},\n    /**\r\n     * @description loaded language\r\n     */\n    lang: lang,\n    /**\r\n     * @description The selection node (core.getSelectionNode()) to which the effect was last applied\r\n     */\n    effectNode: null,\n    /**\r\n     * @description submenu element\r\n     */\n    submenu: null,\n    /**\r\n     * @description container element\r\n     */\n    container: null,\n    /**\r\n     * @description current subment name\r\n     * @private\r\n     */\n    _submenuName: '',\n    /**\r\n     * @description binded submenuOff method\r\n     * @private\r\n     */\n    _bindedSubmenuOff: null,\n    /**\r\n     * @description binded containerOff method\r\n     * @private\r\n     */\n    _bindedContainerOff: null,\n    /**\r\n     * @description active button element in submenu\r\n     */\n    submenuActiveButton: null,\n    /**\r\n     * @description active button element in container\r\n     */\n    containerActiveButton: null,\n    /**\r\n     * @description The elements array to be processed unvisible when the controllersOff function is executed (resizing, link modified button, table controller)\r\n     */\n    controllerArray: [],\n    /**\r\n     * @description The name of the plugin that called the currently active controller\r\n     */\n    currentControllerName: '',\n    /**\r\n     * @description The target element of current controller\r\n     */\n    currentControllerTarget: null,\n    /**\r\n     * @description The file component object of current selected file tag (getFileComponent)\r\n     */\n    currentFileComponentInfo: null,\n    /**\r\n     * @description An array of buttons whose class name is not \"se-code-view-enabled\"\r\n     */\n    codeViewDisabledButtons: [],\n    /**\r\n     * @description An array of buttons whose class name is not \"se-resizing-enabled\"\r\n     */\n    resizingDisabledButtons: [],\n    /**\r\n     * @description active more layer element in submenu\r\n     * @private\r\n     */\n    _moreLayerActiveButton: null,\n    /**\r\n     * @description Tag whitelist RegExp object used in \"_consistencyCheckOfHTML\" method\r\n     * ^(options._editorTagsWhitelist)$\r\n     * @private\r\n     */\n    _htmlCheckWhitelistRegExp: null,\n    /**\r\n     * @description Tag blacklist RegExp object used in \"_consistencyCheckOfHTML\" method\r\n     * @private\r\n     */\n    _htmlCheckBlacklistRegExp: null,\n    /**\r\n     * @description RegExp when using check disallowd tags. (b, i, ins, strike, s)\r\n     * @private\r\n     */\n    _disallowedTextTagsRegExp: null,\n    /**\r\n     * @description Editor tags whitelist (RegExp object)\r\n     * util.createTagsWhitelist(options._editorTagsWhitelist)\r\n     */\n    editorTagsWhitelistRegExp: null,\n    /**\r\n     * @description Editor tags blacklist (RegExp object)\r\n     * util.createTagsBlacklist(options.tagsBlacklist)\r\n     */\n    editorTagsBlacklistRegExp: null,\n    /**\r\n     * @description Tag whitelist when pasting (RegExp object)\r\n     * util.createTagsWhitelist(options.pasteTagsWhitelist)\r\n     */\n    pasteTagsWhitelistRegExp: null,\n    /**\r\n     * @description Tag blacklist when pasting (RegExp object)\r\n     * util.createTagsBlacklist(options.pasteTagsBlacklist)\r\n     */\n    pasteTagsBlacklistRegExp: null,\n    /**\r\n     * @description Boolean value of whether the editor has focus\r\n     */\n    hasFocus: false,\n    /**\r\n     * @description Boolean value of whether the editor is disabled\r\n     */\n    isDisabled: false,\n    /**\r\n     * @description Boolean value of whether the editor is readOnly\r\n     */\n    isReadOnly: false,\n    /**\r\n     * @description Attributes whitelist used by the cleanHTML method\r\n     * @private\r\n     */\n    _attributesWhitelistRegExp: null,\n    _attributesWhitelistRegExp_all_data: null,\n    /**\r\n     * @description Attributes blacklist used by the cleanHTML method\r\n     * @private\r\n     */\n    _attributesBlacklistRegExp: null,\n    /**\r\n     * @description Attributes of tags whitelist used by the cleanHTML method\r\n     * @private\r\n     */\n    _attributesTagsWhitelist: null,\n    /**\r\n     * @description Attributes of tags blacklist used by the cleanHTML method\r\n     * @private\r\n     */\n    _attributesTagsBlacklist: null,\n    /**\r\n     * @description binded controllersOff method\r\n     * @private\r\n     */\n    _bindControllersOff: null,\n    /**\r\n     * @description Is inline mode?\r\n     * @private\r\n     */\n    _isInline: null,\n    /**\r\n     * @description Is balloon|balloon-always mode?\r\n     * @private\r\n     */\n    _isBalloon: null,\n    /**\r\n     * @description Is balloon-always mode?\r\n     * @private\r\n     */\n    _isBalloonAlways: null,\n    /**\r\n     * @description Required value when using inline mode to sticky toolbar\r\n     * @private\r\n     */\n    _inlineToolbarAttr: {\n      top: '',\n      width: '',\n      isShow: false\n    },\n    /**\r\n     * @description Variable that controls the \"blur\" event in the editor of inline or balloon mode when the focus is moved to submenu\r\n     * @private\r\n     */\n    _notHideToolbar: false,\n    /**\r\n     * @description Variable value that sticky toolbar mode\r\n     * @private\r\n     */\n    _sticky: false,\n    /**\r\n     * @description Variables for controlling focus and blur events\r\n     * @private\r\n     */\n    _antiBlur: false,\n    /**\r\n     * @description Component line breaker element\r\n     * @private\r\n     */\n    _lineBreaker: null,\n    _lineBreakerButton: null,\n    /**\r\n     * @description If true, (initialize, reset) all indexes of image, video information\r\n     * @private\r\n     */\n    _componentsInfoInit: true,\n    _componentsInfoReset: false,\n    /**\r\n     * @description Plugins array with \"active\" method.\r\n     * \"activePlugins\" runs the \"add\" method when creating the editor.\r\n     */\n    activePlugins: null,\n    /**\r\n     * @description Information of tags that should maintain HTML structure, style, class name, etc. (In use by \"math\" plugin)\r\n     * When inserting \"html\" such as paste, it is executed on the \"html\" to be inserted. (core.cleanHTML)\r\n     * Basic Editor Actions:\r\n     * 1. All classes not starting with \"__se__\" or \"se-\" in the editor are removed.\r\n     * 2. The style of all tags except the \"span\" tag is removed from the editor.\r\n     * \"managedTagsInfo\" structure ex:\r\n     * managedTagsInfo: {\r\n     *   query: '.__se__xxx, se-xxx'\r\n     *   map: {\r\n     *     '__se__xxx': method.bind(core),\r\n     *     'se-xxx': method.bind(core),\r\n     *   }\r\n     * }\r\n     * @example\r\n     * Define in the following return format in the \"managedTagInfo\" function of the plugin.\r\n     * managedTagInfo() => {\r\n     *  return {\r\n     *    className: 'string', // Class name to identify the tag. (\"__se__xxx\", \"se-xxx\")\r\n     *    // Change the html of the \"element\". (\"element\" is the element found with \"className\".)\r\n     *    // \"method\" is executed by binding \"core\".\r\n     *    method: function (element) {\r\n     *      // this === core\r\n     *      element.innerHTML = // (rendered html);\r\n     *    }\r\n     *  }\r\n     * }\r\n     */\n    managedTagsInfo: null,\n    /**\r\n     * @description cashing: options.charCounterType === 'byte-html'\r\n     * @private\r\n     */\n    _charTypeHTML: false,\n    /**\r\n     * @description Array of \"checkFileInfo\" functions with the core bound\r\n     * (Plugins with \"checkFileInfo\" and \"resetFileInfo\" methods)\r\n     * \"fileInfoPlugins\" runs the \"add\" method when creating the editor.\r\n     * \"checkFileInfo\" method is always call just before the \"change\" event.\r\n     * @private\r\n     */\n    _fileInfoPluginsCheck: null,\n    /**\r\n     * @description Array of \"resetFileInfo\" functions with the core bound\r\n     * (Plugins with \"checkFileInfo\" and \"resetFileInfo\" methods)\r\n     * \"checkFileInfo\" method is always call just before the \"functions.setOptions\" method.\r\n     * @private\r\n     */\n    _fileInfoPluginsReset: null,\n    /**\r\n     * @description Variables for file component management\r\n     * @private\r\n     */\n    _fileManager: {\n      tags: null,\n      regExp: null,\n      queryString: null,\n      pluginRegExp: null,\n      pluginMap: null\n    },\n    /**\r\n     * @description Elements that need to change text or className for each selection change\r\n     * After creating the editor, \"activePlugins\" are added.\r\n     * @property {Element} STRONG bold button\r\n     * @property {Element} U underline button\r\n     * @property {Element} EM italic button\r\n     * @property {Element} DEL strike button\r\n     * @property {Element} SUB subscript button\r\n     * @property {Element} SUP superscript button\r\n     * @property {Element} OUTDENT outdent button\r\n     * @property {Element} INDENT indent button\r\n     */\n    commandMap: {},\n    /**\r\n     * @description CSS properties related to style tags \r\n     * @private\r\n     */\n    _commandMapStyles: {\n      STRONG: ['font-weight'],\n      U: ['text-decoration'],\n      EM: ['font-style'],\n      DEL: ['text-decoration']\n    },\n    /**\r\n     * @description Style button related to edit area\r\n     * @property {Element} fullScreen fullScreen button element\r\n     * @property {Element} showBlocks showBlocks button element\r\n     * @property {Element} codeView codeView button element\r\n     * @private\r\n     */\n    _styleCommandMap: null,\n    /**\r\n     * @private\r\n     */\n    _cleanStyleRegExp: {\n      span: new _w.RegExp('\\\\s*[^-a-zA-Z](font-family|font-size|color|background-color)\\\\s*:[^;]+(?!;)*', 'ig'),\n      format: new _w.RegExp('\\\\s*[^-a-zA-Z](text-align|margin-left|margin-right)\\\\s*:[^;]+(?!;)*', 'ig'),\n      fontSizeUnit: new _w.RegExp('\\\\d+' + options.fontSizeUnit + '$', 'i')\n    },\n    /**\r\n     * @description Variables used internally in editor operation\r\n     * @property {Boolean} isCodeView State of code view\r\n     * @property {Boolean} isFullScreen State of full screen\r\n     * @property {Number} innerHeight_fullScreen InnerHeight in editor when in full screen\r\n     * @property {Number} resizeClientY Remember the vertical size of the editor before resizing the editor (Used when calculating during resize operation)\r\n     * @property {Number} tabSize Indent size of tab (4)\r\n     * @property {Number} codeIndent Indent size of Code view mode (2)\r\n     * @property {Number} minResizingSize Minimum size of editing area when resized {Number} (.se-wrapper-inner {min-height: 65px;} || 65)\r\n     * @property {Array} currentNodes  An array of the current cursor's node structure\r\n     * @private\r\n     */\n    _variable: {\n      isChanged: false,\n      isCodeView: false,\n      isFullScreen: false,\n      innerHeight_fullScreen: 0,\n      resizeClientY: 0,\n      tabSize: 4,\n      codeIndent: 2,\n      minResizingSize: util.getNumber(context.element.wysiwygFrame.style.minHeight || '65', 0),\n      currentNodes: [],\n      currentNodesMap: [],\n      _range: null,\n      _selectionNode: null,\n      _originCssText: context.element.topArea.style.cssText,\n      _bodyOverflow: '',\n      _editorAreaOriginCssText: '',\n      _wysiwygOriginCssText: '',\n      _codeOriginCssText: '',\n      _fullScreenAttrs: {\n        sticky: false,\n        balloon: false,\n        inline: false\n      },\n      _lineBreakComp: null,\n      _lineBreakDir: ''\n    },\n    /**\r\n     * @description Temp variable for set line attrs\r\n     * @private\r\n     */\n    _formatAttrsTemp: null,\n    /**\r\n     * @description Save the current buttons states to \"allCommandButtons\" object\r\n     * @private\r\n     */\n    _saveButtonStates: function () {\n      if (!this.allCommandButtons) this.allCommandButtons = {};\n      const currentButtons = this.context.element._buttonTray.querySelectorAll('.se-menu-list button[data-display]');\n      for (let i = 0, element, command; i < currentButtons.length; i++) {\n        element = currentButtons[i];\n        command = element.getAttribute('data-command');\n        this.allCommandButtons[command] = element;\n      }\n    },\n    /**\r\n     * @description Recover the current buttons states from \"allCommandButtons\" object\r\n     * @private\r\n     */\n    _recoverButtonStates: function () {\n      if (this.allCommandButtons) {\n        const currentButtons = this.context.element._buttonTray.querySelectorAll('.se-menu-list button[data-display]');\n        for (let i = 0, button, command, oldButton; i < currentButtons.length; i++) {\n          button = currentButtons[i];\n          command = button.getAttribute('data-command');\n          oldButton = this.allCommandButtons[command];\n          if (oldButton) {\n            button.parentElement.replaceChild(oldButton, button);\n            if (this.context.tool[command]) this.context.tool[command] = oldButton;\n          }\n        }\n      }\n    },\n    /**\r\n     * @description If the plugin is not added, add the plugin and call the 'add' function.\r\n     * If the plugin is added call callBack function.\r\n     * @param {String} pluginName The name of the plugin to call\r\n     * @param {function} callBackFunction Function to be executed immediately after module call\r\n     * @param {Element|null} _target Plugin target button (This is not necessary if you have a button list when creating the editor)\r\n     */\n    callPlugin: function (pluginName, callBackFunction, _target) {\n      _target = _target || pluginCallButtons[pluginName];\n      if (!this.plugins[pluginName]) {\n        throw Error('[SUNEDITOR.core.callPlugin.fail] The called plugin does not exist or is in an invalid format. (pluginName:\"' + pluginName + '\")');\n      } else if (!this.initPlugins[pluginName]) {\n        this.plugins[pluginName].add(this, _target);\n        this.initPlugins[pluginName] = true;\n      } else if (typeof this._targetPlugins[pluginName] === 'object' && !!_target) {\n        this.initMenuTarget(pluginName, _target, this._targetPlugins[pluginName]);\n      }\n      if (this.plugins[pluginName].active && !this.commandMap[pluginName] && !!_target) {\n        this.commandMap[pluginName] = _target;\n        this.activePlugins.push(pluginName);\n      }\n      if (typeof callBackFunction === 'function') callBackFunction();\n    },\n    /**\r\n     * @description If the module is not added, add the module and call the 'add' function\r\n     * @param {Array} moduleArray module object's Array [dialog, resizing]\r\n     */\n    addModule: function (moduleArray) {\n      for (let i = 0, len = moduleArray.length, moduleName; i < len; i++) {\n        moduleName = moduleArray[i].name;\n        if (!this.plugins[moduleName]) {\n          this.plugins[moduleName] = moduleArray[i];\n        }\n        if (!this.initPlugins[moduleName]) {\n          this.initPlugins[moduleName] = true;\n          if (typeof this.plugins[moduleName].add === 'function') this.plugins[moduleName].add(this);\n        }\n      }\n    },\n    /**\r\n     * @description Gets the current editor-relative scroll offset.\r\n     * @returns {Object} {top, left}\r\n     */\n    getGlobalScrollOffset: function () {\n      let t = 0,\n        l = 0;\n      let el = context.element.topArea;\n      while (el) {\n        t += el.scrollTop;\n        l += el.scrollLeft;\n        el = el.parentElement;\n      }\n      el = this._shadowRoot ? this._shadowRoot.host : null;\n      while (el) {\n        t += el.scrollTop;\n        l += el.scrollLeft;\n        el = el.parentElement;\n      }\n      return {\n        top: t,\n        left: l\n      };\n    },\n    /**\r\n     * @description Method for managing submenu element.\r\n     * You must add the \"submenu\" element using the this method at custom plugin.\r\n     * @param {String} pluginName Plugin name\r\n     * @param {Element|null} target Target button\r\n     * @param {Element} menu Submenu element\r\n     */\n    initMenuTarget: function (pluginName, target, menu) {\n      if (!target) {\n        this._targetPlugins[pluginName] = menu;\n      } else {\n        context.element._menuTray.appendChild(menu);\n        this._targetPlugins[pluginName] = true;\n        this._menuTray[target.getAttribute('data-command')] = menu;\n      }\n    },\n    /**\r\n     * @description Enable submenu\r\n     * @param {Element} element Submenu's button element to call\r\n     */\n    submenuOn: function (element) {\n      if (this._bindedSubmenuOff) this._bindedSubmenuOff();\n      if (this._bindControllersOff) this.controllersOff();\n      const submenuName = this._submenuName = element.getAttribute('data-command');\n      const menu = this.submenu = this._menuTray[submenuName];\n      this.submenuActiveButton = element;\n      this._setMenuPosition(element, menu);\n      this._bindedSubmenuOff = this.submenuOff.bind(this);\n      this.addDocEvent('mousedown', this._bindedSubmenuOff, false);\n      if (this.plugins[submenuName].on) this.plugins[submenuName].on.call(this);\n      this._antiBlur = true;\n    },\n    /**\r\n     * @description Disable submenu\r\n     */\n    submenuOff: function () {\n      this.removeDocEvent('mousedown', this._bindedSubmenuOff);\n      this._bindedSubmenuOff = null;\n      if (this.submenu) {\n        this._submenuName = '';\n        this.submenu.style.display = 'none';\n        this.submenu = null;\n        util.removeClass(this.submenuActiveButton, 'on');\n        this.submenuActiveButton = null;\n        this._notHideToolbar = false;\n      }\n      this._antiBlur = false;\n    },\n    /**\r\n     * @description Disable more layer\r\n     */\n    moreLayerOff: function () {\n      if (this._moreLayerActiveButton) {\n        const layer = context.element.toolbar.querySelector('.' + this._moreLayerActiveButton.getAttribute('data-command'));\n        layer.style.display = 'none';\n        util.removeClass(this._moreLayerActiveButton, 'on');\n        this._moreLayerActiveButton = null;\n      }\n    },\n    /**\r\n     * @description Enable container\r\n     * @param {Element} element Container's button element to call\r\n     */\n    containerOn: function (element) {\n      if (this._bindedContainerOff) this._bindedContainerOff();\n      const containerName = this._containerName = element.getAttribute('data-command');\n      const menu = this.container = this._menuTray[containerName];\n      this.containerActiveButton = element;\n      this._setMenuPosition(element, menu);\n      this._bindedContainerOff = this.containerOff.bind(this);\n      this.addDocEvent('mousedown', this._bindedContainerOff, false);\n      if (this.plugins[containerName].on) this.plugins[containerName].on.call(this);\n      this._antiBlur = true;\n    },\n    /**\r\n     * @description Disable container\r\n     */\n    containerOff: function () {\n      this.removeDocEvent('mousedown', this._bindedContainerOff);\n      this._bindedContainerOff = null;\n      if (this.container) {\n        this._containerName = '';\n        this.container.style.display = 'none';\n        this.container = null;\n        util.removeClass(this.containerActiveButton, 'on');\n        this.containerActiveButton = null;\n        this._notHideToolbar = false;\n      }\n      this._antiBlur = false;\n    },\n    /**\r\n     * @description Set the menu position. (submenu, container)\r\n     * @param {*} element Button element\r\n     * @param {*} menu Menu element\r\n     * @private\r\n     */\n    _setMenuPosition: function (element, menu) {\n      menu.style.visibility = 'hidden';\n      menu.style.display = 'block';\n      menu.style.height = '';\n      util.addClass(element, 'on');\n      const toolbar = this.context.element.toolbar;\n      const toolbarW = toolbar.offsetWidth;\n      const toolbarOffset = event._getEditorOffsets(context.element.toolbar);\n      const menuW = menu.offsetWidth;\n      const l = element.parentElement.offsetLeft + 3;\n\n      // rtl\n      if (options.rtl) {\n        const elementW = element.offsetWidth;\n        const rtlW = menuW > elementW ? menuW - elementW : 0;\n        const rtlL = rtlW > 0 ? 0 : elementW - menuW;\n        menu.style.left = l - rtlW + rtlL + 'px';\n        if (toolbarOffset.left > event._getEditorOffsets(menu).left) {\n          menu.style.left = '0px';\n        }\n      } else {\n        const overLeft = toolbarW <= menuW ? 0 : toolbarW - (l + menuW);\n        if (overLeft < 0) menu.style.left = l + overLeft + 'px';else menu.style.left = l + 'px';\n      }\n\n      // get element top\n      let t = 0;\n      let offsetEl = element;\n      while (offsetEl && offsetEl !== toolbar) {\n        t += offsetEl.offsetTop;\n        offsetEl = offsetEl.offsetParent;\n      }\n      const bt = t;\n      if (this._isBalloon) {\n        t += toolbar.offsetTop + element.offsetHeight;\n      } else {\n        t -= element.offsetHeight;\n      }\n\n      // set menu position\n      const toolbarTop = toolbarOffset.top;\n      const menuHeight = menu.offsetHeight;\n      const scrollTop = this.getGlobalScrollOffset().top;\n      const menuHeight_bottom = _w.innerHeight - (toolbarTop - scrollTop + bt + element.parentElement.offsetHeight);\n      if (menuHeight_bottom < menuHeight) {\n        let menuTop = -1 * (menuHeight - bt + 3);\n        const insTop = toolbarTop - scrollTop + menuTop;\n        const menuHeight_top = menuHeight + (insTop < 0 ? insTop : 0);\n        if (menuHeight_top > menuHeight_bottom) {\n          menu.style.height = menuHeight_top + 'px';\n          menuTop = -1 * (menuHeight_top - bt + 3);\n        } else {\n          menu.style.height = menuHeight_bottom + 'px';\n          menuTop = bt + element.parentElement.offsetHeight;\n        }\n        menu.style.top = menuTop + 'px';\n      } else {\n        menu.style.top = bt + element.parentElement.offsetHeight + 'px';\n      }\n      menu.style.visibility = '';\n    },\n    /**\r\n     * @description Show controller at editor area (controller elements, function, \"controller target element(@Required)\", \"controller name(@Required)\", etc..)\r\n     * @param {*} arguments controller elements, functions..\r\n     */\n    controllersOn: function () {\n      if (this._bindControllersOff) this._bindControllersOff();\n      this.controllerArray = [];\n      for (let i = 0, arg; i < arguments.length; i++) {\n        arg = arguments[i];\n        if (!arg) continue;\n        if (typeof arg === 'string') {\n          this.currentControllerName = arg;\n          continue;\n        }\n        if (typeof arg === 'function') {\n          this.controllerArray.push(arg);\n          continue;\n        }\n        if (!util.hasClass(arg, 'se-controller')) {\n          this.currentControllerTarget = arg;\n          this.currentFileComponentInfo = this.getFileComponent(arg);\n          continue;\n        }\n        if (arg.style) {\n          arg.style.display = 'block';\n          if (this._shadowRoot && this._shadowRootControllerEventTarget.indexOf(arg) === -1) {\n            arg.addEventListener('mousedown', function (e) {\n              e.preventDefault();\n              e.stopPropagation();\n            });\n            this._shadowRootControllerEventTarget.push(arg);\n          }\n        }\n        this.controllerArray.push(arg);\n      }\n      this._bindControllersOff = this.controllersOff.bind(this);\n      this.addDocEvent('mousedown', this._bindControllersOff, false);\n      this.addDocEvent('keydown', this._bindControllersOff, false);\n      this._antiBlur = true;\n      if (typeof functions.showController === 'function') functions.showController(this.currentControllerName, this.controllerArray, this);\n    },\n    /**\r\n     * @description Hide controller at editor area (link button, image resize button..)\r\n     * @param {KeyboardEvent|MouseEvent|null} e Event object when called from mousedown and keydown events registered in \"core.controllersOn\"\r\n     */\n    controllersOff: function (e) {\n      this._lineBreaker.style.display = 'none';\n      const len = this.controllerArray.length;\n      if (e && e.target && len > 0) {\n        for (let i = 0; i < len; i++) {\n          if (typeof this.controllerArray[i].contains === 'function' && this.controllerArray[i].contains(e.target)) return;\n        }\n      }\n      if (this._fileManager.pluginRegExp.test(this.currentControllerName) && e && e.type === 'keydown' && e.keyCode !== 27) return;\n      context.element.lineBreaker_t.style.display = context.element.lineBreaker_b.style.display = 'none';\n      this._variable._lineBreakComp = null;\n      this.currentControllerName = '';\n      this.currentControllerTarget = null;\n      this.currentFileComponentInfo = null;\n      this.effectNode = null;\n      if (!this._bindControllersOff) return;\n      this.removeDocEvent('mousedown', this._bindControllersOff);\n      this.removeDocEvent('keydown', this._bindControllersOff);\n      this._bindControllersOff = null;\n      if (len > 0) {\n        for (let i = 0; i < len; i++) {\n          if (typeof this.controllerArray[i] === 'function') this.controllerArray[i]();else this.controllerArray[i].style.display = 'none';\n        }\n        this.controllerArray = [];\n      }\n      this._antiBlur = false;\n    },\n    /**\r\n     * @description Specify the position of the controller.\r\n     * @param {Element} controller Controller element.\r\n     * @param {Element} referEl Element that is the basis of the controller's position.\r\n     * @param {String} position Type of position (\"top\" | \"bottom\")\r\n     * When using the \"top\" position, there should not be an arrow on the controller.\r\n     * When using the \"bottom\" position there should be an arrow on the controller.\r\n     * @param {Object} addOffset These are the left and top values that need to be added specially. \r\n     * This argument is required. - {left: 0, top: 0}\r\n     * Please enter the value based on ltr mode.\r\n     * Calculated automatically in rtl mode.\r\n     */\n    setControllerPosition: function (controller, referEl, position, addOffset) {\n      if (options.rtl) addOffset.left *= -1;\n      const offset = util.getOffset(referEl, context.element.wysiwygFrame);\n      controller.style.visibility = 'hidden';\n      controller.style.display = 'block';\n\n      // Height value of the arrow element is 11px\n      const topMargin = position === 'top' ? -(controller.offsetHeight + 2) : referEl.offsetHeight + 12;\n      controller.style.top = offset.top + topMargin + addOffset.top + 'px';\n      const l = offset.left - context.element.wysiwygFrame.scrollLeft + addOffset.left;\n      const controllerW = controller.offsetWidth;\n      const referElW = referEl.offsetWidth;\n      const allow = util.hasClass(controller.firstElementChild, 'se-arrow') ? controller.firstElementChild : null;\n\n      // rtl (Width value of the arrow element is 22px)\n      if (options.rtl) {\n        const rtlW = controllerW > referElW ? controllerW - referElW : 0;\n        const rtlL = rtlW > 0 ? 0 : referElW - controllerW;\n        controller.style.left = l - rtlW + rtlL + 'px';\n        if (rtlW > 0) {\n          if (allow) allow.style.left = (controllerW - 14 < 10 + rtlW ? controllerW - 14 : 10 + rtlW) + 'px';\n        }\n        const overSize = context.element.wysiwygFrame.offsetLeft - controller.offsetLeft;\n        if (overSize > 0) {\n          controller.style.left = '0px';\n          if (allow) allow.style.left = overSize + 'px';\n        }\n      } else {\n        controller.style.left = l + 'px';\n        const overSize = context.element.wysiwygFrame.offsetWidth - (controller.offsetLeft + controllerW);\n        if (overSize < 0) {\n          controller.style.left = controller.offsetLeft + overSize + 'px';\n          if (allow) allow.style.left = 20 - overSize + 'px';\n        } else {\n          if (allow) allow.style.left = '20px';\n        }\n      }\n      controller.style.visibility = '';\n    },\n    /**\r\n     * @description javascript execCommand\r\n     * @param {String} command javascript execCommand function property\r\n     * @param {Boolean|undefined} showDefaultUI javascript execCommand function property\r\n     * @param {String|undefined} value javascript execCommand function property\r\n     */\n    execCommand: function (command, showDefaultUI, value) {\n      this._wd.execCommand(command, showDefaultUI, command === 'formatBlock' ? '<' + value + '>' : value);\n      // history stack\n      this.history.push(true);\n    },\n    /**\r\n     * @description Focus to wysiwyg area using \"native focus function\"\r\n     */\n    nativeFocus: function () {\n      this.__focus();\n      this._editorRange();\n    },\n    /**\r\n     * @description Focus method\r\n     * @private\r\n     */\n    __focus: function () {\n      const caption = util.getParentElement(this.getSelectionNode(), 'figcaption');\n      if (caption) {\n        caption.focus();\n      } else {\n        context.element.wysiwyg.focus();\n      }\n    },\n    /**\r\n     * @description Focus to wysiwyg area\r\n     */\n    focus: function () {\n      if (context.element.wysiwygFrame.style.display === 'none') return;\n      if (options.iframe) {\n        this.nativeFocus();\n      } else {\n        try {\n          const range = this.getRange();\n          if (range.startContainer === range.endContainer && util.isWysiwygDiv(range.startContainer)) {\n            const currentNode = range.commonAncestorContainer.children[range.startOffset];\n            if (!util.isFormatElement(currentNode) && !util.isComponent(currentNode)) {\n              const format = util.createElement(options.defaultTag);\n              const br = util.createElement('BR');\n              format.appendChild(br);\n              context.element.wysiwyg.insertBefore(format, currentNode);\n              this.setRange(br, 0, br, 0);\n              return;\n            }\n          }\n          this.setRange(range.startContainer, range.startOffset, range.endContainer, range.endOffset);\n        } catch (e) {\n          this.nativeFocus();\n        }\n      }\n      event._applyTagEffects();\n      if (this._isBalloon) event._toggleToolbarBalloon();\n    },\n    /**\r\n     * @description If \"focusEl\" is a component, then that component is selected; if it is a format element, the last text is selected\r\n     * If \"focusEdge\" is null, then selected last element\r\n     * @param {Element|null} focusEl Focus element\r\n     */\n    focusEdge: function (focusEl) {\n      if (!focusEl) focusEl = context.element.wysiwyg.lastElementChild;\n      const fileComponentInfo = this.getFileComponent(focusEl);\n      if (fileComponentInfo) {\n        this.selectComponent(fileComponentInfo.target, fileComponentInfo.pluginName);\n      } else if (focusEl) {\n        focusEl = util.getChildElement(focusEl, function (current) {\n          return current.childNodes.length === 0 || current.nodeType === 3;\n        }, true);\n        if (!focusEl) this.nativeFocus();else this.setRange(focusEl, focusEl.textContent.length, focusEl, focusEl.textContent.length);\n      } else {\n        this.focus();\n      }\n    },\n    /**\r\n     * @description Focusout to wysiwyg area (.blur())\r\n     */\n    blur: function () {\n      if (options.iframe) {\n        context.element.wysiwygFrame.blur();\n      } else {\n        context.element.wysiwyg.blur();\n      }\n    },\n    /**\r\n     * @description Set current editor's range object and return.\r\n     * @param {Node} startCon The startContainer property of the selection object.\r\n     * @param {Number} startOff The startOffset property of the selection object.\r\n     * @param {Node} endCon The endContainer property of the selection object.\r\n     * @param {Number} endOff The endOffset property of the selection object.\r\n     * @returns {Object} Range object.\r\n     */\n    setRange: function (startCon, startOff, endCon, endOff) {\n      if (!startCon || !endCon) return;\n      if (startOff > startCon.textContent.length) startOff = startCon.textContent.length;\n      if (endOff > endCon.textContent.length) endOff = endCon.textContent.length;\n      if (util.isFormatElement(startCon)) {\n        startCon = startCon.childNodes[startOff] || startCon.childNodes[startOff - 1] || startCon;\n        startOff = startOff > 0 ? startCon.nodeType === 1 ? 1 : startCon.textContent ? startCon.textContent.length : 0 : 0;\n      }\n      if (util.isFormatElement(endCon)) {\n        endCon = endCon.childNodes[endOff] || endCon.childNodes[endOff - 1] || endCon;\n        endOff = endOff > 0 ? endCon.nodeType === 1 ? 1 : endCon.textContent ? endCon.textContent.length : 0 : 0;\n      }\n      const range = this._wd.createRange();\n      try {\n        range.setStart(startCon, startOff);\n        range.setEnd(endCon, endOff);\n      } catch (error) {\n        console.warn('[SUNEDITOR.core.focus.error] ' + error);\n        this.nativeFocus();\n        return;\n      }\n      const selection = this.getSelection();\n      if (selection.removeAllRanges) {\n        selection.removeAllRanges();\n      }\n      selection.addRange(range);\n      this._rangeInfo(range, this.getSelection());\n      if (options.iframe) this.__focus();\n      return range;\n    },\n    /**\r\n     * @description Remove range object and button effect\r\n     */\n    removeRange: function () {\n      this._variable._range = null;\n      this._variable._selectionNode = null;\n      if (this.hasFocus) this.getSelection().removeAllRanges();\n      this._setKeyEffect([]);\n    },\n    /**\r\n     * @description Get current editor's range object\r\n     * @returns {Object}\r\n     */\n    getRange: function () {\n      const range = this._variable._range || this._createDefaultRange();\n      const selection = this.getSelection();\n      if (range.collapsed === selection.isCollapsed || !context.element.wysiwyg.contains(selection.focusNode)) return range;\n      if (selection.rangeCount > 0) {\n        this._variable._range = selection.getRangeAt(0);\n        return this._variable._range;\n      } else {\n        const sc = selection.anchorNode,\n          ec = selection.focusNode,\n          so = selection.anchorOffset,\n          eo = selection.focusOffset;\n        const compareValue = util.compareElements(sc, ec);\n        const rightDir = compareValue.ancestor && (compareValue.result === 0 ? so <= eo : compareValue.result > 1 ? true : false);\n        return this.setRange(rightDir ? sc : ec, rightDir ? so : eo, rightDir ? ec : sc, rightDir ? eo : so);\n      }\n    },\n    /**\r\n     * @description If the \"range\" object is a non-editable area, add a line at the top of the editor and update the \"range\" object.\r\n     * Returns a new \"range\" or argument \"range\".\r\n     * @param {Object} range core.getRange()\r\n     * @param {Element|null} container If there is \"container\" argument, it creates a line in front of the container.\r\n     * @returns {Object} range\r\n     */\n    getRange_addLine: function (range, container) {\n      if (this._selectionVoid(range)) {\n        const wysiwyg = context.element.wysiwyg;\n        const op = util.createElement(options.defaultTag);\n        op.innerHTML = '<br>';\n        wysiwyg.insertBefore(op, container && container !== wysiwyg ? container.nextElementSibling : wysiwyg.firstElementChild);\n        this.setRange(op.firstElementChild, 0, op.firstElementChild, 1);\n        range = this._variable._range;\n      }\n      return range;\n    },\n    /**\r\n     * @description Get window selection obejct\r\n     * @returns {Object}\r\n     */\n    getSelection: function () {\n      const selection = this._shadowRoot && this._shadowRoot.getSelection ? this._shadowRoot.getSelection() : this._ww.getSelection();\n      if (!this._variable._range && !context.element.wysiwyg.contains(selection.focusNode)) {\n        selection.removeAllRanges();\n        selection.addRange(this._createDefaultRange());\n      }\n      return selection;\n    },\n    /**\r\n     * @description Get current select node\r\n     * @returns {Node}\r\n     */\n    getSelectionNode: function () {\n      if (!context.element.wysiwyg.contains(this._variable._selectionNode)) this._editorRange();\n      if (!this._variable._selectionNode) {\n        const selectionNode = util.getChildElement(context.element.wysiwyg.firstChild, function (current) {\n          return current.childNodes.length === 0 || current.nodeType === 3;\n        }, false);\n        if (!selectionNode) {\n          this._editorRange();\n        } else {\n          this._variable._selectionNode = selectionNode;\n          return selectionNode;\n        }\n      }\n      return this._variable._selectionNode;\n    },\n    /**\r\n     * @description Saving the range object and the currently selected node of editor\r\n     * @private\r\n     */\n    _editorRange: function () {\n      const activeEl = this._wd.activeElement;\n      if (util.isInputElement(activeEl)) {\n        this._variable._selectionNode = activeEl;\n        return activeEl;\n      }\n      const selection = this.getSelection();\n      if (!selection) return null;\n      let range = null;\n      if (selection.rangeCount > 0) {\n        range = selection.getRangeAt(0);\n      } else {\n        range = this._createDefaultRange();\n      }\n      this._rangeInfo(range, selection);\n    },\n    /**\r\n     * @description Set \"range\" and \"selection\" info.\r\n     * @param {Object} range range object.\r\n     * @param {Object} selection selection object.\r\n     */\n    _rangeInfo: function (range, selection) {\n      let selectionNode = null;\n      this._variable._range = range;\n      if (range.collapsed) {\n        if (util.isWysiwygDiv(range.commonAncestorContainer)) selectionNode = range.commonAncestorContainer.children[range.startOffset] || range.commonAncestorContainer;else selectionNode = range.commonAncestorContainer;\n      } else {\n        selectionNode = selection.extentNode || selection.anchorNode;\n      }\n      this._variable._selectionNode = selectionNode;\n    },\n    /**\r\n     * @description Return the range object of editor's first child node\r\n     * @returns {Object}\r\n     * @private\r\n     */\n    _createDefaultRange: function () {\n      const wysiwyg = context.element.wysiwyg;\n      const range = this._wd.createRange();\n      let firstFormat = wysiwyg.firstElementChild;\n      let focusEl = null;\n      if (!firstFormat) {\n        firstFormat = util.createElement(options.defaultTag);\n        focusEl = util.createElement('BR');\n        firstFormat.appendChild(focusEl);\n        wysiwyg.appendChild(firstFormat);\n      } else {\n        focusEl = firstFormat.firstChild;\n        if (!focusEl) {\n          focusEl = util.createElement('BR');\n          firstFormat.appendChild(focusEl);\n        }\n      }\n      range.setStart(focusEl, 0);\n      range.setEnd(focusEl, 0);\n      return range;\n    },\n    /**\r\n     * @description Returns true if there is no valid \"selection\".\r\n     * @param {Object} range core.getRange()\r\n     * @returns {Object} range\r\n     * @private\r\n     */\n    _selectionVoid: function (range) {\n      const comm = range.commonAncestorContainer;\n      return util.isWysiwygDiv(range.startContainer) && util.isWysiwygDiv(range.endContainer) || /FIGURE/i.test(comm.nodeName) || this._fileManager.regExp.test(comm.nodeName) || util.isMediaComponent(comm);\n    },\n    /**\r\n     * @description Reset range object to text node selected status.\r\n     * @returns {Boolean} Returns false if there is no valid selection.\r\n     * @private\r\n     */\n    _resetRangeToTextNode: function () {\n      const range = this.getRange();\n      if (this._selectionVoid(range)) return false;\n      let startCon = range.startContainer;\n      let startOff = range.startOffset;\n      let endCon = range.endContainer;\n      let endOff = range.endOffset;\n      let tempCon, tempOffset, tempChild;\n      if (util.isFormatElement(startCon)) {\n        if (!startCon.childNodes[startOff]) {\n          startCon = startCon.lastChild || startCon;\n          startOff = startCon.textContent.length;\n        } else {\n          startCon = startCon.childNodes[startOff] || startCon;\n          startOff = 0;\n        }\n        while (startCon && startCon.nodeType === 1 && startCon.firstChild) {\n          startCon = startCon.firstChild || startCon;\n          startOff = 0;\n        }\n      }\n      if (util.isFormatElement(endCon)) {\n        endCon = endCon.childNodes[endOff] || endCon.lastChild || endCon;\n        while (endCon && endCon.nodeType === 1 && endCon.lastChild) {\n          endCon = endCon.lastChild;\n        }\n        endOff = endCon.textContent.length;\n      }\n\n      // startContainer\n      tempCon = util.isWysiwygDiv(startCon) ? context.element.wysiwyg.firstChild : startCon;\n      tempOffset = startOff;\n      if (util.isBreak(tempCon) || tempCon.nodeType === 1 && tempCon.childNodes.length > 0) {\n        const onlyBreak = util.isBreak(tempCon);\n        if (!onlyBreak) {\n          while (tempCon && !util.isBreak(tempCon) && tempCon.nodeType === 1) {\n            tempCon = tempCon.childNodes[tempOffset] || tempCon.nextElementSibling || tempCon.nextSibling;\n            tempOffset = 0;\n          }\n          let format = util.getFormatElement(tempCon, null);\n          if (format === util.getRangeFormatElement(format, null)) {\n            format = util.createElement(util.getParentElement(tempCon, util.isCell) ? 'DIV' : options.defaultTag);\n            tempCon.parentNode.insertBefore(format, tempCon);\n            format.appendChild(tempCon);\n          }\n        }\n        if (util.isBreak(tempCon)) {\n          const emptyText = util.createTextNode(util.zeroWidthSpace);\n          tempCon.parentNode.insertBefore(emptyText, tempCon);\n          tempCon = emptyText;\n          if (onlyBreak) {\n            if (startCon === endCon) {\n              endCon = tempCon;\n              endOff = 1;\n            }\n          }\n        }\n      }\n\n      // set startContainer\n      startCon = tempCon;\n      startOff = tempOffset;\n\n      // endContainer\n      tempCon = util.isWysiwygDiv(endCon) ? context.element.wysiwyg.lastChild : endCon;\n      tempOffset = endOff;\n      if (util.isBreak(tempCon) || tempCon.nodeType === 1 && tempCon.childNodes.length > 0) {\n        const onlyBreak = util.isBreak(tempCon);\n        if (!onlyBreak) {\n          while (tempCon && !util.isBreak(tempCon) && tempCon.nodeType === 1) {\n            tempChild = tempCon.childNodes;\n            if (tempChild.length === 0) break;\n            tempCon = tempChild[tempOffset > 0 ? tempOffset - 1 : tempOffset] || !/FIGURE/i.test(tempChild[0].nodeName) ? tempChild[0] : tempCon.previousElementSibling || tempCon.previousSibling || startCon;\n            tempOffset = tempOffset > 0 ? tempCon.textContent.length : tempOffset;\n          }\n          let format = util.getFormatElement(tempCon, null);\n          if (format === util.getRangeFormatElement(format, null)) {\n            format = util.createElement(util.isCell(format) ? 'DIV' : options.defaultTag);\n            tempCon.parentNode.insertBefore(format, tempCon);\n            format.appendChild(tempCon);\n          }\n        }\n        if (util.isBreak(tempCon)) {\n          const emptyText = util.createTextNode(util.zeroWidthSpace);\n          tempCon.parentNode.insertBefore(emptyText, tempCon);\n          tempCon = emptyText;\n          tempOffset = 1;\n          if (onlyBreak && !tempCon.previousSibling) {\n            util.removeItem(endCon);\n          }\n        }\n      }\n\n      // set endContainer\n      endCon = tempCon;\n      endOff = tempOffset;\n\n      // set Range\n      this.setRange(startCon, startOff, endCon, endOff);\n      return true;\n    },\n    /**\r\n     * @description Returns a \"formatElement\"(util.isFormatElement) array from the currently selected range.\r\n     * @param {Function|null} validation The validation function. (Replaces the default validation function-util.isFormatElement(current))\r\n     * @returns {Array}\r\n     */\n    getSelectedElements: function (validation) {\n      if (!this._resetRangeToTextNode()) return [];\n      let range = this.getRange();\n      if (util.isWysiwygDiv(range.startContainer)) {\n        const children = context.element.wysiwyg.children;\n        if (children.length === 0) return [];\n        this.setRange(children[0], 0, children[children.length - 1], children[children.length - 1].textContent.trim().length);\n        range = this.getRange();\n      }\n      const startCon = range.startContainer;\n      const endCon = range.endContainer;\n      const commonCon = range.commonAncestorContainer;\n\n      // get line nodes\n      const lineNodes = util.getListChildren(commonCon, function (current) {\n        return validation ? validation(current) : util.isFormatElement(current);\n      });\n      if (!util.isWysiwygDiv(commonCon) && !util.isRangeFormatElement(commonCon)) lineNodes.unshift(util.getFormatElement(commonCon, null));\n      if (startCon === endCon || lineNodes.length === 1) return lineNodes;\n      let startLine = util.getFormatElement(startCon, null);\n      let endLine = util.getFormatElement(endCon, null);\n      let startIdx = null;\n      let endIdx = null;\n      const onlyTable = function (current) {\n        return util.isTable(current) ? /^TABLE$/i.test(current.nodeName) : true;\n      };\n      let startRangeEl = util.getRangeFormatElement(startLine, onlyTable);\n      let endRangeEl = util.getRangeFormatElement(endLine, onlyTable);\n      if (util.isTable(startRangeEl) && util.isListCell(startRangeEl.parentNode)) startRangeEl = startRangeEl.parentNode;\n      if (util.isTable(endRangeEl) && util.isListCell(endRangeEl.parentNode)) endRangeEl = endRangeEl.parentNode;\n      const sameRange = startRangeEl === endRangeEl;\n      for (let i = 0, len = lineNodes.length, line; i < len; i++) {\n        line = lineNodes[i];\n        if (startLine === line || !sameRange && line === startRangeEl) {\n          startIdx = i;\n          continue;\n        }\n        if (endLine === line || !sameRange && line === endRangeEl) {\n          endIdx = i;\n          break;\n        }\n      }\n      if (startIdx === null) startIdx = 0;\n      if (endIdx === null) endIdx = lineNodes.length - 1;\n      return lineNodes.slice(startIdx, endIdx + 1);\n    },\n    /**\r\n     * @description Get format elements and components from the selected area. (P, DIV, H[1-6], OL, UL, TABLE..)\r\n     * If some of the component are included in the selection, get the entire that component.\r\n     * @param {Boolean} removeDuplicate If true, if there is a parent and child tag among the selected elements, the child tag is excluded.\r\n     * @returns {Array}\r\n     */\n    getSelectedElementsAndComponents: function (removeDuplicate) {\n      const commonCon = this.getRange().commonAncestorContainer;\n      const myComponent = util.getParentElement(commonCon, util.isComponent);\n      const selectedLines = util.isTable(commonCon) ? this.getSelectedElements(null) : this.getSelectedElements(function (current) {\n        const component = this.getParentElement(current, this.isComponent);\n        return this.isFormatElement(current) && (!component || component === myComponent) || this.isComponent(current) && !this.getFormatElement(current);\n      }.bind(util));\n      if (removeDuplicate) {\n        for (let i = 0, len = selectedLines.length; i < len; i++) {\n          for (let j = i - 1; j >= 0; j--) {\n            if (selectedLines[j].contains(selectedLines[i])) {\n              selectedLines.splice(i, 1);\n              i--;\n              len--;\n              break;\n            }\n          }\n        }\n      }\n      return selectedLines;\n    },\n    /**\r\n     * @description Determine if this offset is the edge offset of container\r\n     * @param {Node} container The node of the selection object. (range.startContainer..)\r\n     * @param {Number} offset The offset of the selection object. (core.getRange().startOffset...)\r\n     * @param {String|undefined} dir Select check point - Both edge, Front edge or End edge. (\"front\": Front edge, \"end\": End edge, undefined: Both edge)\r\n     * @returns {Boolean}\r\n     */\n    isEdgePoint: function (container, offset, dir) {\n      return dir !== 'end' && offset === 0 || (!dir || dir !== 'front') && !container.nodeValue && offset === 1 || (!dir || dir === 'end') && !!container.nodeValue && offset === container.nodeValue.length;\n    },\n    /**\r\n     * @description Check if the container and offset values are the edges of the format tag\r\n     * @param {Node} container The node of the selection object. (range.startContainer..)\r\n     * @param {Number} offset The offset of the selection object. (core.getRange().startOffset...)\r\n     * @param {String} dir Select check point - \"front\": Front edge, \"end\": End edge, undefined: Both edge.\r\n     * @returns {Array|null}\r\n     * @private\r\n     */\n    _isEdgeFormat: function (node, offset, dir) {\n      if (!this.isEdgePoint(node, offset, dir)) return false;\n      const result = [];\n      dir = dir === 'front' ? 'previousSibling' : 'nextSibling';\n      while (node && !util.isFormatElement(node) && !util.isWysiwygDiv(node)) {\n        if (!node[dir] || util.isBreak(node[dir]) && !node[dir][dir]) {\n          if (node.nodeType === 1) result.push(node.cloneNode(false));\n          node = node.parentNode;\n        } else {\n          return null;\n        }\n      }\n      return result;\n    },\n    /**\r\n     * @description Show loading box\r\n     */\n    showLoading: function () {\n      context.element.loading.style.display = 'block';\n    },\n    /**\r\n     * @description Close loading box\r\n     */\n    closeLoading: function () {\n      context.element.loading.style.display = 'none';\n    },\n    /**\r\n     * @description Append format element to sibling node of argument element.\r\n     * If the \"formatNodeName\" argument value is present, the tag of that argument value is inserted,\r\n     * If not, the currently selected format tag is inserted.\r\n     * @param {Element} element Insert as siblings of that element\r\n     * @param {String|Element|null} formatNode Node name or node obejct to be inserted\r\n     * @returns {Element}\r\n     */\n    appendFormatTag: function (element, formatNode) {\n      if (!element || !element.parentNode) return null;\n      const currentFormatEl = util.getFormatElement(this.getSelectionNode(), null);\n      let oFormat = null;\n      if (!util.isFormatElement(element) && util.isFreeFormatElement(currentFormatEl || element.parentNode)) {\n        oFormat = util.createElement('BR');\n      } else {\n        const oFormatName = formatNode ? typeof formatNode === 'string' ? formatNode : formatNode.nodeName : util.isFormatElement(currentFormatEl) && !util.isRangeFormatElement(currentFormatEl) && !util.isFreeFormatElement(currentFormatEl) ? currentFormatEl.nodeName : options.defaultTag;\n        oFormat = util.createElement(oFormatName);\n        oFormat.innerHTML = '<br>';\n        if (formatNode && typeof formatNode !== 'string' || !formatNode && util.isFormatElement(currentFormatEl)) {\n          util.copyTagAttributes(oFormat, formatNode || currentFormatEl, ['id']);\n        }\n      }\n      if (util.isCell(element)) element.insertBefore(oFormat, element.nextElementSibling);else element.parentNode.insertBefore(oFormat, element.nextElementSibling);\n      return oFormat;\n    },\n    /**\r\n     * @description The method to insert a element and return. (used elements : table, hr, image, video)\r\n     * If \"element\" is \"HR\", insert and return the new line.\r\n     * @param {Element} element Element to be inserted\r\n     * @param {Boolean} notHistoryPush When true, it does not update the history stack and the selection object and return EdgeNodes (util.getEdgeChildNodes)\r\n     * @param {Boolean} checkCharCount If true, if \"options.maxCharCount\" is exceeded when \"element\" is added, null is returned without addition.\r\n     * @param {Boolean} notSelect If true, Do not automatically select the inserted component.\r\n     * @returns {Element}\r\n     */\n    insertComponent: function (element, notHistoryPush, checkCharCount, notSelect) {\n      if (this.isReadOnly || checkCharCount && !this.checkCharCount(element, null)) {\n        return null;\n      }\n      const r = this.removeNode();\n      this.getRange_addLine(this.getRange(), r.container);\n      let oNode = null;\n      let selectionNode = this.getSelectionNode();\n      let formatEl = util.getFormatElement(selectionNode, null);\n      if (util.isListCell(formatEl)) {\n        this.insertNode(element, selectionNode === formatEl ? null : r.container.nextSibling, false);\n        if (!element.nextSibling) element.parentNode.appendChild(util.createElement('BR'));\n      } else {\n        if (this.getRange().collapsed && (r.container.nodeType === 3 || util.isBreak(r.container))) {\n          const depthFormat = util.getParentElement(r.container, function (current) {\n            return this.isRangeFormatElement(current);\n          }.bind(util));\n          oNode = util.splitElement(r.container, r.offset, !depthFormat ? 0 : util.getElementDepth(depthFormat) + 1);\n          if (oNode) formatEl = oNode.previousSibling;\n        }\n        this.insertNode(element, util.isRangeFormatElement(formatEl) ? null : formatEl, false);\n        if (formatEl && util.onlyZeroWidthSpace(formatEl)) util.removeItem(formatEl);\n      }\n      if (!notSelect) {\n        this.setRange(element, 0, element, 0);\n        const fileComponentInfo = this.getFileComponent(element);\n        if (fileComponentInfo) {\n          this.selectComponent(fileComponentInfo.target, fileComponentInfo.pluginName);\n        } else if (oNode) {\n          oNode = util.getEdgeChildNodes(oNode, null).sc || oNode;\n          this.setRange(oNode, 0, oNode, 0);\n        }\n      }\n\n      // history stack\n      if (!notHistoryPush) this.history.push(1);\n      return oNode || element;\n    },\n    /**\r\n     * @description Gets the file component and that plugin name\r\n     * return: {target, component, pluginName} | null\r\n     * @param {Element} element Target element (figure tag, component div, file tag)\r\n     * @returns {Object|null}\r\n     */\n    getFileComponent: function (element) {\n      if (!this._fileManager.queryString || !element) return null;\n      let target, pluginName;\n      if (/^FIGURE$/i.test(element.nodeName) || /se-component/.test(element.className)) {\n        target = element.querySelector(this._fileManager.queryString);\n      }\n      if (!target && element.nodeName && this._fileManager.regExp.test(element.nodeName)) {\n        target = element;\n      }\n      if (target) {\n        pluginName = this._fileManager.pluginMap[target.nodeName.toLowerCase()];\n        if (pluginName) {\n          return {\n            target: target,\n            component: util.getParentElement(target, util.isComponent),\n            pluginName: pluginName\n          };\n        }\n      }\n      return null;\n    },\n    /**\r\n     * @description The component(image, video) is selected and the resizing module is called.\r\n     * @param {Element} element Element tag (img, iframe, video)\r\n     * @param {String} pluginName Plugin name (image, video)\r\n     */\n    selectComponent: function (element, pluginName) {\n      if (util.isUneditableComponent(util.getParentElement(element, util.isComponent)) || util.isUneditableComponent(element)) return false;\n      if (!this.hasFocus) this.focus();\n      const plugin = this.plugins[pluginName];\n      if (!plugin) return;\n      _w.setTimeout(function () {\n        if (typeof plugin.select === 'function') this.callPlugin(pluginName, plugin.select.bind(this, element), null);\n        this._setComponentLineBreaker(element);\n      }.bind(this));\n    },\n    /**\r\n     * @description Set line breaker of component\r\n     * @param {Element} element Element tag (img, iframe, video)\r\n     * @private\r\n     */\n    _setComponentLineBreaker: function (element) {\n      // line breaker\n      this._lineBreaker.style.display = 'none';\n      const container = util.getParentElement(element, util.isComponent);\n      const t_style = context.element.lineBreaker_t.style;\n      const b_style = context.element.lineBreaker_b.style;\n      const target = this.context.resizing.resizeContainer.style.display === 'block' ? this.context.resizing.resizeContainer : element;\n      const isList = util.isListCell(container.parentNode);\n      let componentTop, wScroll, w;\n      // top\n      if (isList ? !container.previousSibling : !util.isFormatElement(container.previousElementSibling)) {\n        this._variable._lineBreakComp = container;\n        wScroll = context.element.wysiwyg.scrollTop;\n        componentTop = util.getOffset(element, context.element.wysiwygFrame).top + wScroll;\n        w = target.offsetWidth / 2 / 2;\n        t_style.top = componentTop - wScroll - 12 + 'px';\n        t_style.left = util.getOffset(target).left + w + 'px';\n        t_style.display = 'block';\n      } else {\n        t_style.display = 'none';\n      }\n      // bottom\n      if (isList ? !container.nextSibling : !util.isFormatElement(container.nextElementSibling)) {\n        if (!componentTop) {\n          this._variable._lineBreakComp = container;\n          wScroll = context.element.wysiwyg.scrollTop;\n          componentTop = util.getOffset(element, context.element.wysiwygFrame).top + wScroll;\n          w = target.offsetWidth / 2 / 2;\n        }\n        b_style.top = componentTop + target.offsetHeight - wScroll - 12 + 'px';\n        b_style.left = util.getOffset(target).left + target.offsetWidth - w - 24 + 'px';\n        b_style.display = 'block';\n      } else {\n        b_style.display = 'none';\n      }\n    },\n    _checkDuplicateNode: function (oNode, parentNode) {\n      (function recursionFunc(current) {\n        core._dupleCheck(current, parentNode);\n        const childNodes = current.childNodes;\n        for (let i = 0, len = childNodes.length; i < len; i++) {\n          recursionFunc(childNodes[i]);\n        }\n      })(oNode);\n    },\n    _dupleCheck: function (oNode, parentNode) {\n      if (!util.isTextStyleElement(oNode)) return;\n      const oStyles = (oNode.style.cssText.match(/[^;]+;/g) || []).map(function (v) {\n        return v.trim();\n      });\n      const nodeName = oNode.nodeName;\n      if (/^span$/i.test(nodeName) && oStyles.length === 0) return oNode;\n      let duple = false;\n      (function recursionFunc(ancestor) {\n        if (util.isWysiwygDiv(ancestor) || !util.isTextStyleElement(ancestor)) return;\n        if (ancestor.nodeName === nodeName) {\n          duple = true;\n          const styles = ancestor.style.cssText.match(/[^;]+;/g) || [];\n          for (let i = 0, len = styles.length, j; i < len; i++) {\n            if ((j = oStyles.indexOf(styles[i].trim())) > -1) {\n              oStyles.splice(j, 1);\n            }\n          }\n          for (let i = 0, len = ancestor.classList.length; i < len; i++) {\n            oNode.classList.remove(ancestor.classList[i]);\n          }\n        }\n        recursionFunc(ancestor.parentElement);\n      })(parentNode);\n      if (duple) {\n        if (!(oNode.style.cssText = oStyles.join(' '))) {\n          oNode.setAttribute('style', '');\n          oNode.removeAttribute('style');\n        }\n        if (!oNode.attributes.length) {\n          oNode.setAttribute('data-se-duple', 'true');\n        }\n      }\n      return oNode;\n    },\n    /**\r\n     * @description Delete selected node and insert argument value node and return.\r\n     * If the \"afterNode\" exists, it is inserted after the \"afterNode\"\r\n     * Inserting a text node merges with both text nodes on both sides and returns a new \"{ container, startOffset, endOffset }\".\r\n     * @param {Node} oNode Element to be inserted\r\n     * @param {Node|null} afterNode If the node exists, it is inserted after the node\r\n     * @param {Boolean} checkCharCount If true, if \"options.maxCharCount\" is exceeded when \"element\" is added, null is returned without addition.\r\n     * @returns {Object|Node|null}\r\n     */\n    insertNode: function (oNode, afterNode, checkCharCount) {\n      if (this.isReadOnly || checkCharCount && !this.checkCharCount(oNode, null)) {\n        return null;\n      }\n      let range = this.getRange();\n      let line = util.isListCell(range.commonAncestorContainer) ? range.commonAncestorContainer : util.getFormatElement(this.getSelectionNode(), null);\n      let insertListCell = util.isListCell(line) && (util.isListCell(oNode) || util.isList(oNode));\n      let parentNode,\n        originAfter,\n        tempAfterNode,\n        tempParentNode = null;\n      const freeFormat = util.isFreeFormatElement(line);\n      const isFormats = !freeFormat && (util.isFormatElement(oNode) || util.isRangeFormatElement(oNode)) || util.isComponent(oNode);\n      if (insertListCell) {\n        tempAfterNode = afterNode || util.isList(oNode) ? line.lastChild : line.nextElementSibling;\n        tempParentNode = util.isList(oNode) ? line : (tempAfterNode || line).parentNode;\n      }\n      if (!afterNode && (isFormats || util.isComponent(oNode) || util.isMedia(oNode))) {\n        const isEdge = this.isEdgePoint(range.endContainer, range.endOffset, 'end');\n        const r = this.removeNode();\n        const container = r.container;\n        const prevContainer = container === r.prevContainer && range.collapsed ? null : r.prevContainer;\n        if (insertListCell && prevContainer) {\n          tempParentNode = prevContainer.nodeType === 3 ? prevContainer.parentNode : prevContainer;\n          if (tempParentNode.contains(container)) {\n            let sameParent = true;\n            tempAfterNode = container;\n            while (tempAfterNode.parentNode && tempAfterNode.parentNode !== tempParentNode) {\n              tempAfterNode = tempAfterNode.parentNode;\n              sameParent = false;\n            }\n            if (sameParent && container === prevContainer) tempAfterNode = tempAfterNode.nextSibling;\n          } else {\n            tempAfterNode = null;\n          }\n        } else if (insertListCell && util.isListCell(container) && !line.parentElement) {\n          line = util.createElement('LI');\n          tempParentNode.appendChild(line);\n          container.appendChild(tempParentNode);\n          tempAfterNode = null;\n        } else if (container.nodeType === 3 || util.isBreak(container) || insertListCell) {\n          const depthFormat = util.getParentElement(container, function (current) {\n            return this.isRangeFormatElement(current) || this.isListCell(current);\n          }.bind(util));\n          afterNode = util.splitElement(container, r.offset, !depthFormat ? 0 : util.getElementDepth(depthFormat) + 1);\n          if (!afterNode) {\n            tempAfterNode = afterNode = line;\n          } else if (insertListCell) {\n            if (line.contains(container)) {\n              const subList = util.isList(line.lastElementChild);\n              let newCell = null;\n              if (!isEdge) {\n                newCell = line.cloneNode(false);\n                newCell.appendChild(afterNode.textContent.trim() ? afterNode : util.createTextNode(util.zeroWidthSpace));\n              }\n              if (subList) {\n                if (!newCell) {\n                  newCell = line.cloneNode(false);\n                  newCell.appendChild(util.createTextNode(util.zeroWidthSpace));\n                }\n                newCell.appendChild(line.lastElementChild);\n              }\n              if (newCell) {\n                line.parentNode.insertBefore(newCell, line.nextElementSibling);\n                tempAfterNode = afterNode = newCell;\n              }\n            }\n          } else {\n            afterNode = afterNode.previousSibling;\n          }\n        }\n      }\n      range = !afterNode && !isFormats ? this.getRange_addLine(this.getRange(), null) : this.getRange();\n      const commonCon = range.commonAncestorContainer;\n      const startOff = range.startOffset;\n      const endOff = range.endOffset;\n      const formatRange = range.startContainer === commonCon && util.isFormatElement(commonCon);\n      const startCon = formatRange ? commonCon.childNodes[startOff] || commonCon.childNodes[0] || range.startContainer : range.startContainer;\n      const endCon = formatRange ? commonCon.childNodes[endOff] || commonCon.childNodes[commonCon.childNodes.length - 1] || range.endContainer : range.endContainer;\n      if (!insertListCell) {\n        if (!afterNode) {\n          parentNode = startCon;\n          if (startCon.nodeType === 3) {\n            parentNode = startCon.parentNode;\n          }\n\n          /** No Select range node */\n          if (range.collapsed) {\n            if (commonCon.nodeType === 3) {\n              if (commonCon.textContent.length > endOff) afterNode = commonCon.splitText(endOff);else afterNode = commonCon.nextSibling;\n            } else {\n              if (!util.isBreak(parentNode)) {\n                let c = parentNode.childNodes[startOff];\n                const focusNode = c && c.nodeType === 3 && util.onlyZeroWidthSpace(c) && util.isBreak(c.nextSibling) ? c.nextSibling : c;\n                if (focusNode) {\n                  if (!focusNode.nextSibling && util.isBreak(focusNode)) {\n                    parentNode.removeChild(focusNode);\n                    afterNode = null;\n                  } else {\n                    afterNode = util.isBreak(focusNode) && !util.isBreak(oNode) ? focusNode : focusNode.nextSibling;\n                  }\n                } else {\n                  afterNode = null;\n                }\n              } else {\n                afterNode = parentNode;\n                parentNode = parentNode.parentNode;\n              }\n            }\n          } else {\n            /** Select range nodes */\n            const isSameContainer = startCon === endCon;\n            if (isSameContainer) {\n              if (this.isEdgePoint(endCon, endOff)) afterNode = endCon.nextSibling;else afterNode = endCon.splitText(endOff);\n              let removeNode = startCon;\n              if (!this.isEdgePoint(startCon, startOff)) removeNode = startCon.splitText(startOff);\n              parentNode.removeChild(removeNode);\n              if (parentNode.childNodes.length === 0 && isFormats) {\n                parentNode.innerHTML = '<br>';\n              }\n            } else {\n              const removedTag = this.removeNode();\n              const container = removedTag.container;\n              const prevContainer = removedTag.prevContainer;\n              if (container && container.childNodes.length === 0 && isFormats) {\n                if (util.isFormatElement(container)) {\n                  container.innerHTML = '<br>';\n                } else if (util.isRangeFormatElement(container)) {\n                  container.innerHTML = '<' + options.defaultTag + '><br></' + options.defaultTag + '>';\n                }\n              }\n              if (util.isListCell(container) && oNode.nodeType === 3) {\n                parentNode = container;\n                afterNode = null;\n              } else if (!isFormats && prevContainer) {\n                parentNode = prevContainer.nodeType === 3 ? prevContainer.parentNode : prevContainer;\n                if (parentNode.contains(container)) {\n                  let sameParent = true;\n                  afterNode = container;\n                  while (afterNode.parentNode && afterNode.parentNode !== parentNode) {\n                    afterNode = afterNode.parentNode;\n                    sameParent = false;\n                  }\n                  if (sameParent && container === prevContainer) afterNode = afterNode.nextSibling;\n                } else {\n                  afterNode = null;\n                }\n              } else if (util.isWysiwygDiv(container) && !util.isFormatElement(oNode)) {\n                parentNode = container.appendChild(util.createElement(options.defaultTag));\n                afterNode = null;\n              } else {\n                afterNode = isFormats ? endCon : container === prevContainer ? container.nextSibling : container;\n                parentNode = !afterNode || !afterNode.parentNode ? commonCon : afterNode.parentNode;\n              }\n              while (afterNode && !util.isFormatElement(afterNode) && afterNode.parentNode !== commonCon) {\n                afterNode = afterNode.parentNode;\n              }\n            }\n          }\n        } else {\n          // has afterNode\n          parentNode = afterNode.parentNode;\n          afterNode = afterNode.nextSibling;\n          originAfter = true;\n        }\n      }\n      try {\n        // set node\n        if (!insertListCell) {\n          if (util.isWysiwygDiv(afterNode) || parentNode === context.element.wysiwyg.parentNode) {\n            parentNode = context.element.wysiwyg;\n            afterNode = null;\n          }\n          if (util.isFormatElement(oNode) || util.isRangeFormatElement(oNode) || !util.isListCell(parentNode) && util.isComponent(oNode)) {\n            const oldParent = parentNode;\n            if (util.isList(afterNode)) {\n              parentNode = afterNode;\n              afterNode = null;\n            } else if (util.isListCell(afterNode)) {\n              parentNode = afterNode.previousElementSibling || afterNode;\n            } else if (!originAfter && !afterNode) {\n              const r = this.removeNode();\n              const container = r.container.nodeType === 3 ? util.isListCell(util.getFormatElement(r.container, null)) ? r.container : util.getFormatElement(r.container, null) || r.container.parentNode : r.container;\n              const rangeCon = util.isWysiwygDiv(container) || util.isRangeFormatElement(container);\n              parentNode = rangeCon ? container : container.parentNode;\n              afterNode = rangeCon ? null : container.nextSibling;\n            }\n            if (oldParent.childNodes.length === 0 && parentNode !== oldParent) util.removeItem(oldParent);\n          }\n          if (isFormats && !freeFormat && !util.isRangeFormatElement(parentNode) && !util.isListCell(parentNode) && !util.isWysiwygDiv(parentNode)) {\n            afterNode = parentNode.nextElementSibling;\n            parentNode = parentNode.parentNode;\n          }\n          if (util.isWysiwygDiv(parentNode) && (oNode.nodeType === 3 || util.isBreak(oNode))) {\n            const fNode = util.createElement(options.defaultTag);\n            fNode.appendChild(oNode);\n            oNode = fNode;\n          }\n        }\n\n        // insert--\n        if (insertListCell) {\n          if (!tempParentNode.parentNode) {\n            parentNode = context.element.wysiwyg;\n            afterNode = null;\n          } else {\n            parentNode = tempParentNode;\n            afterNode = tempAfterNode;\n          }\n        } else {\n          afterNode = parentNode === afterNode ? parentNode.lastChild : afterNode;\n        }\n        if (util.isListCell(oNode) && !util.isList(parentNode)) {\n          if (util.isListCell(parentNode)) {\n            afterNode = parentNode.nextElementSibling;\n            parentNode = parentNode.parentNode;\n          } else {\n            const ul = util.createElement('ol');\n            parentNode.insertBefore(ul, afterNode);\n            parentNode = ul;\n            afterNode = null;\n          }\n          insertListCell = true;\n        }\n        this._checkDuplicateNode(oNode, parentNode);\n        parentNode.insertBefore(oNode, afterNode);\n        if (insertListCell) {\n          if (util.onlyZeroWidthSpace(line.textContent.trim())) {\n            util.removeItem(line);\n            oNode = oNode.lastChild;\n          } else {\n            const chList = util.getArrayItem(line.children, util.isList);\n            if (chList) {\n              if (oNode !== chList) {\n                oNode.appendChild(chList);\n                oNode = chList.previousSibling;\n              } else {\n                parentNode.appendChild(oNode);\n                oNode = parentNode;\n              }\n              if (util.onlyZeroWidthSpace(line.textContent.trim())) {\n                util.removeItem(line);\n              }\n            }\n          }\n        }\n      } catch (error) {\n        parentNode.appendChild(oNode);\n        console.warn('[SUNEDITOR.insertNode.warn] ' + error);\n      } finally {\n        const dupleNodes = parentNode.querySelectorAll('[data-se-duple]');\n        if (dupleNodes.length > 0) {\n          for (let i = 0, len = dupleNodes.length, d, c, ch, parent; i < len; i++) {\n            d = dupleNodes[i];\n            ch = d.childNodes;\n            parent = d.parentNode;\n            while (ch[0]) {\n              c = ch[0];\n              parent.insertBefore(c, d);\n            }\n            if (d === oNode) oNode = c;\n            util.removeItem(d);\n          }\n        }\n        if ((util.isFormatElement(oNode) || util.isComponent(oNode)) && startCon === endCon) {\n          const cItem = util.getFormatElement(commonCon, null);\n          if (cItem && cItem.nodeType === 1 && util.isEmptyLine(cItem)) {\n            util.removeItem(cItem);\n          }\n        }\n        if (freeFormat && (util.isFormatElement(oNode) || util.isRangeFormatElement(oNode))) {\n          oNode = this._setIntoFreeFormat(oNode);\n        }\n        if (!util.isComponent(oNode)) {\n          let offset = 1;\n          if (oNode.nodeType === 3) {\n            const previous = oNode.previousSibling;\n            const next = oNode.nextSibling;\n            const previousText = !previous || previous.nodeType === 1 || util.onlyZeroWidthSpace(previous) ? '' : previous.textContent;\n            const nextText = !next || next.nodeType === 1 || util.onlyZeroWidthSpace(next) ? '' : next.textContent;\n            if (previous && previousText.length > 0) {\n              oNode.textContent = previousText + oNode.textContent;\n              util.removeItem(previous);\n            }\n            if (next && next.length > 0) {\n              oNode.textContent += nextText;\n              util.removeItem(next);\n            }\n            const newRange = {\n              container: oNode,\n              startOffset: previousText.length,\n              endOffset: oNode.textContent.length - nextText.length\n            };\n            this.setRange(oNode, newRange.startOffset, oNode, newRange.endOffset);\n            return newRange;\n          } else if (!util.isBreak(oNode) && !util.isListCell(oNode) && util.isFormatElement(parentNode)) {\n            let zeroWidth = null;\n            if (!oNode.previousSibling || util.isBreak(oNode.previousSibling)) {\n              zeroWidth = util.createTextNode(util.zeroWidthSpace);\n              oNode.parentNode.insertBefore(zeroWidth, oNode);\n            }\n            if (!oNode.nextSibling || util.isBreak(oNode.nextSibling)) {\n              zeroWidth = util.createTextNode(util.zeroWidthSpace);\n              oNode.parentNode.insertBefore(zeroWidth, oNode.nextSibling);\n            }\n            if (util._isIgnoreNodeChange(oNode)) {\n              oNode = oNode.nextSibling;\n              offset = 0;\n            }\n          }\n          this.setRange(oNode, offset, oNode, offset);\n        }\n\n        // history stack\n        this.history.push(true);\n        return oNode;\n      }\n    },\n    _setIntoFreeFormat: function (oNode) {\n      const parentNode = oNode.parentNode;\n      let oNodeChildren, lastONode;\n      while (util.isFormatElement(oNode) || util.isRangeFormatElement(oNode)) {\n        oNodeChildren = oNode.childNodes;\n        lastONode = null;\n        while (oNodeChildren[0]) {\n          lastONode = oNodeChildren[0];\n          if (util.isFormatElement(lastONode) || util.isRangeFormatElement(lastONode)) {\n            this._setIntoFreeFormat(lastONode);\n            if (!oNode.parentNode) break;\n            oNodeChildren = oNode.childNodes;\n            continue;\n          }\n          parentNode.insertBefore(lastONode, oNode);\n        }\n        if (oNode.childNodes.length === 0) util.removeItem(oNode);\n        oNode = util.createElement('BR');\n        parentNode.insertBefore(oNode, lastONode.nextSibling);\n      }\n      return oNode;\n    },\n    /**\r\n     * @description Delete the currently selected nodes and reset selection range\r\n     * Returns {container: \"the last element after deletion\", offset: \"offset\", prevContainer: \"previousElementSibling Of the deleted area\"}\r\n     * @returns {Object}\r\n     */\n    removeNode: function () {\n      this._resetRangeToTextNode();\n      const range = this.getRange();\n      const isStartEdge = range.startOffset === 0;\n      const isEndEdge = core.isEdgePoint(range.endContainer, range.endOffset, 'end');\n      let prevContainer = null;\n      let startPrevEl = null;\n      let endNextEl = null;\n      if (isStartEdge) {\n        startPrevEl = util.getFormatElement(range.startContainer);\n        prevContainer = startPrevEl.previousElementSibling;\n        startPrevEl = startPrevEl ? prevContainer : startPrevEl;\n      }\n      if (isEndEdge) {\n        endNextEl = util.getFormatElement(range.endContainer);\n        endNextEl = endNextEl ? endNextEl.nextElementSibling : endNextEl;\n      }\n      let container,\n        offset = 0;\n      let startCon = range.startContainer;\n      let endCon = range.endContainer;\n      let startOff = range.startOffset;\n      let endOff = range.endOffset;\n      const commonCon = range.commonAncestorContainer.nodeType === 3 && range.commonAncestorContainer.parentNode === startCon.parentNode ? startCon.parentNode : range.commonAncestorContainer;\n      if (commonCon === startCon && commonCon === endCon) {\n        startCon = commonCon.children[startOff];\n        endCon = commonCon.children[endOff];\n        startOff = endOff = 0;\n      }\n      if (!startCon || !endCon) return {\n        container: commonCon,\n        offset: 0\n      };\n      if (startCon === endCon && range.collapsed) {\n        if (startCon.textContent && util.onlyZeroWidthSpace(startCon.textContent.substr(startOff))) {\n          return {\n            container: startCon,\n            offset: startOff,\n            prevContainer: startCon && startCon.parentNode ? startCon : null\n          };\n        }\n      }\n      let beforeNode = null;\n      let afterNode = null;\n      const childNodes = util.getListChildNodes(commonCon, null);\n      let startIndex = util.getArrayIndex(childNodes, startCon);\n      let endIndex = util.getArrayIndex(childNodes, endCon);\n      if (childNodes.length > 0 && startIndex > -1 && endIndex > -1) {\n        for (let i = startIndex + 1, startNode = startCon; i >= 0; i--) {\n          if (childNodes[i] === startNode.parentNode && childNodes[i].firstChild === startNode && startOff === 0) {\n            startIndex = i;\n            startNode = startNode.parentNode;\n          }\n        }\n        for (let i = endIndex - 1, endNode = endCon; i > startIndex; i--) {\n          if (childNodes[i] === endNode.parentNode && childNodes[i].nodeType === 1) {\n            childNodes.splice(i, 1);\n            endNode = endNode.parentNode;\n            --endIndex;\n          }\n        }\n      } else {\n        if (childNodes.length === 0) {\n          if (util.isFormatElement(commonCon) || util.isRangeFormatElement(commonCon) || util.isWysiwygDiv(commonCon) || util.isBreak(commonCon) || util.isMedia(commonCon)) {\n            return {\n              container: commonCon,\n              offset: 0\n            };\n          } else if (commonCon.nodeType === 3) {\n            return {\n              container: commonCon,\n              offset: endOff\n            };\n          }\n          childNodes.push(commonCon);\n          startCon = endCon = commonCon;\n        } else {\n          startCon = endCon = childNodes[0];\n          if (util.isBreak(startCon) || util.onlyZeroWidthSpace(startCon)) {\n            return {\n              container: util.isMedia(commonCon) ? commonCon : startCon,\n              offset: 0\n            };\n          }\n        }\n        startIndex = endIndex = 0;\n      }\n      for (let i = startIndex; i <= endIndex; i++) {\n        const item = childNodes[i];\n        if (item.length === 0 || item.nodeType === 3 && item.data === undefined) {\n          this._nodeRemoveListItem(item);\n          continue;\n        }\n        if (item === startCon) {\n          if (startCon.nodeType === 1) {\n            if (util.isComponent(startCon)) continue;else beforeNode = util.createTextNode(startCon.textContent);\n          } else {\n            if (item === endCon) {\n              beforeNode = util.createTextNode(startCon.substringData(0, startOff) + endCon.substringData(endOff, endCon.length - endOff));\n              offset = startOff;\n            } else {\n              beforeNode = util.createTextNode(startCon.substringData(0, startOff));\n            }\n          }\n          if (beforeNode.length > 0) {\n            startCon.data = beforeNode.data;\n          } else {\n            this._nodeRemoveListItem(startCon);\n          }\n          if (item === endCon) break;\n          continue;\n        }\n        if (item === endCon) {\n          if (endCon.nodeType === 1) {\n            if (util.isComponent(endCon)) continue;else afterNode = util.createTextNode(endCon.textContent);\n          } else {\n            afterNode = util.createTextNode(endCon.substringData(endOff, endCon.length - endOff));\n          }\n          if (afterNode.length > 0) {\n            endCon.data = afterNode.data;\n          } else {\n            this._nodeRemoveListItem(endCon);\n          }\n          continue;\n        }\n        this._nodeRemoveListItem(item);\n      }\n      const endUl = util.getParentElement(endCon, 'ul');\n      const startLi = util.getParentElement(startCon, 'li');\n      if (endUl && startLi && startLi.contains(endUl)) {\n        container = endUl.previousSibling;\n        offset = container.textContent.length;\n      } else {\n        container = endCon && endCon.parentNode ? endCon : startCon && startCon.parentNode ? startCon : range.endContainer || range.startContainer;\n        offset = !isStartEdge && !isEndEdge ? offset : isEndEdge ? container.textContent.length : 0;\n      }\n      if (!util.isWysiwygDiv(container) && container.childNodes.length === 0) {\n        const rc = util.removeItemAllParents(container, null, null);\n        if (rc) container = rc.sc || rc.ec || context.element.wysiwyg;\n      }\n      if (!util.getFormatElement(container) && !(startCon && startCon.parentNode)) {\n        if (endNextEl) {\n          container = endNextEl;\n          offset = 0;\n        } else if (startPrevEl) {\n          container = startPrevEl;\n          offset = 1;\n        }\n      }\n\n      // set range\n      this.setRange(container, offset, container, offset);\n      // history stack\n      this.history.push(true);\n      return {\n        container: container,\n        offset: offset,\n        prevContainer: prevContainer\n      };\n    },\n    _nodeRemoveListItem: function (item) {\n      const format = util.getFormatElement(item, null);\n      util.removeItem(item);\n      if (!util.isListCell(format)) return;\n      util.removeItemAllParents(format, null, null);\n      if (format && util.isList(format.firstChild)) {\n        format.insertBefore(util.createTextNode(util.zeroWidthSpace), format.firstChild);\n      }\n    },\n    /**\r\n     * @description Appended all selected format Element to the argument element and insert\r\n     * @param {Element} rangeElement Element of wrap the arguments (BLOCKQUOTE...)\r\n     */\n    applyRangeFormatElement: function (rangeElement) {\n      this.getRange_addLine(this.getRange(), null);\n      const rangeLines = this.getSelectedElementsAndComponents(false);\n      if (!rangeLines || rangeLines.length === 0) return;\n      linesLoop: for (let i = 0, len = rangeLines.length, line, nested, fEl, lEl, f, l; i < len; i++) {\n        line = rangeLines[i];\n        if (!util.isListCell(line)) continue;\n        nested = line.lastElementChild;\n        if (nested && util.isListCell(line.nextElementSibling) && rangeLines.indexOf(line.nextElementSibling) > -1) {\n          lEl = nested.lastElementChild;\n          if (rangeLines.indexOf(lEl) > -1) {\n            let list = null;\n            while (list = lEl.lastElementChild) {\n              if (util.isList(list)) {\n                if (rangeLines.indexOf(list.lastElementChild) > -1) {\n                  lEl = list.lastElementChild;\n                } else {\n                  continue linesLoop;\n                }\n              }\n            }\n            fEl = nested.firstElementChild;\n            f = rangeLines.indexOf(fEl);\n            l = rangeLines.indexOf(lEl);\n            rangeLines.splice(f, l - f + 1);\n            len = rangeLines.length;\n            continue;\n          }\n        }\n      }\n      let last = rangeLines[rangeLines.length - 1];\n      let standTag, beforeTag, pElement;\n      if (util.isRangeFormatElement(last) || util.isFormatElement(last)) {\n        standTag = last;\n      } else {\n        standTag = util.getRangeFormatElement(last, null) || util.getFormatElement(last, null);\n      }\n      if (util.isCell(standTag)) {\n        beforeTag = null;\n        pElement = standTag;\n      } else {\n        beforeTag = standTag.nextSibling;\n        pElement = standTag.parentNode;\n      }\n      let parentDepth = util.getElementDepth(standTag);\n      let listParent = null;\n      const lineArr = [];\n      const removeItems = function (parent, origin, before) {\n        let cc = null;\n        if (parent !== origin && !util.isTable(origin)) {\n          if (origin && util.getElementDepth(parent) === util.getElementDepth(origin)) return before;\n          cc = util.removeItemAllParents(origin, null, parent);\n        }\n        return cc ? cc.ec : before;\n      };\n      for (let i = 0, len = rangeLines.length, line, originParent, depth, before, nextLine, nextList, nested; i < len; i++) {\n        line = rangeLines[i];\n        originParent = line.parentNode;\n        if (!originParent || rangeElement.contains(originParent)) continue;\n        depth = util.getElementDepth(line);\n        if (util.isList(originParent)) {\n          if (listParent === null) {\n            if (nextList) {\n              listParent = nextList;\n              nested = true;\n              nextList = null;\n            } else {\n              listParent = originParent.cloneNode(false);\n            }\n          }\n          lineArr.push(line);\n          nextLine = rangeLines[i + 1];\n          if (i === len - 1 || nextLine && nextLine.parentNode !== originParent) {\n            // nested list\n            if (nextLine && line.contains(nextLine.parentNode)) {\n              nextList = nextLine.parentNode.cloneNode(false);\n            }\n            let list = originParent.parentNode,\n              p;\n            while (util.isList(list)) {\n              p = util.createElement(list.nodeName);\n              p.appendChild(listParent);\n              listParent = p;\n              list = list.parentNode;\n            }\n            const edge = this.detachRangeFormatElement(originParent, lineArr, null, true, true);\n            if (parentDepth >= depth) {\n              parentDepth = depth;\n              pElement = edge.cc;\n              beforeTag = removeItems(pElement, originParent, edge.ec);\n              if (beforeTag) pElement = beforeTag.parentNode;\n            } else if (pElement === edge.cc) {\n              beforeTag = edge.ec;\n            }\n            if (pElement !== edge.cc) {\n              before = removeItems(pElement, edge.cc, before);\n              if (before !== undefined) beforeTag = before;else beforeTag = edge.cc;\n            }\n            for (let c = 0, cLen = edge.removeArray.length; c < cLen; c++) {\n              listParent.appendChild(edge.removeArray[c]);\n            }\n            if (!nested) rangeElement.appendChild(listParent);\n            if (nextList) edge.removeArray[edge.removeArray.length - 1].appendChild(nextList);\n            listParent = null;\n            nested = false;\n          }\n        } else {\n          if (parentDepth >= depth) {\n            parentDepth = depth;\n            pElement = originParent;\n            beforeTag = line.nextSibling;\n          }\n          rangeElement.appendChild(line);\n          if (pElement !== originParent) {\n            before = removeItems(pElement, originParent);\n            if (before !== undefined) beforeTag = before;\n          }\n        }\n      }\n      this.effectNode = null;\n      util.mergeSameTags(rangeElement, null, false);\n      util.mergeNestedTags(rangeElement, function (current) {\n        return this.isList(current);\n      }.bind(util));\n\n      // Nested list\n      if (beforeTag && util.getElementDepth(beforeTag) > 0 && (util.isList(beforeTag.parentNode) || util.isList(beforeTag.parentNode.parentNode))) {\n        const depthFormat = util.getParentElement(beforeTag, function (current) {\n          return this.isRangeFormatElement(current) && !this.isList(current);\n        }.bind(util));\n        const splitRange = util.splitElement(beforeTag, null, !depthFormat ? 0 : util.getElementDepth(depthFormat) + 1);\n        splitRange.parentNode.insertBefore(rangeElement, splitRange);\n      } else {\n        // basic\n        pElement.insertBefore(rangeElement, beforeTag);\n        removeItems(rangeElement, beforeTag);\n      }\n      const edge = util.getEdgeChildNodes(rangeElement.firstElementChild, rangeElement.lastElementChild);\n      if (rangeLines.length > 1) {\n        this.setRange(edge.sc, 0, edge.ec, edge.ec.textContent.length);\n      } else {\n        this.setRange(edge.ec, edge.ec.textContent.length, edge.ec, edge.ec.textContent.length);\n      }\n\n      // history stack\n      this.history.push(false);\n    },\n    /**\r\n     * @description The elements of the \"selectedFormats\" array are detached from the \"rangeElement\" element. (\"LI\" tags are converted to \"P\" tags)\r\n     * When \"selectedFormats\" is null, all elements are detached and return {cc: parentNode, sc: nextSibling, ec: previousSibling, removeArray: [Array of removed elements]}.\r\n     * @param {Element} rangeElement Range format element (PRE, BLOCKQUOTE, OL, UL...)\r\n     * @param {Array|null} selectedFormats Array of format elements (P, DIV, LI...) to remove.\r\n     * If null, Applies to all elements and return {cc: parentNode, sc: nextSibling, ec: previousSibling}\r\n     * @param {Element|null} newRangeElement The node(rangeElement) to replace the currently wrapped node.\r\n     * @param {Boolean} remove If true, deleted without detached.\r\n     * @param {Boolean} notHistoryPush When true, it does not update the history stack and the selection object and return EdgeNodes (util.getEdgeChildNodes)\r\n     * @returns {Object}\r\n     */\n    detachRangeFormatElement: function (rangeElement, selectedFormats, newRangeElement, remove, notHistoryPush) {\n      const range = this.getRange();\n      let so = range.startOffset;\n      let eo = range.endOffset;\n      let children = util.getListChildNodes(rangeElement, function (current) {\n        return current.parentNode === rangeElement;\n      });\n      let parent = rangeElement.parentNode;\n      let firstNode = null;\n      let lastNode = null;\n      let rangeEl = rangeElement.cloneNode(false);\n      const removeArray = [];\n      const newList = util.isList(newRangeElement);\n      let insertedNew = false;\n      let reset = false;\n      let moveComplete = false;\n      function appendNode(parent, insNode, sibling, originNode) {\n        if (util.onlyZeroWidthSpace(insNode)) {\n          insNode.innerHTML = util.zeroWidthSpace;\n          so = eo = 1;\n        }\n        if (insNode.nodeType === 3) {\n          parent.insertBefore(insNode, sibling);\n          return insNode;\n        }\n        const insChildren = (moveComplete ? insNode : originNode).childNodes;\n        let format = insNode.cloneNode(false);\n        let first = null;\n        let c = null;\n        while (insChildren[0]) {\n          c = insChildren[0];\n          if (util._notTextNode(c) && !util.isBreak(c) && !util.isListCell(format)) {\n            if (format.childNodes.length > 0) {\n              if (!first) first = format;\n              parent.insertBefore(format, sibling);\n              format = insNode.cloneNode(false);\n            }\n            parent.insertBefore(c, sibling);\n            if (!first) first = c;\n          } else {\n            format.appendChild(c);\n          }\n        }\n        if (format.childNodes.length > 0) {\n          if (util.isListCell(parent) && util.isListCell(format) && util.isList(sibling)) {\n            if (newList) {\n              first = sibling;\n              while (sibling) {\n                format.appendChild(sibling);\n                sibling = sibling.nextSibling;\n              }\n              parent.parentNode.insertBefore(format, parent.nextElementSibling);\n            } else {\n              const originNext = originNode.nextElementSibling;\n              const detachRange = util.detachNestedList(originNode, false);\n              if (rangeElement !== detachRange || originNext !== originNode.nextElementSibling) {\n                const fChildren = format.childNodes;\n                while (fChildren[0]) {\n                  originNode.appendChild(fChildren[0]);\n                }\n                rangeElement = detachRange;\n                reset = true;\n              }\n            }\n          } else {\n            parent.insertBefore(format, sibling);\n          }\n          if (!first) first = format;\n        }\n        return first;\n      }\n\n      // detach loop\n      for (let i = 0, len = children.length, insNode, lineIndex, next; i < len; i++) {\n        insNode = children[i];\n        if (insNode.nodeType === 3 && util.isList(rangeEl)) continue;\n        moveComplete = false;\n        if (remove && i === 0) {\n          if (!selectedFormats || selectedFormats.length === len || selectedFormats[0] === insNode) {\n            firstNode = rangeElement.previousSibling;\n          } else {\n            firstNode = rangeEl;\n          }\n        }\n        if (selectedFormats) lineIndex = selectedFormats.indexOf(insNode);\n        if (selectedFormats && lineIndex === -1) {\n          if (!rangeEl) rangeEl = rangeElement.cloneNode(false);\n          rangeEl.appendChild(insNode);\n        } else {\n          if (selectedFormats) next = selectedFormats[lineIndex + 1];\n          if (rangeEl && rangeEl.children.length > 0) {\n            parent.insertBefore(rangeEl, rangeElement);\n            rangeEl = null;\n          }\n          if (!newList && util.isListCell(insNode)) {\n            if (next && util.getElementDepth(insNode) !== util.getElementDepth(next) && (util.isListCell(parent) || util.getArrayItem(insNode.children, util.isList, false))) {\n              const insNext = insNode.nextElementSibling;\n              const detachRange = util.detachNestedList(insNode, false);\n              if (rangeElement !== detachRange || insNext !== insNode.nextElementSibling) {\n                rangeElement = detachRange;\n                reset = true;\n              }\n            } else {\n              const inner = insNode;\n              insNode = util.createElement(remove ? inner.nodeName : util.isList(rangeElement.parentNode) || util.isListCell(rangeElement.parentNode) ? 'LI' : util.isCell(rangeElement.parentNode) ? 'DIV' : options.defaultTag);\n              const isCell = util.isListCell(insNode);\n              const innerChildren = inner.childNodes;\n              while (innerChildren[0]) {\n                if (util.isList(innerChildren[0]) && !isCell) break;\n                insNode.appendChild(innerChildren[0]);\n              }\n              util.copyFormatAttributes(insNode, inner);\n              moveComplete = true;\n            }\n          } else {\n            insNode = insNode.cloneNode(false);\n          }\n          if (!reset) {\n            if (!remove) {\n              if (newRangeElement) {\n                if (!insertedNew) {\n                  parent.insertBefore(newRangeElement, rangeElement);\n                  insertedNew = true;\n                }\n                insNode = appendNode(newRangeElement, insNode, null, children[i]);\n              } else {\n                insNode = appendNode(parent, insNode, rangeElement, children[i]);\n              }\n              if (!reset) {\n                if (selectedFormats) {\n                  lastNode = insNode;\n                  if (!firstNode) {\n                    firstNode = insNode;\n                  }\n                } else if (!firstNode) {\n                  firstNode = lastNode = insNode;\n                }\n              }\n            } else {\n              removeArray.push(insNode);\n              util.removeItem(children[i]);\n            }\n            if (reset) {\n              reset = moveComplete = false;\n              children = util.getListChildNodes(rangeElement, function (current) {\n                return current.parentNode === rangeElement;\n              });\n              rangeEl = rangeElement.cloneNode(false);\n              parent = rangeElement.parentNode;\n              i = -1;\n              len = children.length;\n              continue;\n            }\n          }\n        }\n      }\n      const rangeParent = rangeElement.parentNode;\n      let rangeRight = rangeElement.nextSibling;\n      if (rangeEl && rangeEl.children.length > 0) {\n        rangeParent.insertBefore(rangeEl, rangeRight);\n      }\n      if (newRangeElement) firstNode = newRangeElement.previousSibling;else if (!firstNode) firstNode = rangeElement.previousSibling;\n      rangeRight = rangeElement.nextSibling !== rangeEl ? rangeElement.nextSibling : rangeEl ? rangeEl.nextSibling : null;\n      if (rangeElement.children.length === 0 || rangeElement.textContent.length === 0) {\n        util.removeItem(rangeElement);\n      } else {\n        util.removeEmptyNode(rangeElement, null, false);\n      }\n      let edge = null;\n      if (remove) {\n        edge = {\n          cc: rangeParent,\n          sc: firstNode,\n          so: so,\n          ec: rangeRight,\n          eo: eo,\n          removeArray: removeArray\n        };\n      } else {\n        if (!firstNode) firstNode = lastNode;\n        if (!lastNode) lastNode = firstNode;\n        const childEdge = util.getEdgeChildNodes(firstNode, lastNode.parentNode ? firstNode : lastNode);\n        edge = {\n          cc: (childEdge.sc || childEdge.ec).parentNode,\n          sc: childEdge.sc,\n          so: so,\n          ec: childEdge.ec,\n          eo: eo,\n          removeArray: null\n        };\n      }\n      this.effectNode = null;\n      if (notHistoryPush) return edge;\n      if (!remove && edge) {\n        if (!selectedFormats) {\n          this.setRange(edge.sc, 0, edge.sc, 0);\n        } else {\n          this.setRange(edge.sc, so, edge.ec, eo);\n        }\n      }\n\n      // history stack\n      this.history.push(false);\n    },\n    /**\r\n     * @description \"selectedFormats\" array are detached from the list element.\r\n     * The return value is applied when the first and last lines of \"selectedFormats\" are \"LI\" respectively.\r\n     * @param {Array} selectedFormats Array of format elements (LI, P...) to remove.\r\n     * @param {Boolean} remove If true, deleted without detached.\r\n     * @returns {Object} {sc: <LI>, ec: <LI>}.\r\n     */\n    detachList: function (selectedFormats, remove) {\n      let rangeArr = {};\n      let listFirst = false;\n      let listLast = false;\n      let first = null;\n      let last = null;\n      const passComponent = function (current) {\n        return !this.isComponent(current);\n      }.bind(util);\n      for (let i = 0, len = selectedFormats.length, r, o, lastIndex, isList; i < len; i++) {\n        lastIndex = i === len - 1;\n        o = util.getRangeFormatElement(selectedFormats[i], passComponent);\n        isList = util.isList(o);\n        if (!r && isList) {\n          r = o;\n          rangeArr = {\n            r: r,\n            f: [util.getParentElement(selectedFormats[i], 'LI')]\n          };\n          if (i === 0) listFirst = true;\n        } else if (r && isList) {\n          if (r !== o) {\n            const edge = this.detachRangeFormatElement(rangeArr.f[0].parentNode, rangeArr.f, null, remove, true);\n            o = selectedFormats[i].parentNode;\n            if (listFirst) {\n              first = edge.sc;\n              listFirst = false;\n            }\n            if (lastIndex) last = edge.ec;\n            if (isList) {\n              r = o;\n              rangeArr = {\n                r: r,\n                f: [util.getParentElement(selectedFormats[i], 'LI')]\n              };\n              if (lastIndex) listLast = true;\n            } else {\n              r = null;\n            }\n          } else {\n            rangeArr.f.push(util.getParentElement(selectedFormats[i], 'LI'));\n            if (lastIndex) listLast = true;\n          }\n        }\n        if (lastIndex && util.isList(r)) {\n          const edge = this.detachRangeFormatElement(rangeArr.f[0].parentNode, rangeArr.f, null, remove, true);\n          if (listLast || len === 1) last = edge.ec;\n          if (listFirst) first = edge.sc || last;\n        }\n      }\n      return {\n        sc: first,\n        ec: last\n      };\n    },\n    /**\r\n     * @description Add, update, and delete nodes from selected text.\r\n     * 1. If there is a node in the \"appendNode\" argument, a node with the same tags and attributes as \"appendNode\" is added to the selection text.\r\n     * 2. If it is in the same tag, only the tag's attributes are changed without adding a tag.\r\n     * 3. If the \"appendNode\" argument is null, the node of the selection is update or remove without adding a new node.\r\n     * 4. The same style as the style attribute of the \"styleArray\" argument is deleted.\r\n     *    (Styles should be put with attribute names from css. [\"background-color\"])\r\n     * 5. The same class name as the class attribute of the \"styleArray\" argument is deleted.\r\n     *    (The class name is preceded by \".\" [\".className\"])\r\n     * 6. Use a list of styles and classes of \"appendNode\" in \"styleArray\" to avoid duplicate property values.\r\n     * 7. If a node with all styles and classes removed has the same tag name as \"appendNode\" or \"removeNodeArray\", or \"appendNode\" is null, that node is deleted.\r\n     * 8. Regardless of the style and class of the node, the tag with the same name as the \"removeNodeArray\" argument value is deleted.\r\n     * 9. If the \"strictRemove\" argument is true, only nodes with all styles and classes removed from the nodes of \"removeNodeArray\" are removed.\r\n     *10. It won't work if the parent node has the same class and same value style.\r\n     *    However, if there is a value in \"removeNodeArray\", it works and the text node is separated even if there is no node to replace.\r\n     * @param {Element|null} appendNode The element to be added to the selection. If it is null, only delete the node.\r\n     * @param {Array|null} styleArray The style or className attribute name Array to check (['font-size'], ['.className'], ['font-family', 'color', '.className']...])\r\n     * @param {Array|null} removeNodeArray An array of node names to remove types from, remove all formats when \"appendNode\" is null and there is an empty array or null value. (['span'], ['strong', 'em'] ...])\r\n     * @param {Boolean|null} strictRemove If true, only nodes with all styles and classes removed from the nodes of \"removeNodeArray\" are removed.\r\n     */\n    nodeChange: function (appendNode, styleArray, removeNodeArray, strictRemove) {\n      this._resetRangeToTextNode();\n      let range = this.getRange_addLine(this.getRange(), null);\n      styleArray = styleArray && styleArray.length > 0 ? styleArray : false;\n      removeNodeArray = removeNodeArray && removeNodeArray.length > 0 ? removeNodeArray : false;\n      const isRemoveNode = !appendNode;\n      const isRemoveFormat = isRemoveNode && !removeNodeArray && !styleArray;\n      let startCon = range.startContainer;\n      let startOff = range.startOffset;\n      let endCon = range.endContainer;\n      let endOff = range.endOffset;\n      if (isRemoveFormat && range.collapsed && util.isFormatElement(startCon.parentNode) || startCon === endCon && startCon.nodeType === 1 && util.isNonEditable(startCon)) {\n        const format = startCon.parentNode;\n        if (!util.isListCell(format) || !util.getValues(format.style).some(function (k) {\n          return this._listKebab.indexOf(k) > -1;\n        }.bind(this))) return;\n      }\n      if (range.collapsed && !isRemoveFormat) {\n        if (startCon.nodeType === 1 && !util.isBreak(startCon) && !util.isComponent(startCon)) {\n          let afterNode = null;\n          const focusNode = startCon.childNodes[startOff];\n          if (focusNode) {\n            if (!focusNode.nextSibling) {\n              afterNode = null;\n            } else {\n              afterNode = util.isBreak(focusNode) ? focusNode : focusNode.nextSibling;\n            }\n          }\n          const zeroWidth = util.createTextNode(util.zeroWidthSpace);\n          startCon.insertBefore(zeroWidth, afterNode);\n          this.setRange(zeroWidth, 1, zeroWidth, 1);\n          range = this.getRange();\n          startCon = range.startContainer;\n          startOff = range.startOffset;\n          endCon = range.endContainer;\n          endOff = range.endOffset;\n        }\n      }\n      if (util.isFormatElement(startCon)) {\n        startCon = startCon.childNodes[startOff] || startCon.firstChild;\n        startOff = 0;\n      }\n      if (util.isFormatElement(endCon)) {\n        endCon = endCon.childNodes[endOff] || endCon.lastChild;\n        endOff = endCon.textContent.length;\n      }\n      if (isRemoveNode) {\n        appendNode = util.createElement('DIV');\n      }\n      const wRegExp = _w.RegExp;\n      const newNodeName = appendNode.nodeName;\n\n      /* checked same style property */\n      if (!isRemoveFormat && startCon === endCon && !removeNodeArray && appendNode) {\n        let sNode = startCon;\n        let checkCnt = 0;\n        const checkAttrs = [];\n        const checkStyles = appendNode.style;\n        for (let i = 0, len = checkStyles.length; i < len; i++) {\n          checkAttrs.push(checkStyles[i]);\n        }\n        const ckeckClasses = appendNode.classList;\n        for (let i = 0, len = ckeckClasses.length; i < len; i++) {\n          checkAttrs.push('.' + ckeckClasses[i]);\n        }\n        if (checkAttrs.length > 0) {\n          while (!util.isFormatElement(sNode) && !util.isWysiwygDiv(sNode)) {\n            for (let i = 0; i < checkAttrs.length; i++) {\n              if (sNode.nodeType === 1) {\n                const s = checkAttrs[i];\n                const classReg = /^\\./.test(s) ? new wRegExp('\\\\s*' + s.replace(/^\\./, '') + '(\\\\s+|$)', 'ig') : false;\n                const styleCheck = isRemoveNode ? !!sNode.style[s] : !!sNode.style[s] && !!appendNode.style[s] && sNode.style[s] === appendNode.style[s];\n                const classCheck = classReg === false ? false : isRemoveNode ? !!sNode.className.match(classReg) : !!sNode.className.match(classReg) && !!appendNode.className.match(classReg);\n                if (styleCheck || classCheck) {\n                  checkCnt++;\n                }\n              }\n            }\n            sNode = sNode.parentNode;\n          }\n          if (checkCnt >= checkAttrs.length) return;\n        }\n      }\n      let start = {},\n        end = {};\n      let newNode,\n        styleRegExp = '',\n        classRegExp = '',\n        removeNodeRegExp = '';\n      if (styleArray) {\n        for (let i = 0, len = styleArray.length, s; i < len; i++) {\n          s = styleArray[i];\n          if (/^\\./.test(s)) {\n            classRegExp += (classRegExp ? '|' : '\\\\s*(?:') + s.replace(/^\\./, '');\n          } else {\n            styleRegExp += (styleRegExp ? '|' : '(?:;|^|\\\\s)(?:') + s;\n          }\n        }\n        if (styleRegExp) {\n          styleRegExp += ')\\\\s*:[^;]*\\\\s*(?:;|$)';\n          styleRegExp = new wRegExp(styleRegExp, 'ig');\n        }\n        if (classRegExp) {\n          classRegExp += ')(?=\\\\s+|$)';\n          classRegExp = new wRegExp(classRegExp, 'ig');\n        }\n      }\n      if (removeNodeArray) {\n        removeNodeRegExp = '^(?:' + removeNodeArray[0];\n        for (let i = 1; i < removeNodeArray.length; i++) {\n          removeNodeRegExp += '|' + removeNodeArray[i];\n        }\n        removeNodeRegExp += ')$';\n        removeNodeRegExp = new wRegExp(removeNodeRegExp, 'i');\n      }\n\n      /** validation check function*/\n      const wBoolean = _w.Boolean;\n      const _removeCheck = {\n        v: false\n      };\n      const validation = function (checkNode) {\n        const vNode = checkNode.cloneNode(false);\n\n        // all path\n        if (vNode.nodeType === 3 || util.isBreak(vNode)) return vNode;\n        // all remove\n        if (isRemoveFormat) return null;\n\n        // remove node check\n        const tagRemove = !removeNodeRegExp && isRemoveNode || removeNodeRegExp && removeNodeRegExp.test(vNode.nodeName);\n\n        // tag remove\n        if (tagRemove && !strictRemove) {\n          _removeCheck.v = true;\n          return null;\n        }\n\n        // style regexp\n        const originStyle = vNode.style.cssText;\n        let style = '';\n        if (styleRegExp && originStyle.length > 0) {\n          style = originStyle.replace(styleRegExp, '').trim();\n          if (style !== originStyle) _removeCheck.v = true;\n        }\n\n        // class check\n        const originClasses = vNode.className;\n        let classes = '';\n        if (classRegExp && originClasses.length > 0) {\n          classes = originClasses.replace(classRegExp, '').trim();\n          if (classes !== originClasses) _removeCheck.v = true;\n        }\n\n        // remove only\n        if (isRemoveNode) {\n          if ((classRegExp || !originClasses) && (styleRegExp || !originStyle) && !style && !classes && tagRemove) {\n            _removeCheck.v = true;\n            return null;\n          }\n        }\n\n        // change\n        if (style || classes || vNode.nodeName !== newNodeName || wBoolean(styleRegExp) !== wBoolean(originStyle) || wBoolean(classRegExp) !== wBoolean(originClasses)) {\n          if (styleRegExp && originStyle.length > 0) vNode.style.cssText = style;\n          if (!vNode.style.cssText) {\n            vNode.removeAttribute('style');\n          }\n          if (classRegExp && originClasses.length > 0) vNode.className = classes.trim();\n          if (!vNode.className.trim()) {\n            vNode.removeAttribute('class');\n          }\n          if (!vNode.style.cssText && !vNode.className && (vNode.nodeName === newNodeName || tagRemove)) {\n            _removeCheck.v = true;\n            return null;\n          }\n          return vNode;\n        }\n        _removeCheck.v = true;\n        return null;\n      };\n\n      // get line nodes\n      const lineNodes = this.getSelectedElements(null);\n      range = this.getRange();\n      startCon = range.startContainer;\n      startOff = range.startOffset;\n      endCon = range.endContainer;\n      endOff = range.endOffset;\n      if (!util.getFormatElement(startCon, null)) {\n        startCon = util.getChildElement(lineNodes[0], function (current) {\n          return current.nodeType === 3;\n        }, false);\n        startOff = 0;\n      }\n      if (!util.getFormatElement(endCon, null)) {\n        endCon = util.getChildElement(lineNodes[lineNodes.length - 1], function (current) {\n          return current.nodeType === 3;\n        }, false);\n        endOff = endCon.textContent.length;\n      }\n      const oneLine = util.getFormatElement(startCon, null) === util.getFormatElement(endCon, null);\n      const endLength = lineNodes.length - (oneLine ? 0 : 1);\n\n      // node Changes\n      newNode = appendNode.cloneNode(false);\n      const isRemoveAnchor = isRemoveFormat || isRemoveNode && function (arr) {\n        for (let n = 0, len = arr.length; n < len; n++) {\n          if (util._isMaintainedNode(arr[n]) || util._isSizeNode(arr[n])) return true;\n        }\n        return false;\n      }(removeNodeArray);\n      const isSizeNode = isRemoveNode || util._isSizeNode(newNode);\n      const _getMaintainedNode = this._util_getMaintainedNode.bind(util, isRemoveAnchor, isSizeNode);\n      const _isMaintainedNode = this._util_isMaintainedNode.bind(util, isRemoveAnchor, isSizeNode);\n\n      // one line\n      if (oneLine) {\n        if (this._resetCommonListCell(lineNodes[0], styleArray)) range = this.setRange(startCon, startOff, endCon, endOff);\n        const newRange = this._nodeChange_oneLine(lineNodes[0], newNode, validation, startCon, startOff, endCon, endOff, isRemoveFormat, isRemoveNode, range.collapsed, _removeCheck, _getMaintainedNode, _isMaintainedNode);\n        start.container = newRange.startContainer;\n        start.offset = newRange.startOffset;\n        end.container = newRange.endContainer;\n        end.offset = newRange.endOffset;\n        if (start.container === end.container && util.onlyZeroWidthSpace(start.container)) {\n          start.offset = end.offset = 1;\n        }\n        this._setCommonListStyle(newRange.ancestor, null);\n      } else {\n        // multi line \n        let appliedCommonList = false;\n        if (endLength > 0 && this._resetCommonListCell(lineNodes[endLength], styleArray)) appliedCommonList = true;\n        if (this._resetCommonListCell(lineNodes[0], styleArray)) appliedCommonList = true;\n        if (appliedCommonList) this.setRange(startCon, startOff, endCon, endOff);\n\n        // end\n        if (endLength > 0) {\n          newNode = appendNode.cloneNode(false);\n          end = this._nodeChange_endLine(lineNodes[endLength], newNode, validation, endCon, endOff, isRemoveFormat, isRemoveNode, _removeCheck, _getMaintainedNode, _isMaintainedNode);\n        }\n\n        // mid\n        for (let i = endLength - 1, newRange; i > 0; i--) {\n          this._resetCommonListCell(lineNodes[i], styleArray);\n          newNode = appendNode.cloneNode(false);\n          newRange = this._nodeChange_middleLine(lineNodes[i], newNode, validation, isRemoveFormat, isRemoveNode, _removeCheck, end.container);\n          if (newRange.endContainer && newRange.ancestor.contains(newRange.endContainer)) {\n            end.ancestor = null;\n            end.container = newRange.endContainer;\n          }\n          this._setCommonListStyle(newRange.ancestor, null);\n        }\n\n        // start\n        newNode = appendNode.cloneNode(false);\n        start = this._nodeChange_startLine(lineNodes[0], newNode, validation, startCon, startOff, isRemoveFormat, isRemoveNode, _removeCheck, _getMaintainedNode, _isMaintainedNode, end.container);\n        if (start.endContainer) {\n          end.ancestor = null;\n          end.container = start.endContainer;\n        }\n        if (endLength <= 0) {\n          end = start;\n        } else if (!end.container) {\n          end.ancestor = null;\n          end.container = start.container;\n          end.offset = start.container.textContent.length;\n        }\n        this._setCommonListStyle(start.ancestor, null);\n        this._setCommonListStyle(end.ancestor || util.getFormatElement(end.container), null);\n      }\n\n      // set range\n      this.controllersOff();\n      this.setRange(start.container, start.offset, end.container, end.offset);\n\n      // history stack\n      this.history.push(false);\n    },\n    /**\r\n     * @description Reset common style of list cell\r\n     * @param {Element} el List cell element. <li>\r\n     * @param {Array|null} styleArray Style array\r\n     * @private\r\n     */\n    _resetCommonListCell: function (el, styleArray) {\n      if (!util.isListCell(el)) return;\n      if (!styleArray) styleArray = this._listKebab;\n      const children = util.getArrayItem(el.childNodes, function (current) {\n        return !util.isBreak(current);\n      }, true);\n      const elStyles = el.style;\n      const ec = [],\n        ek = [],\n        elKeys = util.getValues(elStyles);\n      for (let i = 0, len = this._listKebab.length; i < len; i++) {\n        if (elKeys.indexOf(this._listKebab[i]) > -1 && styleArray.indexOf(this._listKebab[i]) > -1) {\n          ec.push(this._listCamel[i]);\n          ek.push(this._listKebab[i]);\n        }\n      }\n      if (!ec.length) return;\n\n      // reset cell style---\n      const refer = util.createElement('SPAN');\n      for (let i = 0, len = ec.length; i < len; i++) {\n        refer.style[ec[i]] = elStyles[ek[i]];\n        elStyles.removeProperty(ek[i]);\n      }\n      let sel = refer.cloneNode(false);\n      let r = null,\n        appliedEl = false;\n      for (let i = 0, len = children.length, c, s; i < len; i++) {\n        c = children[i];\n        if (options._textTagsMap[c.nodeName.toLowerCase()]) continue;\n        s = util.getValues(c.style);\n        if (s.length === 0 || ec.some(function (k) {\n          return s.indexOf(k) === -1;\n        }) && s.some(function (k) {\n          ec.indexOf(k) > -1;\n        })) {\n          r = c.nextSibling;\n          sel.appendChild(c);\n        } else if (sel.childNodes.length > 0) {\n          el.insertBefore(sel, r);\n          sel = refer.cloneNode(false);\n          r = null;\n          appliedEl = true;\n        }\n      }\n      if (sel.childNodes.length > 0) {\n        el.insertBefore(sel, r);\n        appliedEl = true;\n      }\n      if (!elStyles.length) {\n        el.removeAttribute('style');\n      }\n      return appliedEl;\n    },\n    /**\r\n     * @description If certain styles are applied to all child nodes of the list cell, the style of the list cell is also changed. (bold, color, size)\r\n     * @param {Element} el List cell element. <li>\r\n     * @param {Element|null} child Variable for recursive call. (\"null\" on the first call)\r\n     * @private\r\n     */\n    _setCommonListStyle: function (el, child) {\n      if (!util.isListCell(el)) return;\n      const children = util.getArrayItem((child || el).childNodes, function (current) {\n        return !util.isBreak(current);\n      }, true);\n      child = children[0];\n      if (!child || children.length > 1 || child.nodeType !== 1) return;\n\n      // set cell style---\n      const childStyle = child.style;\n      const elStyle = el.style;\n      const nodeName = child.nodeName.toLowerCase();\n      let appliedEl = false;\n\n      // bold, italic\n      if (options._textTagsMap[nodeName] === options._defaultCommand.bold.toLowerCase()) elStyle.fontWeight = 'bold';\n      if (options._textTagsMap[nodeName] === options._defaultCommand.italic.toLowerCase()) elStyle.fontStyle = 'italic';\n\n      // styles\n      const cKeys = util.getValues(childStyle);\n      if (cKeys.length > 0) {\n        for (let i = 0, len = this._listCamel.length; i < len; i++) {\n          if (cKeys.indexOf(this._listKebab[i]) > -1) {\n            elStyle[this._listCamel[i]] = childStyle[this._listCamel[i]];\n            childStyle.removeProperty(this._listKebab[i]);\n            appliedEl = true;\n          }\n        }\n      }\n      this._setCommonListStyle(el, child);\n      if (!appliedEl) return;\n\n      // common style\n      if (!childStyle.length) {\n        const ch = child.childNodes;\n        const p = child.parentNode;\n        const n = child.nextSibling;\n        while (ch.length > 0) {\n          p.insertBefore(ch[0], n);\n        }\n        util.removeItem(child);\n      }\n    },\n    /**\r\n     * @description Strip remove node\r\n     * @param {Node} removeNode The remove node\r\n     * @private\r\n     */\n    _stripRemoveNode: function (removeNode) {\n      const element = removeNode.parentNode;\n      if (!removeNode || removeNode.nodeType === 3 || !element) return;\n      const children = removeNode.childNodes;\n      while (children[0]) {\n        element.insertBefore(children[0], removeNode);\n      }\n      element.removeChild(removeNode);\n    },\n    /**\r\n     * @description Return the parent maintained tag. (bind and use a util object)\r\n     * @param {Element} element Element\r\n     * @returns {Element}\r\n     * @private\r\n     */\n    _util_getMaintainedNode: function (_isRemove, _isSizeNode, element) {\n      if (!element || _isRemove) return null;\n      return this.getParentElement(element, this._isMaintainedNode.bind(this)) || (!_isSizeNode ? this.getParentElement(element, this._isSizeNode.bind(this)) : null);\n    },\n    /**\r\n     * @description Check if element is a tag that should be persisted. (bind and use a util object)\r\n     * @param {Element} element Element\r\n     * @returns {Element}\r\n     * @private\r\n     */\n    _util_isMaintainedNode: function (_isRemove, _isSizeNode, element) {\n      if (!element || _isRemove || element.nodeType !== 1) return false;\n      const anchor = this._isMaintainedNode(element);\n      return this.getParentElement(element, this._isMaintainedNode.bind(this)) ? anchor : anchor || (!_isSizeNode ? this._isSizeNode(element) : false);\n    },\n    /**\r\n     * @description wraps text nodes of line selected text.\r\n     * @param {Element} element The node of the line that contains the selected text node.\r\n     * @param {Element} newInnerNode The dom that will wrap the selected text area\r\n     * @param {Function} validation Check if the node should be stripped.\r\n     * @param {Node} startCon The startContainer property of the selection object.\r\n     * @param {Number} startOff The startOffset property of the selection object.\r\n     * @param {Node} endCon The endContainer property of the selection object.\r\n     * @param {Number} endOff The endOffset property of the selection object.\r\n     * @param {Boolean} isRemoveFormat Is the remove all formats command?\r\n     * @param {Boolean} isRemoveNode \"newInnerNode\" is remove node?\r\n     * @param {Boolean} collapsed range.collapsed\r\n     * @returns {{ancestor: *, startContainer: *, startOffset: *, endContainer: *, endOffset: *}}\r\n     * @private\r\n     */\n    _nodeChange_oneLine: function (element, newInnerNode, validation, startCon, startOff, endCon, endOff, isRemoveFormat, isRemoveNode, collapsed, _removeCheck, _getMaintainedNode, _isMaintainedNode) {\n      // not add tag\n      let parentCon = startCon.parentNode;\n      while (!parentCon.nextSibling && !parentCon.previousSibling && !util.isFormatElement(parentCon.parentNode) && !util.isWysiwygDiv(parentCon.parentNode)) {\n        if (parentCon.nodeName === newInnerNode.nodeName) break;\n        parentCon = parentCon.parentNode;\n      }\n      if (!isRemoveNode && parentCon === endCon.parentNode && parentCon.nodeName === newInnerNode.nodeName) {\n        if (util.onlyZeroWidthSpace(startCon.textContent.slice(0, startOff)) && util.onlyZeroWidthSpace(endCon.textContent.slice(endOff))) {\n          const children = parentCon.childNodes;\n          let sameTag = true;\n          for (let i = 0, len = children.length, c, s, e, z; i < len; i++) {\n            c = children[i];\n            z = !util.onlyZeroWidthSpace(c);\n            if (c === startCon) {\n              s = true;\n              continue;\n            }\n            if (c === endCon) {\n              e = true;\n              continue;\n            }\n            if (!s && z || s && e && z) {\n              sameTag = false;\n              break;\n            }\n          }\n          if (sameTag) {\n            util.copyTagAttributes(parentCon, newInnerNode);\n            return {\n              ancestor: element,\n              startContainer: startCon,\n              startOffset: startOff,\n              endContainer: endCon,\n              endOffset: endOff\n            };\n          }\n        }\n      }\n\n      // add tag\n      _removeCheck.v = false;\n      const el = element;\n      const nNodeArray = [newInnerNode];\n      const pNode = element.cloneNode(false);\n      const isSameNode = startCon === endCon;\n      let startContainer = startCon;\n      let startOffset = startOff;\n      let endContainer = endCon;\n      let endOffset = endOff;\n      let startPass = false;\n      let endPass = false;\n      let pCurrent, newNode, appendNode, cssText, anchorNode;\n      const wRegExp = _w.RegExp;\n      function checkCss(vNode) {\n        const regExp = new wRegExp('(?:;|^|\\\\s)(?:' + cssText + 'null)\\\\s*:[^;]*\\\\s*(?:;|$)', 'ig');\n        let style = '';\n        if (regExp && vNode.style.cssText.length > 0) {\n          style = regExp.test(vNode.style.cssText);\n        }\n        return !style;\n      }\n      (function recursionFunc(current, ancestor) {\n        const childNodes = current.childNodes;\n        for (let i = 0, len = childNodes.length, vNode; i < len; i++) {\n          let child = childNodes[i];\n          if (!child) continue;\n          let coverNode = ancestor;\n          let cloneNode;\n\n          // startContainer\n          if (!startPass && child === startContainer) {\n            let line = pNode;\n            anchorNode = _getMaintainedNode(child);\n            const prevNode = util.createTextNode(startContainer.nodeType === 1 ? '' : startContainer.substringData(0, startOffset));\n            const textNode = util.createTextNode(startContainer.nodeType === 1 ? '' : startContainer.substringData(startOffset, isSameNode ? endOffset >= startOffset ? endOffset - startOffset : startContainer.data.length - startOffset : startContainer.data.length - startOffset));\n            if (anchorNode) {\n              const a = _getMaintainedNode(ancestor);\n              if (a && a.parentNode !== line) {\n                let m = a;\n                let p = null;\n                while (m.parentNode !== line) {\n                  ancestor = p = m.parentNode.cloneNode(false);\n                  while (m.childNodes[0]) {\n                    p.appendChild(m.childNodes[0]);\n                  }\n                  m.appendChild(p);\n                  m = m.parentNode;\n                }\n                m.parentNode.appendChild(a);\n              }\n              anchorNode = anchorNode.cloneNode(false);\n            }\n            if (!util.onlyZeroWidthSpace(prevNode)) {\n              ancestor.appendChild(prevNode);\n            }\n            const prevAnchorNode = _getMaintainedNode(ancestor);\n            if (!!prevAnchorNode) anchorNode = prevAnchorNode;\n            if (anchorNode) line = anchorNode;\n            newNode = child;\n            pCurrent = [];\n            cssText = '';\n            while (newNode !== line && newNode !== el && newNode !== null) {\n              vNode = _isMaintainedNode(newNode) ? null : validation(newNode);\n              if (vNode && newNode.nodeType === 1 && checkCss(newNode)) {\n                pCurrent.push(vNode);\n                cssText += newNode.style.cssText.substr(0, newNode.style.cssText.indexOf(':')) + '|';\n              }\n              newNode = newNode.parentNode;\n            }\n            const childNode = pCurrent.pop() || textNode;\n            appendNode = newNode = childNode;\n            while (pCurrent.length > 0) {\n              newNode = pCurrent.pop();\n              appendNode.appendChild(newNode);\n              appendNode = newNode;\n            }\n            newInnerNode.appendChild(childNode);\n            line.appendChild(newInnerNode);\n            if (anchorNode && !_getMaintainedNode(endContainer)) {\n              newInnerNode = newInnerNode.cloneNode(false);\n              pNode.appendChild(newInnerNode);\n              nNodeArray.push(newInnerNode);\n            }\n            startContainer = textNode;\n            startOffset = 0;\n            startPass = true;\n            if (newNode !== textNode) newNode.appendChild(startContainer);\n            if (!isSameNode) continue;\n          }\n\n          // endContainer\n          if (!endPass && child === endContainer) {\n            anchorNode = _getMaintainedNode(child);\n            const afterNode = util.createTextNode(endContainer.nodeType === 1 ? '' : endContainer.substringData(endOffset, endContainer.length - endOffset));\n            const textNode = util.createTextNode(isSameNode || endContainer.nodeType === 1 ? '' : endContainer.substringData(0, endOffset));\n            if (anchorNode) {\n              anchorNode = anchorNode.cloneNode(false);\n            } else if (_isMaintainedNode(newInnerNode.parentNode) && !anchorNode) {\n              newInnerNode = newInnerNode.cloneNode(false);\n              pNode.appendChild(newInnerNode);\n              nNodeArray.push(newInnerNode);\n            }\n            if (!util.onlyZeroWidthSpace(afterNode)) {\n              newNode = child;\n              cssText = '';\n              pCurrent = [];\n              const anchors = [];\n              while (newNode !== pNode && newNode !== el && newNode !== null) {\n                if (newNode.nodeType === 1 && checkCss(newNode)) {\n                  if (_isMaintainedNode(newNode)) anchors.push(newNode.cloneNode(false));else pCurrent.push(newNode.cloneNode(false));\n                  cssText += newNode.style.cssText.substr(0, newNode.style.cssText.indexOf(':')) + '|';\n                }\n                newNode = newNode.parentNode;\n              }\n              pCurrent = pCurrent.concat(anchors);\n              cloneNode = appendNode = newNode = pCurrent.pop() || afterNode;\n              while (pCurrent.length > 0) {\n                newNode = pCurrent.pop();\n                appendNode.appendChild(newNode);\n                appendNode = newNode;\n              }\n              pNode.appendChild(cloneNode);\n              newNode.textContent = afterNode.data;\n            }\n            if (anchorNode && cloneNode) {\n              const afterAnchorNode = _getMaintainedNode(cloneNode);\n              if (afterAnchorNode) {\n                anchorNode = afterAnchorNode;\n              }\n            }\n            newNode = child;\n            pCurrent = [];\n            cssText = '';\n            while (newNode !== pNode && newNode !== el && newNode !== null) {\n              vNode = _isMaintainedNode(newNode) ? null : validation(newNode);\n              if (vNode && newNode.nodeType === 1 && checkCss(newNode)) {\n                pCurrent.push(vNode);\n                cssText += newNode.style.cssText.substr(0, newNode.style.cssText.indexOf(':')) + '|';\n              }\n              newNode = newNode.parentNode;\n            }\n            const childNode = pCurrent.pop() || textNode;\n            appendNode = newNode = childNode;\n            while (pCurrent.length > 0) {\n              newNode = pCurrent.pop();\n              appendNode.appendChild(newNode);\n              appendNode = newNode;\n            }\n            if (anchorNode) {\n              newInnerNode = newInnerNode.cloneNode(false);\n              newInnerNode.appendChild(childNode);\n              anchorNode.insertBefore(newInnerNode, anchorNode.firstChild);\n              pNode.appendChild(anchorNode);\n              nNodeArray.push(newInnerNode);\n              anchorNode = null;\n            } else {\n              newInnerNode.appendChild(childNode);\n            }\n            endContainer = textNode;\n            endOffset = textNode.data.length;\n            endPass = true;\n            if (!isRemoveFormat && collapsed) {\n              newInnerNode = textNode;\n              textNode.textContent = util.zeroWidthSpace;\n            }\n            if (newNode !== textNode) newNode.appendChild(endContainer);\n            continue;\n          }\n\n          // other\n          if (startPass) {\n            if (child.nodeType === 1 && !util.isBreak(child)) {\n              if (util._isIgnoreNodeChange(child)) {\n                pNode.appendChild(child.cloneNode(true));\n                if (!collapsed) {\n                  newInnerNode = newInnerNode.cloneNode(false);\n                  pNode.appendChild(newInnerNode);\n                  nNodeArray.push(newInnerNode);\n                }\n              } else {\n                recursionFunc(child, child);\n              }\n              continue;\n            }\n            newNode = child;\n            pCurrent = [];\n            cssText = '';\n            const anchors = [];\n            while (newNode.parentNode !== null && newNode !== el && newNode !== newInnerNode) {\n              vNode = endPass ? newNode.cloneNode(false) : validation(newNode);\n              if (newNode.nodeType === 1 && !util.isBreak(child) && vNode && checkCss(newNode)) {\n                if (_isMaintainedNode(newNode)) {\n                  if (!anchorNode) anchors.push(vNode);\n                } else {\n                  pCurrent.push(vNode);\n                }\n                cssText += newNode.style.cssText.substr(0, newNode.style.cssText.indexOf(':')) + '|';\n              }\n              newNode = newNode.parentNode;\n            }\n            pCurrent = pCurrent.concat(anchors);\n            const childNode = pCurrent.pop() || child;\n            appendNode = newNode = childNode;\n            while (pCurrent.length > 0) {\n              newNode = pCurrent.pop();\n              appendNode.appendChild(newNode);\n              appendNode = newNode;\n            }\n            if (_isMaintainedNode(newInnerNode.parentNode) && !_isMaintainedNode(childNode) && !util.onlyZeroWidthSpace(newInnerNode)) {\n              newInnerNode = newInnerNode.cloneNode(false);\n              pNode.appendChild(newInnerNode);\n              nNodeArray.push(newInnerNode);\n            }\n            if (!endPass && !anchorNode && _isMaintainedNode(childNode)) {\n              newInnerNode = newInnerNode.cloneNode(false);\n              const aChildren = childNode.childNodes;\n              for (let a = 0, aLen = aChildren.length; a < aLen; a++) {\n                newInnerNode.appendChild(aChildren[a]);\n              }\n              childNode.appendChild(newInnerNode);\n              pNode.appendChild(childNode);\n              nNodeArray.push(newInnerNode);\n              if (newInnerNode.children.length > 0) ancestor = newNode;else ancestor = newInnerNode;\n            } else if (childNode === child) {\n              if (!endPass) ancestor = newInnerNode;else ancestor = pNode;\n            } else if (endPass) {\n              pNode.appendChild(childNode);\n              ancestor = newNode;\n            } else {\n              newInnerNode.appendChild(childNode);\n              ancestor = newNode;\n            }\n            if (anchorNode && child.nodeType === 3) {\n              if (_getMaintainedNode(child)) {\n                const ancestorAnchorNode = util.getParentElement(ancestor, function (current) {\n                  return this._isMaintainedNode(current.parentNode) || current.parentNode === pNode;\n                }.bind(util));\n                anchorNode.appendChild(ancestorAnchorNode);\n                newInnerNode = ancestorAnchorNode.cloneNode(false);\n                nNodeArray.push(newInnerNode);\n                pNode.appendChild(newInnerNode);\n              } else {\n                anchorNode = null;\n              }\n            }\n          }\n          cloneNode = child.cloneNode(false);\n          ancestor.appendChild(cloneNode);\n          if (child.nodeType === 1 && !util.isBreak(child)) coverNode = cloneNode;\n          recursionFunc(child, coverNode);\n        }\n      })(element, pNode);\n\n      // not remove tag\n      if (isRemoveNode && !isRemoveFormat && !_removeCheck.v) {\n        return {\n          ancestor: element,\n          startContainer: startCon,\n          startOffset: startOff,\n          endContainer: endCon,\n          endOffset: endOff\n        };\n      }\n      isRemoveFormat = isRemoveFormat && isRemoveNode;\n      if (isRemoveFormat) {\n        for (let i = 0; i < nNodeArray.length; i++) {\n          let removeNode = nNodeArray[i];\n          let textNode, textNode_s, textNode_e;\n          if (collapsed) {\n            textNode = util.createTextNode(util.zeroWidthSpace);\n            pNode.replaceChild(textNode, removeNode);\n          } else {\n            const rChildren = removeNode.childNodes;\n            textNode_s = rChildren[0];\n            while (rChildren[0]) {\n              textNode_e = rChildren[0];\n              pNode.insertBefore(textNode_e, removeNode);\n            }\n            util.removeItem(removeNode);\n          }\n          if (i === 0) {\n            if (collapsed) {\n              startContainer = endContainer = textNode;\n            } else {\n              startContainer = textNode_s;\n              endContainer = textNode_e;\n            }\n          }\n        }\n      } else {\n        if (isRemoveNode) {\n          for (let i = 0; i < nNodeArray.length; i++) {\n            this._stripRemoveNode(nNodeArray[i]);\n          }\n        }\n        if (collapsed) {\n          startContainer = endContainer = newInnerNode;\n        }\n      }\n      util.removeEmptyNode(pNode, newInnerNode, false);\n      if (collapsed) {\n        startOffset = startContainer.textContent.length;\n        endOffset = endContainer.textContent.length;\n      }\n\n      // endContainer reset\n      const endConReset = isRemoveFormat || endContainer.textContent.length === 0;\n      if (!util.isBreak(endContainer) && endContainer.textContent.length === 0) {\n        util.removeItem(endContainer);\n        endContainer = startContainer;\n      }\n      endOffset = endConReset ? endContainer.textContent.length : endOffset;\n\n      // node change\n      const newStartOffset = {\n        s: 0,\n        e: 0\n      };\n      const startPath = util.getNodePath(startContainer, pNode, newStartOffset);\n      const mergeEndCon = !endContainer.parentNode;\n      if (mergeEndCon) endContainer = startContainer;\n      const newEndOffset = {\n        s: 0,\n        e: 0\n      };\n      const endPath = util.getNodePath(endContainer, pNode, !mergeEndCon && !endConReset ? newEndOffset : null);\n      startOffset += newStartOffset.s;\n      endOffset = collapsed ? startOffset : mergeEndCon ? startContainer.textContent.length : endConReset ? endOffset + newStartOffset.s : endOffset + newEndOffset.s;\n\n      // tag merge\n      const newOffsets = util.mergeSameTags(pNode, [startPath, endPath], true);\n      element.parentNode.replaceChild(pNode, element);\n      startContainer = util.getNodeFromPath(startPath, pNode);\n      endContainer = util.getNodeFromPath(endPath, pNode);\n      return {\n        ancestor: pNode,\n        startContainer: startContainer,\n        startOffset: startOffset + newOffsets[0],\n        endContainer: endContainer,\n        endOffset: endOffset + newOffsets[1]\n      };\n    },\n    /**\r\n     * @description wraps first line selected text.\r\n     * @param {Element} element The node of the line that contains the selected text node.\r\n     * @param {Element} newInnerNode The dom that will wrap the selected text area\r\n     * @param {Function} validation Check if the node should be stripped.\r\n     * @param {Node} startCon The startContainer property of the selection object.\r\n     * @param {Number} startOff The startOffset property of the selection object.\r\n     * @param {Boolean} isRemoveFormat Is the remove all formats command?\r\n     * @param {Boolean} isRemoveNode \"newInnerNode\" is remove node?\r\n     * @returns {null|Node} If end container is renewed, returned renewed node\r\n     * @returns {Object} { ancestor, container, offset, endContainer }\r\n     * @private\r\n     */\n    _nodeChange_startLine: function (element, newInnerNode, validation, startCon, startOff, isRemoveFormat, isRemoveNode, _removeCheck, _getMaintainedNode, _isMaintainedNode, _endContainer) {\n      // not add tag\n      let parentCon = startCon.parentNode;\n      while (!parentCon.nextSibling && !parentCon.previousSibling && !util.isFormatElement(parentCon.parentNode) && !util.isWysiwygDiv(parentCon.parentNode)) {\n        if (parentCon.nodeName === newInnerNode.nodeName) break;\n        parentCon = parentCon.parentNode;\n      }\n      if (!isRemoveNode && parentCon.nodeName === newInnerNode.nodeName && !util.isFormatElement(parentCon) && !parentCon.nextSibling && util.onlyZeroWidthSpace(startCon.textContent.slice(0, startOff))) {\n        let sameTag = true;\n        let s = startCon.previousSibling;\n        while (s) {\n          if (!util.onlyZeroWidthSpace(s)) {\n            sameTag = false;\n            break;\n          }\n          s = s.previousSibling;\n        }\n        if (sameTag) {\n          util.copyTagAttributes(parentCon, newInnerNode);\n          return {\n            ancestor: element,\n            container: startCon,\n            offset: startOff\n          };\n        }\n      }\n\n      // add tag\n      _removeCheck.v = false;\n      const el = element;\n      const nNodeArray = [newInnerNode];\n      const pNode = element.cloneNode(false);\n      let container = startCon;\n      let offset = startOff;\n      let passNode = false;\n      let pCurrent, newNode, appendNode, anchorNode;\n      (function recursionFunc(current, ancestor) {\n        const childNodes = current.childNodes;\n        for (let i = 0, len = childNodes.length, vNode, cloneChild; i < len; i++) {\n          const child = childNodes[i];\n          if (!child) continue;\n          let coverNode = ancestor;\n          if (passNode && !util.isBreak(child)) {\n            if (child.nodeType === 1) {\n              if (util._isIgnoreNodeChange(child)) {\n                newInnerNode = newInnerNode.cloneNode(false);\n                cloneChild = child.cloneNode(true);\n                pNode.appendChild(cloneChild);\n                pNode.appendChild(newInnerNode);\n                nNodeArray.push(newInnerNode);\n\n                // end container\n                if (_endContainer && child.contains(_endContainer)) {\n                  const endPath = util.getNodePath(_endContainer, child);\n                  _endContainer = util.getNodeFromPath(endPath, cloneChild);\n                }\n              } else {\n                recursionFunc(child, child);\n              }\n              continue;\n            }\n            newNode = child;\n            pCurrent = [];\n            const anchors = [];\n            while (newNode.parentNode !== null && newNode !== el && newNode !== newInnerNode) {\n              vNode = validation(newNode);\n              if (newNode.nodeType === 1 && vNode) {\n                if (_isMaintainedNode(newNode)) {\n                  if (!anchorNode) anchors.push(vNode);\n                } else {\n                  pCurrent.push(vNode);\n                }\n              }\n              newNode = newNode.parentNode;\n            }\n            pCurrent = pCurrent.concat(anchors);\n            const isTopNode = pCurrent.length > 0;\n            const childNode = pCurrent.pop() || child;\n            appendNode = newNode = childNode;\n            while (pCurrent.length > 0) {\n              newNode = pCurrent.pop();\n              appendNode.appendChild(newNode);\n              appendNode = newNode;\n            }\n            if (_isMaintainedNode(newInnerNode.parentNode) && !_isMaintainedNode(childNode)) {\n              newInnerNode = newInnerNode.cloneNode(false);\n              pNode.appendChild(newInnerNode);\n              nNodeArray.push(newInnerNode);\n            }\n            if (!anchorNode && _isMaintainedNode(childNode)) {\n              newInnerNode = newInnerNode.cloneNode(false);\n              const aChildren = childNode.childNodes;\n              for (let a = 0, aLen = aChildren.length; a < aLen; a++) {\n                newInnerNode.appendChild(aChildren[a]);\n              }\n              childNode.appendChild(newInnerNode);\n              pNode.appendChild(childNode);\n              ancestor = !_isMaintainedNode(newNode) ? newNode : newInnerNode;\n              nNodeArray.push(newInnerNode);\n            } else if (isTopNode) {\n              newInnerNode.appendChild(childNode);\n              ancestor = newNode;\n            } else {\n              ancestor = newInnerNode;\n            }\n            if (anchorNode && child.nodeType === 3) {\n              if (_getMaintainedNode(child)) {\n                const ancestorAnchorNode = util.getParentElement(ancestor, function (current) {\n                  return this._isMaintainedNode(current.parentNode) || current.parentNode === pNode;\n                }.bind(util));\n                anchorNode.appendChild(ancestorAnchorNode);\n                newInnerNode = ancestorAnchorNode.cloneNode(false);\n                nNodeArray.push(newInnerNode);\n                pNode.appendChild(newInnerNode);\n              } else {\n                anchorNode = null;\n              }\n            }\n          }\n\n          // startContainer\n          if (!passNode && child === container) {\n            let line = pNode;\n            anchorNode = _getMaintainedNode(child);\n            const prevNode = util.createTextNode(container.nodeType === 1 ? '' : container.substringData(0, offset));\n            const textNode = util.createTextNode(container.nodeType === 1 ? '' : container.substringData(offset, container.length - offset));\n            if (anchorNode) {\n              const a = _getMaintainedNode(ancestor);\n              if (a && a.parentNode !== line) {\n                let m = a;\n                let p = null;\n                while (m.parentNode !== line) {\n                  ancestor = p = m.parentNode.cloneNode(false);\n                  while (m.childNodes[0]) {\n                    p.appendChild(m.childNodes[0]);\n                  }\n                  m.appendChild(p);\n                  m = m.parentNode;\n                }\n                m.parentNode.appendChild(a);\n              }\n              anchorNode = anchorNode.cloneNode(false);\n            }\n            if (!util.onlyZeroWidthSpace(prevNode)) {\n              ancestor.appendChild(prevNode);\n            }\n            const prevAnchorNode = _getMaintainedNode(ancestor);\n            if (!!prevAnchorNode) anchorNode = prevAnchorNode;\n            if (anchorNode) line = anchorNode;\n            newNode = ancestor;\n            pCurrent = [];\n            while (newNode !== line && newNode !== null) {\n              vNode = validation(newNode);\n              if (newNode.nodeType === 1 && vNode) {\n                pCurrent.push(vNode);\n              }\n              newNode = newNode.parentNode;\n            }\n            const childNode = pCurrent.pop() || ancestor;\n            appendNode = newNode = childNode;\n            while (pCurrent.length > 0) {\n              newNode = pCurrent.pop();\n              appendNode.appendChild(newNode);\n              appendNode = newNode;\n            }\n            if (childNode !== ancestor) {\n              newInnerNode.appendChild(childNode);\n              ancestor = newNode;\n            } else {\n              ancestor = newInnerNode;\n            }\n            if (util.isBreak(child)) newInnerNode.appendChild(child.cloneNode(false));\n            line.appendChild(newInnerNode);\n            container = textNode;\n            offset = 0;\n            passNode = true;\n            ancestor.appendChild(container);\n            continue;\n          }\n          vNode = !passNode ? child.cloneNode(false) : validation(child);\n          if (vNode) {\n            ancestor.appendChild(vNode);\n            if (child.nodeType === 1 && !util.isBreak(child)) coverNode = vNode;\n          }\n          recursionFunc(child, coverNode);\n        }\n      })(element, pNode);\n\n      // not remove tag\n      if (isRemoveNode && !isRemoveFormat && !_removeCheck.v) {\n        return {\n          ancestor: element,\n          container: startCon,\n          offset: startOff,\n          endContainer: _endContainer\n        };\n      }\n      isRemoveFormat = isRemoveFormat && isRemoveNode;\n      if (isRemoveFormat) {\n        for (let i = 0; i < nNodeArray.length; i++) {\n          let removeNode = nNodeArray[i];\n          const rChildren = removeNode.childNodes;\n          const textNode = rChildren[0];\n          while (rChildren[0]) {\n            pNode.insertBefore(rChildren[0], removeNode);\n          }\n          util.removeItem(removeNode);\n          if (i === 0) container = textNode;\n        }\n      } else if (isRemoveNode) {\n        newInnerNode = newInnerNode.firstChild;\n        for (let i = 0; i < nNodeArray.length; i++) {\n          this._stripRemoveNode(nNodeArray[i]);\n        }\n      }\n      if (!isRemoveFormat && pNode.childNodes.length === 0) {\n        if (element.childNodes) {\n          container = element.childNodes[0];\n        } else {\n          container = util.createTextNode(util.zeroWidthSpace);\n          element.appendChild(container);\n        }\n      } else {\n        util.removeEmptyNode(pNode, newInnerNode, false);\n        if (util.onlyZeroWidthSpace(pNode.textContent)) {\n          container = pNode.firstChild;\n          offset = 0;\n        }\n\n        // node change\n        const offsets = {\n          s: 0,\n          e: 0\n        };\n        const path = util.getNodePath(container, pNode, offsets);\n        offset += offsets.s;\n\n        // tag merge\n        const newOffsets = util.mergeSameTags(pNode, [path], true);\n        element.parentNode.replaceChild(pNode, element);\n        container = util.getNodeFromPath(path, pNode);\n        offset += newOffsets[0];\n      }\n      return {\n        ancestor: pNode,\n        container: container,\n        offset: offset,\n        endContainer: _endContainer\n      };\n    },\n    /**\r\n     * @description wraps mid lines selected text.\r\n     * @param {Element} element The node of the line that contains the selected text node.\r\n     * @param {Element} newInnerNode The dom that will wrap the selected text area\r\n     * @param {Function} validation Check if the node should be stripped.\r\n     * @param {Boolean} isRemoveFormat Is the remove all formats command?\r\n     * @param {Boolean} isRemoveNode \"newInnerNode\" is remove node?\r\n     * @param {Node} _endContainer Offset node of last line already modified (end.container)\r\n     * @returns {Object} { ancestor, endContainer: \"If end container is renewed, returned renewed node\" }\r\n     * @private\r\n     */\n    _nodeChange_middleLine: function (element, newInnerNode, validation, isRemoveFormat, isRemoveNode, _removeCheck, _endContainer) {\n      // not add tag\n      if (!isRemoveNode) {\n        // end container path\n        let endPath = null;\n        if (_endContainer && element.contains(_endContainer)) endPath = util.getNodePath(_endContainer, element);\n        const tempNode = element.cloneNode(true);\n        const newNodeName = newInnerNode.nodeName;\n        const newCssText = newInnerNode.style.cssText;\n        const newClass = newInnerNode.className;\n        let children = tempNode.childNodes;\n        let i = 0,\n          len = children.length;\n        for (let child; i < len; i++) {\n          child = children[i];\n          if (child.nodeType === 3) break;\n          if (child.nodeName === newNodeName) {\n            child.style.cssText += newCssText;\n            util.addClass(child, newClass);\n          } else if (!util.isBreak(child) && util._isIgnoreNodeChange(child)) {\n            continue;\n          } else if (len === 1) {\n            children = child.childNodes;\n            len = children.length;\n            i = -1;\n            continue;\n          } else {\n            break;\n          }\n        }\n        if (len > 0 && i === len) {\n          element.innerHTML = tempNode.innerHTML;\n          return {\n            ancestor: element,\n            endContainer: endPath ? util.getNodeFromPath(endPath, element) : null\n          };\n        }\n      }\n\n      // add tag\n      _removeCheck.v = false;\n      const pNode = element.cloneNode(false);\n      const nNodeArray = [newInnerNode];\n      let noneChange = true;\n      (function recursionFunc(current, ancestor) {\n        const childNodes = current.childNodes;\n        for (let i = 0, len = childNodes.length, vNode, cloneChild; i < len; i++) {\n          let child = childNodes[i];\n          if (!child) continue;\n          let coverNode = ancestor;\n          if (!util.isBreak(child) && util._isIgnoreNodeChange(child)) {\n            if (newInnerNode.childNodes.length > 0) {\n              pNode.appendChild(newInnerNode);\n              newInnerNode = newInnerNode.cloneNode(false);\n            }\n            cloneChild = child.cloneNode(true);\n            pNode.appendChild(cloneChild);\n            pNode.appendChild(newInnerNode);\n            nNodeArray.push(newInnerNode);\n            ancestor = newInnerNode;\n\n            // end container\n            if (_endContainer && child.contains(_endContainer)) {\n              const endPath = util.getNodePath(_endContainer, child);\n              _endContainer = util.getNodeFromPath(endPath, cloneChild);\n            }\n            continue;\n          } else {\n            vNode = validation(child);\n            if (vNode) {\n              noneChange = false;\n              ancestor.appendChild(vNode);\n              if (child.nodeType === 1) coverNode = vNode;\n            }\n          }\n          if (!util.isBreak(child)) recursionFunc(child, coverNode);\n        }\n      })(element, newInnerNode);\n\n      // not remove tag\n      if (noneChange || isRemoveNode && !isRemoveFormat && !_removeCheck.v) return {\n        ancestor: element,\n        endContainer: _endContainer\n      };\n      pNode.appendChild(newInnerNode);\n      if (isRemoveFormat && isRemoveNode) {\n        for (let i = 0; i < nNodeArray.length; i++) {\n          let removeNode = nNodeArray[i];\n          const rChildren = removeNode.childNodes;\n          while (rChildren[0]) {\n            pNode.insertBefore(rChildren[0], removeNode);\n          }\n          util.removeItem(removeNode);\n        }\n      } else if (isRemoveNode) {\n        newInnerNode = newInnerNode.firstChild;\n        for (let i = 0; i < nNodeArray.length; i++) {\n          this._stripRemoveNode(nNodeArray[i]);\n        }\n      }\n      util.removeEmptyNode(pNode, newInnerNode, false);\n      util.mergeSameTags(pNode, null, true);\n\n      // node change\n      element.parentNode.replaceChild(pNode, element);\n      return {\n        ancestor: pNode,\n        endContainer: _endContainer\n      };\n    },\n    /**\r\n     * @description wraps last line selected text.\r\n     * @param {Element} element The node of the line that contains the selected text node.\r\n     * @param {Element} newInnerNode The dom that will wrap the selected text area\r\n     * @param {Function} validation Check if the node should be stripped.\r\n     * @param {Node} endCon The endContainer property of the selection object.\r\n     * @param {Number} endOff The endOffset property of the selection object.\r\n     * @param {Boolean} isRemoveFormat Is the remove all formats command?\r\n     * @param {Boolean} isRemoveNode \"newInnerNode\" is remove node?\r\n     * @returns {Object} { ancestor, container, offset }\r\n     * @private\r\n     */\n    _nodeChange_endLine: function (element, newInnerNode, validation, endCon, endOff, isRemoveFormat, isRemoveNode, _removeCheck, _getMaintainedNode, _isMaintainedNode) {\n      // not add tag\n      let parentCon = endCon.parentNode;\n      while (!parentCon.nextSibling && !parentCon.previousSibling && !util.isFormatElement(parentCon.parentNode) && !util.isWysiwygDiv(parentCon.parentNode)) {\n        if (parentCon.nodeName === newInnerNode.nodeName) break;\n        parentCon = parentCon.parentNode;\n      }\n      if (!isRemoveNode && parentCon.nodeName === newInnerNode.nodeName && !util.isFormatElement(parentCon) && !parentCon.previousSibling && util.onlyZeroWidthSpace(endCon.textContent.slice(endOff))) {\n        let sameTag = true;\n        let e = endCon.nextSibling;\n        while (e) {\n          if (!util.onlyZeroWidthSpace(e)) {\n            sameTag = false;\n            break;\n          }\n          e = e.nextSibling;\n        }\n        if (sameTag) {\n          util.copyTagAttributes(parentCon, newInnerNode);\n          return {\n            ancestor: element,\n            container: endCon,\n            offset: endOff\n          };\n        }\n      }\n\n      // add tag\n      _removeCheck.v = false;\n      const el = element;\n      const nNodeArray = [newInnerNode];\n      const pNode = element.cloneNode(false);\n      let container = endCon;\n      let offset = endOff;\n      let passNode = false;\n      let pCurrent, newNode, appendNode, anchorNode;\n      (function recursionFunc(current, ancestor) {\n        const childNodes = current.childNodes;\n        for (let i = childNodes.length - 1, vNode; 0 <= i; i--) {\n          const child = childNodes[i];\n          if (!child) continue;\n          let coverNode = ancestor;\n          if (passNode && !util.isBreak(child)) {\n            if (child.nodeType === 1) {\n              if (util._isIgnoreNodeChange(child)) {\n                newInnerNode = newInnerNode.cloneNode(false);\n                const cloneChild = child.cloneNode(true);\n                pNode.insertBefore(cloneChild, ancestor);\n                pNode.insertBefore(newInnerNode, cloneChild);\n                nNodeArray.push(newInnerNode);\n              } else {\n                recursionFunc(child, child);\n              }\n              continue;\n            }\n            newNode = child;\n            pCurrent = [];\n            const anchors = [];\n            while (newNode.parentNode !== null && newNode !== el && newNode !== newInnerNode) {\n              vNode = validation(newNode);\n              if (vNode && newNode.nodeType === 1) {\n                if (_isMaintainedNode(newNode)) {\n                  if (!anchorNode) anchors.push(vNode);\n                } else {\n                  pCurrent.push(vNode);\n                }\n              }\n              newNode = newNode.parentNode;\n            }\n            pCurrent = pCurrent.concat(anchors);\n            const isTopNode = pCurrent.length > 0;\n            const childNode = pCurrent.pop() || child;\n            appendNode = newNode = childNode;\n            while (pCurrent.length > 0) {\n              newNode = pCurrent.pop();\n              appendNode.appendChild(newNode);\n              appendNode = newNode;\n            }\n            if (_isMaintainedNode(newInnerNode.parentNode) && !_isMaintainedNode(childNode)) {\n              newInnerNode = newInnerNode.cloneNode(false);\n              pNode.insertBefore(newInnerNode, pNode.firstChild);\n              nNodeArray.push(newInnerNode);\n            }\n            if (!anchorNode && _isMaintainedNode(childNode)) {\n              newInnerNode = newInnerNode.cloneNode(false);\n              const aChildren = childNode.childNodes;\n              for (let a = 0, aLen = aChildren.length; a < aLen; a++) {\n                newInnerNode.appendChild(aChildren[a]);\n              }\n              childNode.appendChild(newInnerNode);\n              pNode.insertBefore(childNode, pNode.firstChild);\n              nNodeArray.push(newInnerNode);\n              if (newInnerNode.children.length > 0) ancestor = newNode;else ancestor = newInnerNode;\n            } else if (isTopNode) {\n              newInnerNode.insertBefore(childNode, newInnerNode.firstChild);\n              ancestor = newNode;\n            } else {\n              ancestor = newInnerNode;\n            }\n            if (anchorNode && child.nodeType === 3) {\n              if (_getMaintainedNode(child)) {\n                const ancestorAnchorNode = util.getParentElement(ancestor, function (current) {\n                  return this._isMaintainedNode(current.parentNode) || current.parentNode === pNode;\n                }.bind(util));\n                anchorNode.appendChild(ancestorAnchorNode);\n                newInnerNode = ancestorAnchorNode.cloneNode(false);\n                nNodeArray.push(newInnerNode);\n                pNode.insertBefore(newInnerNode, pNode.firstChild);\n              } else {\n                anchorNode = null;\n              }\n            }\n          }\n\n          // endContainer\n          if (!passNode && child === container) {\n            anchorNode = _getMaintainedNode(child);\n            const afterNode = util.createTextNode(container.nodeType === 1 ? '' : container.substringData(offset, container.length - offset));\n            const textNode = util.createTextNode(container.nodeType === 1 ? '' : container.substringData(0, offset));\n            if (anchorNode) {\n              anchorNode = anchorNode.cloneNode(false);\n              const a = _getMaintainedNode(ancestor);\n              if (a && a.parentNode !== pNode) {\n                let m = a;\n                let p = null;\n                while (m.parentNode !== pNode) {\n                  ancestor = p = m.parentNode.cloneNode(false);\n                  while (m.childNodes[0]) {\n                    p.appendChild(m.childNodes[0]);\n                  }\n                  m.appendChild(p);\n                  m = m.parentNode;\n                }\n                m.parentNode.insertBefore(a, m.parentNode.firstChild);\n              }\n              anchorNode = anchorNode.cloneNode(false);\n            } else if (_isMaintainedNode(newInnerNode.parentNode) && !anchorNode) {\n              newInnerNode = newInnerNode.cloneNode(false);\n              pNode.appendChild(newInnerNode);\n              nNodeArray.push(newInnerNode);\n            }\n            if (!util.onlyZeroWidthSpace(afterNode)) {\n              ancestor.insertBefore(afterNode, ancestor.firstChild);\n            }\n            newNode = ancestor;\n            pCurrent = [];\n            while (newNode !== pNode && newNode !== null) {\n              vNode = _isMaintainedNode(newNode) ? null : validation(newNode);\n              if (vNode && newNode.nodeType === 1) {\n                pCurrent.push(vNode);\n              }\n              newNode = newNode.parentNode;\n            }\n            const childNode = pCurrent.pop() || ancestor;\n            appendNode = newNode = childNode;\n            while (pCurrent.length > 0) {\n              newNode = pCurrent.pop();\n              appendNode.appendChild(newNode);\n              appendNode = newNode;\n            }\n            if (childNode !== ancestor) {\n              newInnerNode.insertBefore(childNode, newInnerNode.firstChild);\n              ancestor = newNode;\n            } else {\n              ancestor = newInnerNode;\n            }\n            if (util.isBreak(child)) newInnerNode.appendChild(child.cloneNode(false));\n            if (anchorNode) {\n              anchorNode.insertBefore(newInnerNode, anchorNode.firstChild);\n              pNode.insertBefore(anchorNode, pNode.firstChild);\n              anchorNode = null;\n            } else {\n              pNode.insertBefore(newInnerNode, pNode.firstChild);\n            }\n            container = textNode;\n            offset = textNode.data.length;\n            passNode = true;\n            ancestor.insertBefore(container, ancestor.firstChild);\n            continue;\n          }\n          vNode = !passNode ? child.cloneNode(false) : validation(child);\n          if (vNode) {\n            ancestor.insertBefore(vNode, ancestor.firstChild);\n            if (child.nodeType === 1 && !util.isBreak(child)) coverNode = vNode;\n          }\n          recursionFunc(child, coverNode);\n        }\n      })(element, pNode);\n\n      // not remove tag\n      if (isRemoveNode && !isRemoveFormat && !_removeCheck.v) {\n        return {\n          ancestor: element,\n          container: endCon,\n          offset: endOff\n        };\n      }\n      isRemoveFormat = isRemoveFormat && isRemoveNode;\n      if (isRemoveFormat) {\n        for (let i = 0; i < nNodeArray.length; i++) {\n          let removeNode = nNodeArray[i];\n          const rChildren = removeNode.childNodes;\n          let textNode = null;\n          while (rChildren[0]) {\n            textNode = rChildren[0];\n            pNode.insertBefore(textNode, removeNode);\n          }\n          util.removeItem(removeNode);\n          if (i === nNodeArray.length - 1) {\n            container = textNode;\n            offset = textNode.textContent.length;\n          }\n        }\n      } else if (isRemoveNode) {\n        newInnerNode = newInnerNode.firstChild;\n        for (let i = 0; i < nNodeArray.length; i++) {\n          this._stripRemoveNode(nNodeArray[i]);\n        }\n      }\n      if (!isRemoveFormat && pNode.childNodes.length === 0) {\n        if (element.childNodes) {\n          container = element.childNodes[0];\n        } else {\n          container = util.createTextNode(util.zeroWidthSpace);\n          element.appendChild(container);\n        }\n      } else {\n        if (!isRemoveNode && newInnerNode.textContent.length === 0) {\n          util.removeEmptyNode(pNode, null, false);\n          return {\n            ancestor: null,\n            container: null,\n            offset: 0\n          };\n        }\n        util.removeEmptyNode(pNode, newInnerNode, false);\n        if (util.onlyZeroWidthSpace(pNode.textContent)) {\n          container = pNode.firstChild;\n          offset = container.textContent.length;\n        } else if (util.onlyZeroWidthSpace(container)) {\n          container = newInnerNode;\n          offset = 1;\n        }\n\n        // node change\n        const offsets = {\n          s: 0,\n          e: 0\n        };\n        const path = util.getNodePath(container, pNode, offsets);\n        offset += offsets.s;\n\n        // tag merge\n        const newOffsets = util.mergeSameTags(pNode, [path], true);\n        element.parentNode.replaceChild(pNode, element);\n        container = util.getNodeFromPath(path, pNode);\n        offset += newOffsets[0];\n      }\n      return {\n        ancestor: pNode,\n        container: container,\n        offset: container.nodeType === 1 && offset === 1 ? container.childNodes.length : offset\n      };\n    },\n    /**\r\n     * @description Run plugin calls and basic commands.\r\n     * @param {String} command Command string\r\n     * @param {String} display Display type string ('command', 'submenu', 'dialog', 'container')\r\n     * @param {Element} target The element of command button\r\n     */\n    actionCall: function (command, display, target) {\n      // call plugins\n      if (display) {\n        if (/more/i.test(display)) {\n          if (target !== this._moreLayerActiveButton) {\n            const layer = context.element.toolbar.querySelector('.' + command);\n            if (layer) {\n              if (this._moreLayerActiveButton) this.moreLayerOff();\n              this._moreLayerActiveButton = target;\n              layer.style.display = 'block';\n              event._showToolbarBalloon();\n              event._showToolbarInline();\n            }\n            util.addClass(target, 'on');\n          } else {\n            const layer = context.element.toolbar.querySelector('.' + this._moreLayerActiveButton.getAttribute('data-command'));\n            if (layer) {\n              this.moreLayerOff();\n              event._showToolbarBalloon();\n              event._showToolbarInline();\n            }\n          }\n          return;\n        }\n        if (/container/.test(display) && (this._menuTray[command] === null || target !== this.containerActiveButton)) {\n          this.callPlugin(command, this.containerOn.bind(this, target), target);\n          return;\n        }\n        if (this.isReadOnly && util.arrayIncludes(this.resizingDisabledButtons, target)) return;\n        if (/submenu/.test(display) && (this._menuTray[command] === null || target !== this.submenuActiveButton)) {\n          this.callPlugin(command, this.submenuOn.bind(this, target), target);\n          return;\n        } else if (/dialog/.test(display)) {\n          this.callPlugin(command, this.plugins[command].open.bind(this), target);\n          return;\n        } else if (/command/.test(display)) {\n          this.callPlugin(command, this.plugins[command].action.bind(this), target);\n        } else if (/fileBrowser/.test(display)) {\n          this.callPlugin(command, this.plugins[command].open.bind(this, null), target);\n        }\n      } // default command\n      else if (command) {\n        this.commandHandler(target, command);\n      }\n      if (/submenu/.test(display)) {\n        this.submenuOff();\n      } else if (!/command/.test(display)) {\n        this.submenuOff();\n        this.containerOff();\n      }\n    },\n    /**\r\n     * @description Execute command of command button(All Buttons except submenu and dialog)\r\n     * (selectAll, codeView, fullScreen, indent, outdent, undo, redo, removeFormat, print, preview, showBlocks, save, bold, underline, italic, strike, subscript, superscript, copy, cut, paste)\r\n     * @param {Element|null} target The element of command button\r\n     * @param {String} command Property of command button (data-value)\r\n     */\n    commandHandler: function (target, command) {\n      if (core.isReadOnly && !/copy|cut|selectAll|codeView|fullScreen|print|preview|showBlocks/.test(command)) return;\n      switch (command) {\n        case 'copy':\n        case 'cut':\n          this.execCommand(command);\n          break;\n        case 'paste':\n          break;\n        case 'selectAll':\n          this.containerOff();\n          const wysiwyg = context.element.wysiwyg;\n          let first = util.getChildElement(wysiwyg.firstChild, function (current) {\n            return current.childNodes.length === 0 || current.nodeType === 3;\n          }, false) || wysiwyg.firstChild;\n          let last = util.getChildElement(wysiwyg.lastChild, function (current) {\n            return current.childNodes.length === 0 || current.nodeType === 3;\n          }, true) || wysiwyg.lastChild;\n          if (!first || !last) return;\n          if (util.isMedia(first)) {\n            const info = this.getFileComponent(first);\n            const br = util.createElement('BR');\n            const format = util.createElement(options.defaultTag);\n            format.appendChild(br);\n            first = info ? info.component : first;\n            first.parentNode.insertBefore(format, first);\n            first = br;\n          }\n          if (util.isMedia(last)) {\n            const br = util.createElement('BR');\n            const format = util.createElement(options.defaultTag);\n            format.appendChild(br);\n            wysiwyg.appendChild(format);\n            last = br;\n          }\n          event._showToolbarBalloon(this.setRange(first, 0, last, last.textContent.length));\n          break;\n        case 'codeView':\n          this.toggleCodeView();\n          break;\n        case 'fullScreen':\n          this.toggleFullScreen(target);\n          break;\n        case 'indent':\n        case 'outdent':\n          this.indent(command);\n          break;\n        case 'undo':\n          this.history.undo();\n          break;\n        case 'redo':\n          this.history.redo();\n          break;\n        case 'removeFormat':\n          this.removeFormat();\n          this.focus();\n          break;\n        case 'print':\n          this.print();\n          break;\n        case 'preview':\n          this.preview();\n          break;\n        case 'showBlocks':\n          this.toggleDisplayBlocks();\n          break;\n        case 'dir':\n          this.setDir(options.rtl ? 'ltr' : 'rtl');\n          break;\n        case 'dir_ltr':\n          this.setDir('ltr');\n          break;\n        case 'dir_rtl':\n          this.setDir('rtl');\n          break;\n        case 'save':\n          if (typeof options.callBackSave === 'function') {\n            options.callBackSave(this.getContents(false), this._variable.isChanged);\n          } else if (this._variable.isChanged && typeof functions.save === 'function') {\n            functions.save();\n          } else {\n            throw Error('[SUNEDITOR.core.commandHandler.fail] Please register call back function in creation option. (callBackSave : Function)');\n          }\n          this._variable.isChanged = false;\n          if (context.tool.save) context.tool.save.setAttribute('disabled', true);\n          break;\n        default:\n          // 'STRONG', 'U', 'EM', 'DEL', 'SUB', 'SUP'..\n          command = options._defaultCommand[command.toLowerCase()] || command;\n          if (!this.commandMap[command]) this.commandMap[command] = target;\n          const nodesMap = this._variable.currentNodesMap;\n          const cmd = nodesMap.indexOf(command) > -1 ? null : util.createElement(command);\n          let removeNode = command;\n          if (/^SUB$/i.test(command) && nodesMap.indexOf('SUP') > -1) {\n            removeNode = 'SUP';\n          } else if (/^SUP$/i.test(command) && nodesMap.indexOf('SUB') > -1) {\n            removeNode = 'SUB';\n          }\n          this.nodeChange(cmd, this._commandMapStyles[command] || null, [removeNode], false);\n          this.focus();\n      }\n    },\n    /**\r\n     * @description Remove format of the currently selected range\r\n     */\n    removeFormat: function () {\n      this.nodeChange(null, null, null, null);\n    },\n    /**\r\n     * @description This method implements indentation to selected range.\r\n     * Setted \"margin-left\" to \"25px\" in the top \"P\" tag of the parameter node.\r\n     * @param {String} command Separator (\"indent\" or \"outdent\")\r\n     */\n    indent: function (command) {\n      const range = this.getRange();\n      const rangeLines = this.getSelectedElements(null);\n      const cells = [];\n      const shift = 'indent' !== command;\n      const marginDir = options.rtl ? 'marginRight' : 'marginLeft';\n      let sc = range.startContainer;\n      let ec = range.endContainer;\n      let so = range.startOffset;\n      let eo = range.endOffset;\n      for (let i = 0, len = rangeLines.length, f, margin; i < len; i++) {\n        f = rangeLines[i];\n        if (!util.isListCell(f) || !this.plugins.list) {\n          margin = /\\d+/.test(f.style[marginDir]) ? util.getNumber(f.style[marginDir], 0) : 0;\n          if (shift) {\n            margin -= 25;\n          } else {\n            margin += 25;\n          }\n          util.setStyle(f, marginDir, margin <= 0 ? '' : margin + 'px');\n        } else {\n          if (shift || f.previousElementSibling) {\n            cells.push(f);\n          }\n        }\n      }\n\n      // list cells\n      if (cells.length > 0) {\n        this.plugins.list.editInsideList.call(this, shift, cells);\n      }\n      this.effectNode = null;\n      this.setRange(sc, so, ec, eo);\n\n      // history stack\n      this.history.push(false);\n    },\n    /**\r\n     * @description Add or remove the class name of \"body\" so that the code block is visible\r\n     */\n    toggleDisplayBlocks: function () {\n      const wysiwyg = context.element.wysiwyg;\n      util.toggleClass(wysiwyg, 'se-show-block');\n      if (util.hasClass(wysiwyg, 'se-show-block')) {\n        util.addClass(this._styleCommandMap.showBlocks, 'active');\n      } else {\n        util.removeClass(this._styleCommandMap.showBlocks, 'active');\n      }\n      this._resourcesStateChange();\n    },\n    /**\r\n     * @description Changes to code view or wysiwyg view\r\n     */\n    toggleCodeView: function () {\n      const isCodeView = this._variable.isCodeView;\n      this.controllersOff();\n      util.setDisabledButtons(!isCodeView, this.codeViewDisabledButtons);\n      if (isCodeView) {\n        if (!util.isNonEditable(context.element.wysiwygFrame)) this._setCodeDataToEditor();\n        context.element.wysiwygFrame.scrollTop = 0;\n        context.element.code.style.display = 'none';\n        context.element.wysiwygFrame.style.display = 'block';\n        this._variable._codeOriginCssText = this._variable._codeOriginCssText.replace(/(\\s?display(\\s+)?:(\\s+)?)[a-zA-Z]+(?=;)/, 'display: none');\n        this._variable._wysiwygOriginCssText = this._variable._wysiwygOriginCssText.replace(/(\\s?display(\\s+)?:(\\s+)?)[a-zA-Z]+(?=;)/, 'display: block');\n        if (options.height === 'auto' && !options.codeMirrorEditor) context.element.code.style.height = '0px';\n        this._variable.isCodeView = false;\n        if (!this._variable.isFullScreen) {\n          this._notHideToolbar = false;\n          if (/balloon|balloon-always/i.test(options.mode)) {\n            context.element._arrow.style.display = '';\n            this._isInline = false;\n            this._isBalloon = true;\n            event._hideToolbar();\n          }\n        }\n        this.nativeFocus();\n        util.removeClass(this._styleCommandMap.codeView, 'active');\n\n        // history stack\n        if (!util.isNonEditable(context.element.wysiwygFrame)) {\n          this.history.push(false);\n          this.history._resetCachingButton();\n        }\n      } else {\n        this._setEditorDataToCodeView();\n        this._variable._codeOriginCssText = this._variable._codeOriginCssText.replace(/(\\s?display(\\s+)?:(\\s+)?)[a-zA-Z]+(?=;)/, 'display: block');\n        this._variable._wysiwygOriginCssText = this._variable._wysiwygOriginCssText.replace(/(\\s?display(\\s+)?:(\\s+)?)[a-zA-Z]+(?=;)/, 'display: none');\n        if (this._variable.isFullScreen) context.element.code.style.height = '100%';else if (options.height === 'auto' && !options.codeMirrorEditor) context.element.code.style.height = context.element.code.scrollHeight > 0 ? context.element.code.scrollHeight + 'px' : 'auto';\n        if (options.codeMirrorEditor) options.codeMirrorEditor.refresh();\n        this._variable.isCodeView = true;\n        if (!this._variable.isFullScreen) {\n          this._notHideToolbar = true;\n          if (this._isBalloon) {\n            context.element._arrow.style.display = 'none';\n            context.element.toolbar.style.left = '';\n            this._isInline = true;\n            this._isBalloon = false;\n            event._showToolbarInline();\n          }\n        }\n        this._variable._range = null;\n        context.element.code.focus();\n        util.addClass(this._styleCommandMap.codeView, 'active');\n      }\n      this._checkPlaceholder();\n      if (this.isReadOnly) util.setDisabledButtons(true, this.resizingDisabledButtons);\n\n      // user event\n      if (typeof functions.toggleCodeView === 'function') functions.toggleCodeView(this._variable.isCodeView, this);\n    },\n    /**\r\n     * @description Convert the data of the code view and put it in the WYSIWYG area.\r\n     * @private\r\n     */\n    _setCodeDataToEditor: function () {\n      const code_html = this._getCodeView();\n      if (options.fullPage) {\n        const parseDocument = this._parser.parseFromString(code_html, 'text/html');\n        if (!this.options.__allowedScriptTag) {\n          const headChildren = parseDocument.head.children;\n          for (let i = 0, len = headChildren.length; i < len; i++) {\n            if (/^script$/i.test(headChildren[i].tagName)) {\n              parseDocument.head.removeChild(headChildren[i]);\n              i--, len--;\n            }\n          }\n        }\n        let headers = parseDocument.head.innerHTML;\n        if (!parseDocument.head.querySelector('link[rel=\"stylesheet\"]') || this.options.height === 'auto' && !parseDocument.head.querySelector('style')) {\n          headers += util._setIframeCssTags(this.options);\n        }\n        this._wd.head.innerHTML = headers;\n        this._wd.body.innerHTML = this.convertContentsForEditor(parseDocument.body.innerHTML);\n        const attrs = parseDocument.body.attributes;\n        for (let i = 0, len = attrs.length; i < len; i++) {\n          if (attrs[i].name === 'contenteditable') continue;\n          this._wd.body.setAttribute(attrs[i].name, attrs[i].value);\n        }\n        if (!util.hasClass(this._wd.body, 'sun-editor-editable')) {\n          const editableClasses = options._editableClass.split(' ');\n          for (let i = 0; i < editableClasses.length; i++) {\n            util.addClass(this._wd.body, options._editableClass[i]);\n          }\n        }\n      } else {\n        context.element.wysiwyg.innerHTML = code_html.length > 0 ? this.convertContentsForEditor(code_html) : '<' + options.defaultTag + '><br></' + options.defaultTag + '>';\n      }\n    },\n    /**\r\n     * @description Convert the data of the WYSIWYG area and put it in the code view area.\r\n     * @private\r\n     */\n    _setEditorDataToCodeView: function () {\n      const codeContents = this.convertHTMLForCodeView(context.element.wysiwyg, false);\n      let codeValue = '';\n      if (options.fullPage) {\n        const attrs = util.getAttributesToString(this._wd.body, null);\n        codeValue = '<!DOCTYPE html>\\n<html>\\n' + this._wd.head.outerHTML.replace(/>(?!\\n)/g, '>\\n') + '<body ' + attrs + '>\\n' + codeContents + '</body>\\n</html>';\n      } else {\n        codeValue = codeContents;\n      }\n      context.element.code.style.display = 'block';\n      context.element.wysiwygFrame.style.display = 'none';\n      this._setCodeView(codeValue);\n    },\n    /**\r\n     * @description Changes to full screen or default screen\r\n     * @param {Element|null} element full screen button\r\n     */\n    toggleFullScreen: function (element) {\n      const topArea = context.element.topArea;\n      const toolbar = context.element.toolbar;\n      const editorArea = context.element.editorArea;\n      const wysiwygFrame = context.element.wysiwygFrame;\n      const code = context.element.code;\n      const _var = this._variable;\n      this.controllersOff();\n      const wasToolbarHidden = toolbar.style.display === 'none' || this._isInline && !this._inlineToolbarAttr.isShow;\n      if (!_var.isFullScreen) {\n        _var.isFullScreen = true;\n        _var._fullScreenAttrs.inline = this._isInline;\n        _var._fullScreenAttrs.balloon = this._isBalloon;\n        if (this._isInline || this._isBalloon) {\n          this._isInline = false;\n          this._isBalloon = false;\n        }\n        if (!!options.toolbarContainer) context.element.relative.insertBefore(toolbar, editorArea);\n        topArea.style.position = 'fixed';\n        topArea.style.top = '0';\n        topArea.style.left = '0';\n        topArea.style.width = '100%';\n        topArea.style.maxWidth = '100%';\n        topArea.style.height = '100%';\n        topArea.style.zIndex = '2147483647';\n        if (context.element._stickyDummy.style.display !== ('none' && '')) {\n          _var._fullScreenAttrs.sticky = true;\n          context.element._stickyDummy.style.display = 'none';\n          util.removeClass(toolbar, 'se-toolbar-sticky');\n        }\n        _var._bodyOverflow = _d.body.style.overflow;\n        _d.body.style.overflow = 'hidden';\n        _var._editorAreaOriginCssText = editorArea.style.cssText;\n        _var._wysiwygOriginCssText = wysiwygFrame.style.cssText;\n        _var._codeOriginCssText = code.style.cssText;\n        editorArea.style.cssText = toolbar.style.cssText = '';\n        wysiwygFrame.style.cssText = (wysiwygFrame.style.cssText.match(/\\s?display(\\s+)?:(\\s+)?[a-zA-Z]+;/) || [''])[0] + options._editorStyles.editor;\n        code.style.cssText = (code.style.cssText.match(/\\s?display(\\s+)?:(\\s+)?[a-zA-Z]+;/) || [''])[0];\n        toolbar.style.width = wysiwygFrame.style.height = code.style.height = '100%';\n        toolbar.style.position = 'relative';\n        toolbar.style.display = 'block';\n        _var.innerHeight_fullScreen = _w.innerHeight - toolbar.offsetHeight;\n        editorArea.style.height = _var.innerHeight_fullScreen - options.fullScreenOffset + 'px';\n        if (element) util.changeElement(element.firstElementChild, icons.reduction);\n        if (options.iframe && options.height === 'auto') {\n          editorArea.style.overflow = 'auto';\n          this._iframeAutoHeight();\n        }\n        context.element.topArea.style.marginTop = options.fullScreenOffset + 'px';\n        util.addClass(this._styleCommandMap.fullScreen, 'active');\n      } else {\n        _var.isFullScreen = false;\n        wysiwygFrame.style.cssText = _var._wysiwygOriginCssText;\n        code.style.cssText = _var._codeOriginCssText;\n        toolbar.style.cssText = '';\n        editorArea.style.cssText = _var._editorAreaOriginCssText;\n        topArea.style.cssText = _var._originCssText;\n        _d.body.style.overflow = _var._bodyOverflow;\n        if (options.height === 'auto' && !options.codeMirrorEditor) event._codeViewAutoHeight();\n        if (!!options.toolbarContainer) options.toolbarContainer.appendChild(toolbar);\n        if (options.stickyToolbar > -1) {\n          util.removeClass(toolbar, 'se-toolbar-sticky');\n        }\n        if (_var._fullScreenAttrs.sticky && !options.toolbarContainer) {\n          _var._fullScreenAttrs.sticky = false;\n          context.element._stickyDummy.style.display = 'block';\n          util.addClass(toolbar, \"se-toolbar-sticky\");\n        }\n        this._isInline = _var._fullScreenAttrs.inline;\n        this._isBalloon = _var._fullScreenAttrs.balloon;\n        if (this._isInline) event._showToolbarInline();\n        if (!!options.toolbarContainer) util.removeClass(toolbar, 'se-toolbar-balloon');\n        event.onScroll_window();\n        if (element) util.changeElement(element.firstElementChild, icons.expansion);\n        context.element.topArea.style.marginTop = '';\n        util.removeClass(this._styleCommandMap.fullScreen, 'active');\n      }\n      if (wasToolbarHidden) functions.toolbar.hide();\n\n      // user event\n      if (typeof functions.toggleFullScreen === 'function') functions.toggleFullScreen(this._variable.isFullScreen, this);\n    },\n    /**\r\n     * @description Prints the current contents of the editor.\r\n     */\n    print: function () {\n      const iframe = util.createElement('IFRAME');\n      iframe.style.display = 'none';\n      _d.body.appendChild(iframe);\n      const contentsHTML = options.printTemplate ? options.printTemplate.replace(/\\{\\{\\s*contents\\s*\\}\\}/i, this.getContents(true)) : this.getContents(true);\n      const printDocument = util.getIframeDocument(iframe);\n      const wDoc = this._wd;\n      if (options.iframe) {\n        const arrts = options._printClass !== null ? 'class=\"' + options._printClass + '\"' : options.fullPage ? util.getAttributesToString(wDoc.body, ['contenteditable']) : 'class=\"' + options._editableClass + '\"';\n        printDocument.write('' + '<!DOCTYPE html><html>' + '<head>' + wDoc.head.innerHTML + '</head>' + '<body ' + arrts + '>' + contentsHTML + '</body>' + '</html>');\n      } else {\n        const links = _d.head.getElementsByTagName('link');\n        const styles = _d.head.getElementsByTagName('style');\n        let linkHTML = '';\n        for (let i = 0, len = links.length; i < len; i++) {\n          linkHTML += links[i].outerHTML;\n        }\n        for (let i = 0, len = styles.length; i < len; i++) {\n          linkHTML += styles[i].outerHTML;\n        }\n        printDocument.write('' + '<!DOCTYPE html><html>' + '<head>' + linkHTML + '</head>' + '<body class=\"' + (options._printClass !== null ? options._printClass : options._editableClass) + '\">' + contentsHTML + '</body>' + '</html>');\n      }\n      this.showLoading();\n      _w.setTimeout(function () {\n        try {\n          iframe.focus();\n          // IE or Edge, Chromium\n          if (util.isIE_Edge || util.isChromium || !!_d.documentMode || !!_w.StyleMedia) {\n            try {\n              iframe.contentWindow.document.execCommand('print', false, null);\n            } catch (e) {\n              iframe.contentWindow.print();\n            }\n          } else {\n            // Other browsers\n            iframe.contentWindow.print();\n          }\n        } catch (error) {\n          throw Error('[SUNEDITOR.core.print.fail] error: ' + error);\n        } finally {\n          core.closeLoading();\n          util.removeItem(iframe);\n        }\n      }, 1000);\n    },\n    /**\r\n     * @description Open the preview window.\r\n     */\n    preview: function () {\n      core.submenuOff();\n      core.containerOff();\n      core.controllersOff();\n      const contentsHTML = options.previewTemplate ? options.previewTemplate.replace(/\\{\\{\\s*contents\\s*\\}\\}/i, this.getContents(true)) : this.getContents(true);\n      const windowObject = _w.open('', '_blank');\n      windowObject.mimeType = 'text/html';\n      const wDoc = this._wd;\n      if (options.iframe) {\n        const arrts = options._printClass !== null ? 'class=\"' + options._printClass + '\"' : options.fullPage ? util.getAttributesToString(wDoc.body, ['contenteditable']) : 'class=\"' + options._editableClass + '\"';\n        windowObject.document.write('' + '<!DOCTYPE html><html>' + '<head>' + wDoc.head.innerHTML + '<style>body {overflow:auto !important; margin: 10px auto !important; height:auto !important; outline:1px dashed #ccc;}</style>' + '</head>' + '<body ' + arrts + '>' + contentsHTML + '</body>' + '</html>');\n      } else {\n        const links = _d.head.getElementsByTagName('link');\n        const styles = _d.head.getElementsByTagName('style');\n        let linkHTML = '';\n        for (let i = 0, len = links.length; i < len; i++) {\n          linkHTML += links[i].outerHTML;\n        }\n        for (let i = 0, len = styles.length; i < len; i++) {\n          linkHTML += styles[i].outerHTML;\n        }\n        windowObject.document.write('' + '<!DOCTYPE html><html>' + '<head>' + '<meta charset=\"utf-8\" />' + '<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">' + '<title>' + lang.toolbar.preview + '</title>' + linkHTML + '</head>' + '<body class=\"' + (options._printClass !== null ? options._printClass : options._editableClass) + '\" style=\"margin:10px auto !important; height:auto !important; outline:1px dashed #ccc;\">' + contentsHTML + '</body>' + '</html>');\n      }\n    },\n    /**\r\n     * @description Set direction to \"rtl\" or \"ltr\".\r\n     * @param {String} dir \"rtl\" or \"ltr\"\r\n     */\n    setDir: function (dir) {\n      const rtl = dir === 'rtl';\n      const changeDir = this._prevRtl !== rtl;\n      this._prevRtl = options.rtl = rtl;\n      if (changeDir) {\n        // align buttons\n        if (this.plugins.align) {\n          this.plugins.align.exchangeDir.call(this);\n        }\n        // indent buttons\n        if (context.tool.indent) util.changeElement(context.tool.indent.firstElementChild, icons.indent);\n        if (context.tool.outdent) util.changeElement(context.tool.outdent.firstElementChild, icons.outdent);\n      }\n      const el = context.element;\n      if (rtl) {\n        util.addClass(el.topArea, 'se-rtl');\n        util.addClass(el.wysiwygFrame, 'se-rtl');\n      } else {\n        util.removeClass(el.topArea, 'se-rtl');\n        util.removeClass(el.wysiwygFrame, 'se-rtl');\n      }\n      const lineNodes = util.getListChildren(el.wysiwyg, function (current) {\n        return util.isFormatElement(current) && (current.style.marginRight || current.style.marginLeft || current.style.textAlign);\n      });\n      for (let i = 0, len = lineNodes.length, n, l, r; i < len; i++) {\n        n = lineNodes[i];\n        // indent margin\n        r = n.style.marginRight;\n        l = n.style.marginLeft;\n        if (r || l) {\n          n.style.marginRight = l;\n          n.style.marginLeft = r;\n        }\n        // text align\n        r = n.style.textAlign;\n        if (r === 'left') n.style.textAlign = 'right';else if (r === 'right') n.style.textAlign = 'left';\n      }\n      const tool = context.tool;\n      if (tool.dir) {\n        util.changeTxt(tool.dir.querySelector('.se-tooltip-text'), lang.toolbar[options.rtl ? 'dir_ltr' : 'dir_rtl']);\n        util.changeElement(tool.dir.firstElementChild, icons[options.rtl ? 'dir_ltr' : 'dir_rtl']);\n      }\n      if (tool.dir_ltr) {\n        if (rtl) util.removeClass(tool.dir_ltr, 'active');else util.addClass(tool.dir_ltr, 'active');\n      }\n      if (tool.dir_rtl) {\n        if (rtl) util.addClass(tool.dir_rtl, 'active');else util.removeClass(tool.dir_rtl, 'active');\n      }\n    },\n    /**\r\n     * @description Sets the HTML string\r\n     * @param {String|undefined} html HTML string\r\n     */\n    setContents: function (html) {\n      this.removeRange();\n      const convertValue = html === null || html === undefined ? '' : this.convertContentsForEditor(html, null, null);\n      if (!this._variable.isCodeView) {\n        context.element.wysiwyg.innerHTML = convertValue;\n        this._resetComponents();\n        // history stack\n        this.history.push(false);\n      } else {\n        const value = this.convertHTMLForCodeView(convertValue, false);\n        this._setCodeView(value);\n      }\n    },\n    /**\r\n     * @description Sets the contents of the iframe's head tag and body tag when using the \"iframe\" or \"fullPage\" option.\r\n     * @param {Object} ctx { head: HTML string, body: HTML string}\r\n     */\n    setIframeContents: function (ctx) {\n      if (!options.iframe) return false;\n      if (ctx.head) this._wd.head.innerHTML = this.options.__allowedScriptTag ? ctx.head : ctx.head.replace(this.__scriptTagRegExp, '');\n      if (ctx.body) this._wd.body.innerHTML = this.convertContentsForEditor(ctx.body);\n      this._resetComponents();\n    },\n    /**\r\n     * @description Gets the current contents\r\n     * @param {Boolean} onlyContents Return only the contents of the body without headers when the \"fullPage\" option is true\r\n     * @returns {Object}\r\n     */\n    getContents: function (onlyContents) {\n      const contents = this.cleanHTML(context.element.wysiwyg.innerHTML, null, null);\n      const renderHTML = util.createElement('DIV');\n      renderHTML.innerHTML = contents;\n      const editableEls = util.getListChildren(renderHTML, function (current) {\n        return current.hasAttribute('contenteditable');\n      });\n      for (let i = 0, len = editableEls.length; i < len; i++) {\n        editableEls[i].removeAttribute('contenteditable');\n      }\n      if (options.fullPage && !onlyContents) {\n        const attrs = util.getAttributesToString(this._wd.body, ['contenteditable']);\n        return '<!DOCTYPE html><html>' + this._wd.head.outerHTML + '<body ' + attrs + '>' + renderHTML.innerHTML + '</body></html>';\n      } else {\n        return renderHTML.innerHTML;\n      }\n    },\n    /**\r\n     * @description Gets the current contents with containing parent div(div.sun-editor-editable).\r\n     * <div class=\"sun-editor-editable\">{contents}</div>\r\n     * @param {Boolean} onlyContents Return only the contents of the body without headers when the \"fullPage\" option is true\r\n     * @returns {String}\r\n     */\n    getFullContents: function (onlyContents) {\n      return '<div class=\"sun-editor-editable' + (options.rtl ? ' se-rtl' : '') + '\">' + this.getContents(onlyContents) + '</div>';\n    },\n    /**\r\n     * @description Returns HTML string according to tag type and configuration.\r\n     * Use only \"cleanHTML\"\r\n     * @param {Node} node Node\r\n     * @param {Boolean} requireFormat If true, text nodes that do not have a format node is wrapped with the format tag.\r\n     * @private\r\n     */\n    _makeLine: function (node, requireFormat) {\n      const defaultTag = options.defaultTag;\n      // element\n      if (node.nodeType === 1) {\n        if (this.__disallowedTagNameRegExp.test(node.nodeName)) return '';\n        if (/__se__tag/.test(node.className)) return node.outerHTML;\n        const ch = util.getListChildNodes(node, function (current) {\n          return util.isSpanWithoutAttr(current) && !util.getParentElement(current, util.isNotCheckingNode);\n        }) || [];\n        for (let i = ch.length - 1; i >= 0; i--) {\n          ch[i].outerHTML = ch[i].innerHTML;\n        }\n        if (!requireFormat || util.isFormatElement(node) || util.isRangeFormatElement(node) || util.isComponent(node) || util.isMedia(node) || util.isAnchor(node) && util.isMedia(node.firstElementChild)) {\n          return util.isSpanWithoutAttr(node) ? node.innerHTML : node.outerHTML;\n        } else {\n          return '<' + defaultTag + '>' + (util.isSpanWithoutAttr(node) ? node.innerHTML : node.outerHTML) + '</' + defaultTag + '>';\n        }\n      }\n      // text\n      if (node.nodeType === 3) {\n        if (!requireFormat) return util._HTMLConvertor(node.textContent);\n        const textArray = node.textContent.split(/\\n/g);\n        let html = '';\n        for (let i = 0, tLen = textArray.length, text; i < tLen; i++) {\n          text = textArray[i].trim();\n          if (text.length > 0) html += '<' + defaultTag + '>' + util._HTMLConvertor(text) + '</' + defaultTag + '>';\n        }\n        return html;\n      }\n      // comments\n      if (node.nodeType === 8 && this._allowHTMLComments) {\n        return '<!--' + node.textContent.trim() + '-->';\n      }\n      return '';\n    },\n    /**\r\n     * @description Removes attribute values such as style and converts tags that do not conform to the \"html5\" standard.\r\n     * @param {String} text \r\n     * @returns {String} HTML string\r\n     * @private\r\n     */\n    _tagConvertor: function (text) {\n      if (!this._disallowedTextTagsRegExp) return text;\n      const ec = options._textTagsMap;\n      return text.replace(this._disallowedTextTagsRegExp, function (m, t, n, p) {\n        return t + (typeof ec[n] === 'string' ? ec[n] : n) + (p ? ' ' + p : '');\n      });\n    },\n    /**\r\n     * @description Delete disallowed tags\r\n     * @param {String} html HTML string\r\n     * @returns {String}\r\n     * @private\r\n     */\n    _deleteDisallowedTags: function (html) {\n      html = html.replace(this.__disallowedTagsRegExp, '').replace(/<[a-z0-9]+\\:[a-z0-9]+[^>^\\/]*>[^>]*<\\/[a-z0-9]+\\:[a-z0-9]+>/gi, '');\n      if (!/\\bfont\\b/i.test(this.options._editorTagsWhitelist)) {\n        html = html.replace(/(<\\/?)font(\\s?)/gi, '$1span$2');\n      }\n      return html.replace(this.editorTagsWhitelistRegExp, '').replace(this.editorTagsBlacklistRegExp, '');\n    },\n    _convertFontSize: function (to, size) {\n      const math = this._w.Math;\n      const value = size.match(/(\\d+(?:\\.\\d+)?)(.+)/);\n      const sizeNum = value ? value[1] * 1 : util.fontValueMap[size];\n      const from = value ? value[2] : 'rem';\n      let pxSize = sizeNum;\n      if (/em/.test(from)) {\n        pxSize = math.round(sizeNum / 0.0625);\n      } else if (from === 'pt') {\n        pxSize = math.round(sizeNum * 1.333);\n      } else if (from === '%') {\n        pxSize = sizeNum / 100;\n      }\n      switch (to) {\n        case 'em':\n        case 'rem':\n        case '%':\n          return (pxSize * 0.0625).toFixed(2) + to;\n        case 'pt':\n          return math.floor(pxSize / 1.333) + to;\n        default:\n          // px\n          return pxSize + to;\n      }\n    },\n    _cleanStyle: function (m, v, name) {\n      let sv = (m.match(/style\\s*=\\s*(?:\"|')[^\"']*(?:\"|')/) || [])[0];\n      if (/span/i.test(name) && !sv && (m.match(/<span\\s(.+)/) || [])[1]) {\n        const size = (m.match(/\\ssize=\"([^\"]+)\"/i) || [])[1];\n        const face = (m.match(/\\sface=\"([^\"]+)\"/i) || [])[1];\n        const color = (m.match(/\\scolor=\"([^\"]+)\"/i) || [])[1];\n        if (size || face || color) {\n          sv = 'style=\"' + (size ? 'font-size:' + this.util.getNumber(size / 3.333, 1) + 'rem;' : '') + (face ? 'font-family:' + face + ';' : '') + (color ? 'color:' + color + ';' : '') + '\"';\n        }\n      }\n      if (sv) {\n        if (!v) v = [];\n        const style = sv.replace(/&quot;/g, '').match(this._cleanStyleRegExp[name]);\n        if (style) {\n          const allowedStyle = [];\n          for (let i = 0, len = style.length, r; i < len; i++) {\n            r = style[i].match(/([a-zA-Z0-9-]+)(:)([^\"]+)/);\n            if (r && !/inherit|initial|revert|unset/i.test(r[3])) {\n              const k = util.kebabToCamelCase(r[1].trim());\n              const v = this.wwComputedStyle[k].replace(/\"/g, '');\n              const c = r[3].trim();\n              switch (k) {\n                case 'fontFamily':\n                  if (!options.plugins.font || options.font.indexOf(c) === -1) continue;\n                  break;\n                case 'fontSize':\n                  if (!options.plugins.fontSize) continue;\n                  if (!this._cleanStyleRegExp.fontSizeUnit.test(r[0])) {\n                    r[0] = r[0].replace((r[0].match(/:\\s*([^;]+)/) || [])[1], this._convertFontSize.bind(this, options.fontSizeUnit));\n                  }\n                  break;\n                case 'color':\n                  if (!options.plugins.fontColor || /rgba\\(([0-9]+\\s*,\\s*){3}0\\)|windowtext/i.test(c)) continue;\n                  break;\n                case 'backgroundColor':\n                  if (!options.plugins.hiliteColor || /rgba\\(([0-9]+\\s*,\\s*){3}0\\)|windowtext/i.test(c)) continue;\n                  break;\n              }\n              if (v !== c) {\n                allowedStyle.push(r[0]);\n              }\n            }\n          }\n          if (allowedStyle.length > 0) v.push('style=\"' + allowedStyle.join(';') + '\"');\n        }\n      }\n      return v;\n    },\n    /**\r\n     * @description Tag and tag attribute check RegExp function. (used by \"cleanHTML\" and \"convertContentsForEditor\")\r\n     * @param {Boolean} lowLevelCheck Row level check\r\n     * @param {String} m RegExp value\r\n     * @param {String} t RegExp value\r\n     * @returns {String}\r\n     * @private\r\n     */\n    _cleanTags: function (lowLevelCheck, m, t) {\n      if (/^<[a-z0-9]+\\:[a-z0-9]+/i.test(m)) return m;\n      let v = null;\n      const tagName = t.match(/(?!<)[a-zA-Z0-9\\-]+/)[0].toLowerCase();\n\n      // blacklist\n      const bAttr = this._attributesTagsBlacklist[tagName];\n      m = m.replace(/\\s(?:on[a-z]+)\\s*=\\s*(\")[^\"]*\\1/ig, '');\n      if (bAttr) m = m.replace(bAttr, '');else m = m.replace(this._attributesBlacklistRegExp, '');\n\n      // whitelist\n      const wAttr = this._attributesTagsWhitelist[tagName];\n      if (wAttr) v = m.match(wAttr);else v = m.match(lowLevelCheck ? this._attributesWhitelistRegExp : this._attributesWhitelistRegExp_all_data);\n\n      // attribute\n      if (lowLevelCheck || tagName === 'span') {\n        if (tagName === 'a') {\n          const sv = m.match(/(?:(?:id|name)\\s*=\\s*(?:\"|')[^\"']*(?:\"|'))/g);\n          if (sv) {\n            if (!v) v = [];\n            v.push(sv[0]);\n          }\n        } else if (!v || !/style=/i.test(v.toString())) {\n          if (tagName === 'span') {\n            v = this._cleanStyle(m, v, 'span');\n          } else if (/^(P|DIV|H[1-6]|PRE)$/i.test(tagName)) {\n            v = this._cleanStyle(m, v, 'format');\n          }\n        }\n      } else {\n        const sv = m.match(/style\\s*=\\s*(?:\"|')[^\"']*(?:\"|')/);\n        if (sv && !v) v = [sv[0]];else if (sv && !v.some(function (v) {\n          return /^style/.test(v.trim());\n        })) v.push(sv[0]);\n      }\n\n      // figure\n      if (util.isFigures(tagName)) {\n        const sv = m.match(/style\\s*=\\s*(?:\"|')[^\"']*(?:\"|')/);\n        if (!v) v = [];\n        if (sv) v.push(sv[0]);\n      }\n      if (v) {\n        for (let i = 0, len = v.length, a; i < len; i++) {\n          // if (lowLevelCheck && /^class=\"(?!(__se__|se-|katex))/.test(v[i].trim())) continue;\n          a = /^(?:href|src)\\s*=\\s*('|\"|\\s)*javascript\\s*\\:/i.test(v[i].trim()) ? '' : v[i];\n          t += (/^\\s/.test(a) ? '' : ' ') + a;\n        }\n      }\n      return t;\n    },\n    /**\r\n     * @description Determines if formatting is required and returns a domTree\r\n     * @param {Element} dom documentFragment\r\n     * @returns {Element}\r\n     * @private\r\n     */\n    _editFormat: function (dom) {\n      let value = '',\n        f;\n      const tempTree = dom.childNodes;\n      for (let i = 0, len = tempTree.length, n; i < len; i++) {\n        n = tempTree[i];\n        if (n.nodeType === 8) {\n          value += '<!-- ' + n.textContent + ' -->';\n        } else if (!util.isFormatElement(n) && !util.isRangeFormatElement(n) && !util.isComponent(n) && !/meta/i.test(n.nodeName)) {\n          if (!f) f = util.createElement(options.defaultTag);\n          f.appendChild(n);\n          i--;\n          len--;\n        } else {\n          if (f) {\n            value += f.outerHTML;\n            f = null;\n          }\n          value += n.outerHTML;\n        }\n      }\n      if (f) value += f.outerHTML;\n      return _d.createRange().createContextualFragment(value);\n    },\n    _convertListCell: function (domTree) {\n      let html = '';\n      for (let i = 0, len = domTree.length, node; i < len; i++) {\n        node = domTree[i];\n        if (node.nodeType === 1) {\n          if (util.isList(node)) {\n            html += node.innerHTML;\n          } else if (util.isListCell(node)) {\n            html += node.outerHTML;\n          } else if (util.isFormatElement(node)) {\n            html += '<li>' + (node.innerHTML.trim() || '<br>') + '</li>';\n          } else if (util.isRangeFormatElement(node) && !util.isTable(node)) {\n            html += this._convertListCell(node);\n          } else {\n            html += '<li>' + node.outerHTML + '</li>';\n          }\n        } else {\n          html += '<li>' + (node.textContent || '<br>') + '</li>';\n        }\n      }\n      return html;\n    },\n    _isFormatData: function (domTree) {\n      let requireFormat = false;\n      for (let i = 0, len = domTree.length, t; i < len; i++) {\n        t = domTree[i];\n        if (t.nodeType === 1 && !util.isTextStyleElement(t) && !util.isBreak(t) && !this.__disallowedTagNameRegExp.test(t.nodeName)) {\n          requireFormat = true;\n          break;\n        }\n      }\n      return requireFormat;\n    },\n    /**\r\n     * @description Gets the clean HTML code for editor\r\n     * @param {String} html HTML string\r\n     * @param {String|RegExp|null} whitelist Regular expression of allowed tags.\r\n     * RegExp object is create by util.createTagsWhitelist method. (core.pasteTagsWhitelistRegExp)\r\n     * @param {String|RegExp|null} blacklist Regular expression of disallowed tags.\r\n     * RegExp object is create by util.createTagsBlacklist method. (core.pasteTagsBlacklistRegExp)\r\n     * @returns {String}\r\n     */\n    cleanHTML: function (html, whitelist, blacklist) {\n      html = this._deleteDisallowedTags(this._parser.parseFromString(util.htmlCompress(html), 'text/html').body.innerHTML).replace(/(<[a-zA-Z0-9\\-]+)[^>]*(?=>)/g, this._cleanTags.bind(this, true)).replace(/<br\\/?>$/i, '');\n      const dom = _d.createRange().createContextualFragment(html);\n      try {\n        util._consistencyCheckOfHTML(dom, this._htmlCheckWhitelistRegExp, this._htmlCheckBlacklistRegExp, this._classNameFilter);\n      } catch (error) {\n        console.warn('[SUNEDITOR.cleanHTML.consistencyCheck.fail] ' + error);\n      }\n      if (this.managedTagsInfo && this.managedTagsInfo.query) {\n        const textCompList = dom.querySelectorAll(this.managedTagsInfo.query);\n        for (let i = 0, len = textCompList.length, initMethod, classList; i < len; i++) {\n          classList = [].slice.call(textCompList[i].classList);\n          for (let c = 0, cLen = classList.length; c < cLen; c++) {\n            initMethod = this.managedTagsInfo.map[classList[c]];\n            if (initMethod) {\n              initMethod(textCompList[i]);\n              break;\n            }\n          }\n        }\n      }\n      let domTree = dom.childNodes;\n      let cleanHTML = '';\n      const requireFormat = this._isFormatData(domTree);\n      if (requireFormat) {\n        domTree = this._editFormat(dom).childNodes;\n      }\n      for (let i = 0, len = domTree.length, t; i < len; i++) {\n        t = domTree[i];\n        if (this.__allowedScriptRegExp.test(t.nodeName)) {\n          cleanHTML += t.outerHTML;\n          continue;\n        }\n        cleanHTML += this._makeLine(t, requireFormat);\n      }\n      cleanHTML = util.htmlRemoveWhiteSpace(cleanHTML);\n      if (!cleanHTML) {\n        cleanHTML = html;\n      } else {\n        if (whitelist) cleanHTML = cleanHTML.replace(typeof whitelist === 'string' ? util.createTagsWhitelist(whitelist) : whitelist, '');\n        if (blacklist) cleanHTML = cleanHTML.replace(typeof blacklist === 'string' ? util.createTagsBlacklist(blacklist) : blacklist, '');\n      }\n      return this._tagConvertor(cleanHTML);\n    },\n    /**\r\n     * @description Converts contents into a format that can be placed in an editor\r\n     * @param {String} contents contents\r\n     * @returns {String}\r\n     */\n    convertContentsForEditor: function (contents) {\n      contents = this._deleteDisallowedTags(this._parser.parseFromString(util.htmlCompress(contents), 'text/html').body.innerHTML).replace(/(<[a-zA-Z0-9\\-]+)[^>]*(?=>)/g, this._cleanTags.bind(this, true));\n      const dom = _d.createRange().createContextualFragment(contents);\n      try {\n        util._consistencyCheckOfHTML(dom, this._htmlCheckWhitelistRegExp, this._htmlCheckBlacklistRegExp, this._classNameFilter);\n      } catch (error) {\n        console.warn('[SUNEDITOR.convertContentsForEditor.consistencyCheck.fail] ' + error);\n      }\n      if (this.managedTagsInfo && this.managedTagsInfo.query) {\n        const textCompList = dom.querySelectorAll(this.managedTagsInfo.query);\n        for (let i = 0, len = textCompList.length, initMethod, classList; i < len; i++) {\n          classList = [].slice.call(textCompList[i].classList);\n          for (let c = 0, cLen = classList.length; c < cLen; c++) {\n            initMethod = this.managedTagsInfo.map[classList[c]];\n            if (initMethod) {\n              initMethod(textCompList[i]);\n              break;\n            }\n          }\n        }\n      }\n      const domTree = dom.childNodes;\n      let cleanHTML = '',\n        p = null;\n      for (let i = 0, t; i < domTree.length; i++) {\n        t = domTree[i];\n        if (this.__allowedScriptRegExp.test(t.nodeName)) {\n          cleanHTML += t.outerHTML;\n          continue;\n        }\n        if (!util.isFormatElement(t) && !util.isRangeFormatElement(t) && !util.isComponent(t) && !util.isMedia(t) && t.nodeType !== 8 && !/__se__tag/.test(t.className)) {\n          if (!p) p = util.createElement(options.defaultTag);\n          p.appendChild(t);\n          i--;\n          if (domTree[i + 1] && !util.isFormatElement(domTree[i + 1])) {\n            continue;\n          } else {\n            t = p;\n            p = null;\n          }\n        }\n        if (p) {\n          cleanHTML += this._makeLine(p, true);\n          p = null;\n        }\n        cleanHTML += this._makeLine(t, true);\n      }\n      if (p) cleanHTML += this._makeLine(p, true);\n      if (cleanHTML.length === 0) return '<' + options.defaultTag + '><br></' + options.defaultTag + '>';\n      cleanHTML = util.htmlRemoveWhiteSpace(cleanHTML);\n      return this._tagConvertor(cleanHTML);\n    },\n    /**\r\n     * @description Converts wysiwyg area element into a format that can be placed in an editor of code view mode\r\n     * @param {Element|String} html WYSIWYG element (context.element.wysiwyg) or HTML string.\r\n     * @param {Boolean} comp If true, does not line break and indentation of tags.\r\n     * @returns {String}\r\n     */\n    convertHTMLForCodeView: function (html, comp) {\n      let returnHTML = '';\n      const wRegExp = _w.RegExp;\n      const brReg = new wRegExp('^(BLOCKQUOTE|PRE|TABLE|THEAD|TBODY|TR|TH|TD|OL|UL|IMG|IFRAME|VIDEO|AUDIO|FIGURE|FIGCAPTION|HR|BR|CANVAS|SELECT)$', 'i');\n      const wDoc = typeof html === 'string' ? _d.createRange().createContextualFragment(html) : html;\n      const isFormat = function (current) {\n        return this.isFormatElement(current) || this.isComponent(current);\n      }.bind(util);\n      const brChar = comp ? '' : '\\n';\n      let indentSize = comp ? 0 : this._variable.codeIndent * 1;\n      indentSize = indentSize > 0 ? new _w.Array(indentSize + 1).join(' ') : '';\n      (function recursionFunc(element, indent) {\n        const children = element.childNodes;\n        const elementRegTest = brReg.test(element.nodeName);\n        const elementIndent = elementRegTest ? indent : '';\n        for (let i = 0, len = children.length, node, br, lineBR, nodeRegTest, tag, tagIndent; i < len; i++) {\n          node = children[i];\n          nodeRegTest = brReg.test(node.nodeName);\n          br = nodeRegTest ? brChar : '';\n          lineBR = isFormat(node) && !elementRegTest && !/^(TH|TD)$/i.test(element.nodeName) ? brChar : '';\n          if (node.nodeType === 8) {\n            returnHTML += '\\n<!-- ' + node.textContent.trim() + ' -->' + br;\n            continue;\n          }\n          if (node.nodeType === 3) {\n            if (!util.isList(node.parentElement)) returnHTML += util._HTMLConvertor(/^\\n+$/.test(node.data) ? '' : node.data);\n            continue;\n          }\n          if (node.childNodes.length === 0) {\n            returnHTML += (/^HR$/i.test(node.nodeName) ? brChar : '') + (/^PRE$/i.test(node.parentElement.nodeName) && /^BR$/i.test(node.nodeName) ? '' : elementIndent) + node.outerHTML + br;\n            continue;\n          }\n          if (!node.outerHTML) {\n            // IE\n            returnHTML += new _w.XMLSerializer().serializeToString(node);\n          } else {\n            tag = node.nodeName.toLowerCase();\n            tagIndent = elementIndent || nodeRegTest ? indent : '';\n            returnHTML += (lineBR || (elementRegTest ? '' : br)) + tagIndent + node.outerHTML.match(wRegExp('<' + tag + '[^>]*>', 'i'))[0] + br;\n            recursionFunc(node, indent + indentSize, '');\n            returnHTML += (/\\n$/.test(returnHTML) ? tagIndent : '') + '</' + tag + '>' + (lineBR || br || elementRegTest ? brChar : '' || /^(TH|TD)$/i.test(node.nodeName) ? brChar : '');\n          }\n        }\n      })(wDoc, '');\n      return returnHTML.trim() + brChar;\n    },\n    /**\r\n     * @description Add an event to document.\r\n     * When created as an Iframe, the same event is added to the document in the Iframe.\r\n     * @param {String} type Event type\r\n     * @param {Function} listener Event listener\r\n     * @param {Boolean} useCapture Use event capture\r\n     */\n    addDocEvent: function (type, listener, useCapture) {\n      _d.addEventListener(type, listener, useCapture);\n      if (options.iframe) {\n        this._wd.addEventListener(type, listener);\n      }\n    },\n    /**\r\n     * @description Remove events from document.\r\n     * When created as an Iframe, the event of the document inside the Iframe is also removed.\r\n     * @param {String} type Event type\r\n     * @param {Function} listener Event listener\r\n     */\n    removeDocEvent: function (type, listener) {\n      _d.removeEventListener(type, listener);\n      if (options.iframe) {\n        this._wd.removeEventListener(type, listener);\n      }\n    },\n    /**\r\n     * @description The current number of characters is counted and displayed.\r\n     * @param {String} inputText Text added.\r\n     * @returns {Boolean}\r\n     * @private\r\n     */\n    _charCount: function (inputText) {\n      const maxCharCount = options.maxCharCount;\n      const countType = options.charCounterType;\n      let nextCharCount = 0;\n      if (!!inputText) nextCharCount = this.getCharLength(inputText, countType);\n      this._setCharCount();\n      if (maxCharCount > 0) {\n        let over = false;\n        const count = functions.getCharCount(countType);\n        if (count > maxCharCount) {\n          over = true;\n          if (nextCharCount > 0) {\n            this._editorRange();\n            const range = this.getRange();\n            const endOff = range.endOffset - 1;\n            const text = this.getSelectionNode().textContent;\n            const slicePosition = range.endOffset - (count - maxCharCount);\n            this.getSelectionNode().textContent = text.slice(0, slicePosition < 0 ? 0 : slicePosition) + text.slice(range.endOffset, text.length);\n            this.setRange(range.endContainer, endOff, range.endContainer, endOff);\n          }\n        } else if (count + nextCharCount > maxCharCount) {\n          over = true;\n        }\n        if (over) {\n          this._callCounterBlink();\n          if (nextCharCount > 0) return false;\n        }\n      }\n      return true;\n    },\n    /**\r\n     * @description When \"element\" is added, if it is greater than \"options.maxCharCount\", false is returned.\r\n     * @param {Node|String} element Element node or String.\r\n     * @param {String|null} charCounterType charCounterType. If it is null, the options.charCounterType\r\n     * @returns {Boolean}\r\n     */\n    checkCharCount: function (element, charCounterType) {\n      if (options.maxCharCount) {\n        const countType = charCounterType || options.charCounterType;\n        const length = this.getCharLength(typeof element === 'string' ? element : this._charTypeHTML && element.nodeType === 1 ? element.outerHTML : element.textContent, countType);\n        if (length > 0 && length + functions.getCharCount(countType) > options.maxCharCount) {\n          this._callCounterBlink();\n          return false;\n        }\n      }\n      return true;\n    },\n    /**\r\n     * @description Get the length of the content.\r\n     * Depending on the option, the length of the character is taken. (charCounterType)\r\n     * @param {String} content Content to count\r\n     * @param {String} charCounterType options.charCounterType\r\n     * @returns {Number}\r\n     */\n    getCharLength: function (content, charCounterType) {\n      return /byte/.test(charCounterType) ? util.getByteLength(content) : content.length;\n    },\n    /**\r\n     * @description Reset buttons of the responsive toolbar.\r\n     */\n    resetResponsiveToolbar: function () {\n      core.controllersOff();\n      const responsiveSize = event._responsiveButtonSize;\n      if (responsiveSize) {\n        let w = 0;\n        if ((core._isBalloon || core._isInline) && options.toolbarWidth === 'auto') {\n          w = context.element.topArea.offsetWidth;\n        } else {\n          w = context.element.toolbar.offsetWidth;\n        }\n        let responsiveWidth = 'default';\n        for (let i = 1, len = responsiveSize.length; i < len; i++) {\n          if (w < responsiveSize[i]) {\n            responsiveWidth = responsiveSize[i] + '';\n            break;\n          }\n        }\n        if (event._responsiveCurrentSize !== responsiveWidth) {\n          event._responsiveCurrentSize = responsiveWidth;\n          functions.setToolbarButtons(event._responsiveButtons[responsiveWidth]);\n        }\n      }\n    },\n    /**\r\n     * @description Set the char count to charCounter element textContent.\r\n     * @private\r\n     */\n    _setCharCount: function () {\n      if (context.element.charCounter) {\n        _w.setTimeout(function () {\n          context.element.charCounter.textContent = functions.getCharCount(options.charCounterType);\n        });\n      }\n    },\n    /**\r\n     * @description The character counter blinks.\r\n     * @private\r\n     */\n    _callCounterBlink: function () {\n      const charWrapper = context.element.charWrapper;\n      if (charWrapper && !util.hasClass(charWrapper, 'se-blink')) {\n        util.addClass(charWrapper, 'se-blink');\n        _w.setTimeout(function () {\n          util.removeClass(charWrapper, 'se-blink');\n        }, 600);\n      }\n    },\n    /**\r\n     * @description Check the components such as image and video and modify them according to the format.\r\n     * @private\r\n     */\n    _checkComponents: function () {\n      for (let i = 0, len = this._fileInfoPluginsCheck.length; i < len; i++) {\n        this._fileInfoPluginsCheck[i]();\n      }\n    },\n    /**\r\n     * @description Initialize the information of the components.\r\n     * @private\r\n     */\n    _resetComponents: function () {\n      for (let i = 0, len = this._fileInfoPluginsReset.length; i < len; i++) {\n        this._fileInfoPluginsReset[i]();\n      }\n    },\n    /**\r\n     * @description Set method in the code view area\r\n     * @param {String} value HTML string\r\n     * @private\r\n     */\n    _setCodeView: function (value) {\n      if (options.codeMirrorEditor) {\n        options.codeMirrorEditor.getDoc().setValue(value);\n      } else {\n        context.element.code.value = value;\n      }\n    },\n    /**\r\n     * @description Get method in the code view area\r\n     * @private\r\n     */\n    _getCodeView: function () {\n      return options.codeMirrorEditor ? options.codeMirrorEditor.getDoc().getValue() : context.element.code.value;\n    },\n    /**\r\n     * @description remove class, display text.\r\n     * @param {Array|null} ignoredList Igonred button list\r\n     */\n    _setKeyEffect: function (ignoredList) {\n      const commandMap = this.commandMap;\n      const activePlugins = this.activePlugins;\n      for (let key in commandMap) {\n        if (ignoredList.indexOf(key) > -1 || !util.hasOwn(commandMap, key)) continue;\n        if (activePlugins.indexOf(key) > -1) {\n          plugins[key].active.call(this, null);\n        } else if (commandMap.OUTDENT && /^OUTDENT$/i.test(key)) {\n          if (!util.isImportantDisabled(commandMap.OUTDENT)) commandMap.OUTDENT.setAttribute('disabled', true);\n        } else if (commandMap.INDENT && /^INDENT$/i.test(key)) {\n          if (!util.isImportantDisabled(commandMap.INDENT)) commandMap.INDENT.removeAttribute('disabled');\n        } else {\n          util.removeClass(commandMap[key], 'active');\n        }\n      }\n    },\n    /**\r\n     * @description Initializ core variable\r\n     * @param {Boolean} reload Is relooad?\r\n     * @param {String} _initHTML initial html string\r\n     * @private\r\n     */\n    _init: function (reload, _initHTML) {\n      const wRegExp = _w.RegExp;\n      this._ww = options.iframe ? context.element.wysiwygFrame.contentWindow : _w;\n      this._wd = _d;\n      this._charTypeHTML = options.charCounterType === 'byte-html';\n      this.wwComputedStyle = _w.getComputedStyle(context.element.wysiwyg);\n      this._editorHeight = context.element.wysiwygFrame.offsetHeight;\n      this._editorHeightPadding = util.getNumber(this.wwComputedStyle.getPropertyValue('padding-top')) + util.getNumber(this.wwComputedStyle.getPropertyValue('padding-bottom'));\n      this._classNameFilter = function (v) {\n        return this.test(v) ? v : '';\n      }.bind(options.allowedClassNames);\n      const sPrefix = options.__allowedScriptTag ? '' : 'script|';\n      this.__scriptTagRegExp = new wRegExp('<(script)[^>]*>([\\\\s\\\\S]*?)<\\\\/\\\\1>|<script[^>]*\\\\/?>', 'gi');\n      this.__disallowedTagsRegExp = new wRegExp('<(' + sPrefix + 'style)[^>]*>([\\\\s\\\\S]*?)<\\\\/\\\\1>|<(' + sPrefix + 'style)[^>]*\\\\/?>', 'gi');\n      this.__disallowedTagNameRegExp = new wRegExp('^(' + sPrefix + 'meta|link|style|[a-z]+\\:[a-z]+)$', 'i');\n      this.__allowedScriptRegExp = new wRegExp('^' + (options.__allowedScriptTag ? 'script' : '') + '$', 'i');\n      if (!options.iframe && typeof _w.ShadowRoot === 'function') {\n        let child = context.element.wysiwygFrame;\n        while (child) {\n          if (child.shadowRoot) {\n            this._shadowRoot = child.shadowRoot;\n            break;\n          } else if (child instanceof _w.ShadowRoot) {\n            this._shadowRoot = child;\n            break;\n          }\n          child = child.parentNode;\n        }\n        if (this._shadowRoot) this._shadowRootControllerEventTarget = [];\n      }\n\n      // set disallow text nodes\n      const disallowTextTags = _w.Object.keys(options._textTagsMap);\n      const allowTextTags = !options.addTagsWhitelist ? [] : options.addTagsWhitelist.split('|').filter(function (v) {\n        return /b|i|ins|s|strike/i.test(v);\n      });\n      for (let i = 0; i < allowTextTags.length; i++) {\n        disallowTextTags.splice(disallowTextTags.indexOf(allowTextTags[i].toLowerCase()), 1);\n      }\n      this._disallowedTextTagsRegExp = disallowTextTags.length === 0 ? null : new wRegExp('(<\\\\/?)(' + disallowTextTags.join('|') + ')\\\\b\\\\s*([^>^<]+)?\\\\s*(?=>)', 'gi');\n\n      // set whitelist\n      const getRegList = function (str, str2) {\n        return !str ? '^' : str === '*' ? '[a-z-]+' : !str2 ? str : str + '|' + str2;\n      };\n      // tags\n      const defaultAttr = 'contenteditable|colspan|rowspan|target|href|download|rel|src|alt|class|type|controls|origin-size';\n      const dataAttr = 'data-format|data-size|data-file-size|data-file-name|data-origin|data-align|data-image-link|data-rotate|data-proportion|data-percentage|data-exp|data-font-size';\n      this._allowHTMLComments = options._editorTagsWhitelist.indexOf('//') > -1 || options._editorTagsWhitelist === '*';\n      // html check\n      this._htmlCheckWhitelistRegExp = new wRegExp('^(' + getRegList(options._editorTagsWhitelist.replace('|//', ''), '') + ')$', 'i');\n      this._htmlCheckBlacklistRegExp = new wRegExp('^(' + (options.tagsBlacklist || '^') + ')$', 'i');\n      // tags\n      this.editorTagsWhitelistRegExp = util.createTagsWhitelist(getRegList(options._editorTagsWhitelist.replace('|//', '|<!--|-->'), ''));\n      this.editorTagsBlacklistRegExp = util.createTagsBlacklist(options.tagsBlacklist.replace('|//', '|<!--|-->'));\n      // paste tags\n      this.pasteTagsWhitelistRegExp = util.createTagsWhitelist(getRegList(options.pasteTagsWhitelist, ''));\n      this.pasteTagsBlacklistRegExp = util.createTagsBlacklist(options.pasteTagsBlacklist);\n      // attributes\n      const regEndStr = '\\\\s*=\\\\s*(\\\")[^\\\"]*\\\\1';\n      const _wAttr = options.attributesWhitelist;\n      let tagsAttr = {};\n      let allAttr = '';\n      if (!!_wAttr) {\n        for (let k in _wAttr) {\n          if (!util.hasOwn(_wAttr, k) || /^on[a-z]+$/i.test(_wAttr[k])) continue;\n          if (k === 'all') {\n            allAttr = getRegList(_wAttr[k], defaultAttr);\n          } else {\n            tagsAttr[k] = new wRegExp('\\\\s(?:' + getRegList(_wAttr[k], '') + ')' + regEndStr, 'ig');\n          }\n        }\n      }\n      this._attributesWhitelistRegExp = new wRegExp('\\\\s(?:' + (allAttr || defaultAttr + '|' + dataAttr) + ')' + regEndStr, 'ig');\n      this._attributesWhitelistRegExp_all_data = new wRegExp('\\\\s(?:' + ((allAttr || defaultAttr) + '|data-[a-z0-9\\\\-]+') + ')' + regEndStr, 'ig');\n      this._attributesTagsWhitelist = tagsAttr;\n\n      // blacklist\n      const _bAttr = options.attributesBlacklist;\n      tagsAttr = {};\n      allAttr = '';\n      if (!!_bAttr) {\n        for (let k in _bAttr) {\n          if (!util.hasOwn(_bAttr, k)) continue;\n          if (k === 'all') {\n            allAttr = getRegList(_bAttr[k], '');\n          } else {\n            tagsAttr[k] = new wRegExp('\\\\s(?:' + getRegList(_bAttr[k], '') + ')' + regEndStr, 'ig');\n          }\n        }\n      }\n      this._attributesBlacklistRegExp = new wRegExp('\\\\s(?:' + (allAttr || '^') + ')' + regEndStr, 'ig');\n      this._attributesTagsBlacklist = tagsAttr;\n\n      // set modes\n      this._isInline = /inline/i.test(options.mode);\n      this._isBalloon = /balloon|balloon-always/i.test(options.mode);\n      this._isBalloonAlways = /balloon-always/i.test(options.mode);\n\n      // caching buttons\n      this._cachingButtons();\n\n      // file components\n      this._fileInfoPluginsCheck = [];\n      this._fileInfoPluginsReset = [];\n\n      // text components\n      this.managedTagsInfo = {\n        query: '',\n        map: {}\n      };\n      const managedClass = [];\n\n      // Command and file plugins registration\n      this.activePlugins = [];\n      this._fileManager.tags = [];\n      this._fileManager.pluginMap = {};\n      let filePluginRegExp = [];\n      let plugin, button;\n      for (let key in plugins) {\n        if (!util.hasOwn(plugins, key)) continue;\n        plugin = plugins[key];\n        button = pluginCallButtons[key];\n        if ((plugin.active || plugin.action) && button) {\n          this.callPlugin(key, null, button);\n        }\n        if (typeof plugin.checkFileInfo === 'function' && typeof plugin.resetFileInfo === 'function') {\n          this.callPlugin(key, null, button);\n          this._fileInfoPluginsCheck.push(plugin.checkFileInfo.bind(this));\n          this._fileInfoPluginsReset.push(plugin.resetFileInfo.bind(this));\n        }\n        if (_w.Array.isArray(plugin.fileTags)) {\n          const fileTags = plugin.fileTags;\n          this.callPlugin(key, null, button);\n          this._fileManager.tags = this._fileManager.tags.concat(fileTags);\n          filePluginRegExp.push(key);\n          for (let tag = 0, tLen = fileTags.length; tag < tLen; tag++) {\n            this._fileManager.pluginMap[fileTags[tag].toLowerCase()] = key;\n          }\n        }\n        if (plugin.managedTags) {\n          const info = plugin.managedTags();\n          managedClass.push('.' + info.className);\n          this.managedTagsInfo.map[info.className] = info.method.bind(this);\n        }\n      }\n      this.managedTagsInfo.query = managedClass.toString();\n      this._fileManager.queryString = this._fileManager.tags.join(',');\n      this._fileManager.regExp = new wRegExp('^(' + (this._fileManager.tags.join('|') || '^') + ')$', 'i');\n      this._fileManager.pluginRegExp = new wRegExp('^(' + (filePluginRegExp.length === 0 ? '^' : filePluginRegExp.join('|')) + ')$', 'i');\n\n      // cache editor's element\n      this._variable._originCssText = context.element.topArea.style.cssText;\n      this._placeholder = context.element.placeholder;\n      this._lineBreaker = context.element.lineBreaker;\n      this._lineBreakerButton = this._lineBreaker.querySelector('button');\n\n      // Excute history function\n      this.history = _history(this, this._onChange_historyStack.bind(this));\n\n      // register notice module\n      this.addModule([_notice]);\n\n      // Init, validate\n      if (options.iframe) {\n        this._wd = context.element.wysiwygFrame.contentDocument;\n        context.element.wysiwyg = this._wd.body;\n        if (options._editorStyles.editor) context.element.wysiwyg.style.cssText = options._editorStyles.editor;\n        if (options.height === 'auto') this._iframeAuto = this._wd.body;\n      }\n      this._initWysiwygArea(reload, _initHTML);\n    },\n    /**\r\n     * @description Caching basic buttons to use\r\n     * @private\r\n     */\n    _cachingButtons: function () {\n      this.codeViewDisabledButtons = context.element._buttonTray.querySelectorAll('.se-menu-list button[data-display]:not([class~=\"se-code-view-enabled\"]):not([data-display=\"MORE\"])');\n      this.resizingDisabledButtons = context.element._buttonTray.querySelectorAll('.se-menu-list button[data-display]:not([class~=\"se-resizing-enabled\"]):not([data-display=\"MORE\"])');\n      const tool = context.tool;\n      const commandMap = this.commandMap;\n      commandMap.INDENT = tool.indent;\n      commandMap.OUTDENT = tool.outdent;\n      commandMap[options.textTags.bold.toUpperCase()] = tool.bold;\n      commandMap[options.textTags.underline.toUpperCase()] = tool.underline;\n      commandMap[options.textTags.italic.toUpperCase()] = tool.italic;\n      commandMap[options.textTags.strike.toUpperCase()] = tool.strike;\n      commandMap[options.textTags.sub.toUpperCase()] = tool.subscript;\n      commandMap[options.textTags.sup.toUpperCase()] = tool.superscript;\n      this._styleCommandMap = {\n        fullScreen: tool.fullScreen,\n        showBlocks: tool.showBlocks,\n        codeView: tool.codeView\n      };\n      this._saveButtonStates();\n    },\n    /**\r\n     * @description Initializ wysiwyg area (Only called from core._init)\r\n     * @param {Boolean} reload Is relooad?\r\n     * @param {String} _initHTML initial html string\r\n     * @private\r\n     */\n    _initWysiwygArea: function (reload, _initHTML) {\n      context.element.wysiwyg.innerHTML = reload ? _initHTML : this.convertContentsForEditor((typeof _initHTML === 'string' ? _initHTML : /^TEXTAREA$/i.test(context.element.originElement.nodeName) ? context.element.originElement.value : context.element.originElement.innerHTML) || '');\n    },\n    /**\r\n     * @description Called when there are changes to tags in the wysiwyg region.\r\n     * @private\r\n     */\n    _resourcesStateChange: function () {\n      this._iframeAutoHeight();\n      this._checkPlaceholder();\n    },\n    /**\r\n     * @description Called when after execute \"history.push\"\r\n     * @private\r\n     */\n    _onChange_historyStack: function () {\n      if (this.hasFocus) event._applyTagEffects();\n      this._variable.isChanged = true;\n      if (context.tool.save) context.tool.save.removeAttribute('disabled');\n      // user event\n      if (functions.onChange) functions.onChange(this.getContents(true), this);\n      if (context.element.toolbar.style.display === 'block') event._showToolbarBalloon();\n    },\n    /**\r\n     * @description Modify the height value of the iframe when the height of the iframe is automatic.\r\n     * @private\r\n     */\n    _iframeAutoHeight: function () {\n      if (this._iframeAuto) {\n        _w.setTimeout(function () {\n          const h = core._iframeAuto.offsetHeight;\n          context.element.wysiwygFrame.style.height = h + 'px';\n          if (!util.isResizeObserverSupported) core.__callResizeFunction(h, null);\n        });\n      } else if (!util.isResizeObserverSupported) {\n        core.__callResizeFunction(context.element.wysiwygFrame.offsetHeight, null);\n      }\n    },\n    __callResizeFunction: function (h, resizeObserverEntry) {\n      h = h === -1 ? resizeObserverEntry.borderBoxSize && resizeObserverEntry.borderBoxSize[0] ? resizeObserverEntry.borderBoxSize[0].blockSize : resizeObserverEntry.contentRect.height + this._editorHeightPadding : h;\n      if (this._editorHeight !== h) {\n        if (typeof functions.onResizeEditor === 'function') functions.onResizeEditor(h, this._editorHeight, core, resizeObserverEntry);\n        this._editorHeight = h;\n      }\n    },\n    /**\r\n     * @description Set display property when there is placeholder.\r\n     * @private\r\n     */\n    _checkPlaceholder: function () {\n      if (this._placeholder) {\n        if (this._variable.isCodeView) {\n          this._placeholder.style.display = 'none';\n          return;\n        }\n        const wysiwyg = context.element.wysiwyg;\n        if (!util.onlyZeroWidthSpace(wysiwyg.textContent) || wysiwyg.querySelector(util._allowedEmptyNodeList) || (wysiwyg.innerText.match(/\\n/g) || '').length > 1) {\n          this._placeholder.style.display = 'none';\n        } else {\n          this._placeholder.style.display = 'block';\n        }\n      }\n    },\n    /**\r\n     * @description If there is no default format, add a format and move \"selection\".\r\n     * @param {String|null} formatName Format tag name (default: 'P')\r\n     * @returns {undefined|null}\r\n     * @private\r\n     */\n    _setDefaultFormat: function (formatName) {\n      if (this._fileManager.pluginRegExp.test(this.currentControllerName)) return;\n      const range = this.getRange();\n      const commonCon = range.commonAncestorContainer;\n      const startCon = range.startContainer;\n      const rangeEl = util.getRangeFormatElement(commonCon, null);\n      let focusNode, offset, format;\n      const fileComponent = util.getParentElement(commonCon, util.isComponent);\n      if (fileComponent && !util.isTable(fileComponent)) {\n        return;\n      } else if (commonCon.nodeType === 1 && commonCon.getAttribute('data-se-embed') === 'true') {\n        let el = commonCon.nextElementSibling;\n        if (!util.isFormatElement(el)) el = this.appendFormatTag(commonCon, options.defaultTag);\n        this.setRange(el.firstChild, 0, el.firstChild, 0);\n        return;\n      }\n      if ((util.isRangeFormatElement(startCon) || util.isWysiwygDiv(startCon)) && (util.isComponent(startCon.children[range.startOffset]) || util.isComponent(startCon.children[range.startOffset - 1]))) return;\n      if (util.getParentElement(commonCon, util.isNotCheckingNode)) return null;\n      if (rangeEl) {\n        format = util.createElement(formatName || options.defaultTag);\n        format.innerHTML = rangeEl.innerHTML;\n        if (format.childNodes.length === 0) format.innerHTML = util.zeroWidthSpace;\n        rangeEl.innerHTML = format.outerHTML;\n        format = rangeEl.firstChild;\n        focusNode = util.getEdgeChildNodes(format, null).sc;\n        if (!focusNode) {\n          focusNode = util.createTextNode(util.zeroWidthSpace);\n          format.insertBefore(focusNode, format.firstChild);\n        }\n        offset = focusNode.textContent.length;\n        this.setRange(focusNode, offset, focusNode, offset);\n        return;\n      }\n      if (util.isRangeFormatElement(commonCon) && commonCon.childNodes.length <= 1) {\n        let br = null;\n        if (commonCon.childNodes.length === 1 && util.isBreak(commonCon.firstChild)) {\n          br = commonCon.firstChild;\n        } else {\n          br = util.createTextNode(util.zeroWidthSpace);\n          commonCon.appendChild(br);\n        }\n        this.setRange(br, 1, br, 1);\n        return;\n      }\n      this.execCommand('formatBlock', false, formatName || options.defaultTag);\n      focusNode = util.getEdgeChildNodes(commonCon, commonCon);\n      focusNode = focusNode ? focusNode.ec : commonCon;\n      format = util.getFormatElement(focusNode, null);\n      if (!format) {\n        this.removeRange();\n        this._editorRange();\n        return;\n      }\n      if (util.isBreak(format.nextSibling)) util.removeItem(format.nextSibling);\n      if (util.isBreak(format.previousSibling)) util.removeItem(format.previousSibling);\n      if (util.isBreak(focusNode)) {\n        const zeroWidth = util.createTextNode(util.zeroWidthSpace);\n        focusNode.parentNode.insertBefore(zeroWidth, focusNode);\n        focusNode = zeroWidth;\n      }\n      this.effectNode = null;\n      this.nativeFocus();\n    },\n    /**\r\n     * @description Initialization after \"setOptions\"\r\n     * @param {Object} el context.element\r\n     * @param {String} _initHTML Initial html string\r\n     * @private\r\n     */\n    _setOptionsInit: function (el, _initHTML) {\n      this.context = context = _Context(el.originElement, this._getConstructed(el), options);\n      this._componentsInfoReset = true;\n      this._editorInit(true, _initHTML);\n    },\n    /**\r\n     * @description Initializ editor\r\n     * @param {Boolean} reload Is relooad?\r\n     * @param {String} _initHTML initial html string\r\n     * @private\r\n     */\n    _editorInit: function (reload, _initHTML) {\n      // initialize core and add event listeners\n      this._init(reload, _initHTML);\n      event._addEvent();\n      this._setCharCount();\n      event._offStickyToolbar();\n      event.onResize_window();\n\n      // toolbar visibility\n      context.element.toolbar.style.visibility = '';\n      // wisywig attributes\n      const attr = options.frameAttrbutes;\n      for (let k in attr) {\n        context.element.wysiwyg.setAttribute(k, attr[k]);\n      }\n      this._checkComponents();\n      this._componentsInfoInit = false;\n      this._componentsInfoReset = false;\n      this.history.reset(true);\n      _w.setTimeout(function () {\n        if (typeof core._resourcesStateChange !== 'function') return;\n\n        // observer\n        if (event._resizeObserver) event._resizeObserver.observe(context.element.wysiwygFrame);\n        if (event._toolbarObserver) event._toolbarObserver.observe(context.element._toolbarShadow);\n        // resource state\n        core._resourcesStateChange();\n        // user event\n        if (typeof functions.onload === 'function') functions.onload(core, reload);\n      });\n    },\n    /**\r\n     * @description Create and return an object to cache the new context.\r\n     * @param {Element} contextEl context.element\r\n     * @returns {Object}\r\n     * @private\r\n     */\n    _getConstructed: function (contextEl) {\n      return {\n        _top: contextEl.topArea,\n        _relative: contextEl.relative,\n        _toolBar: contextEl.toolbar,\n        _toolbarShadow: contextEl._toolbarShadow,\n        _menuTray: contextEl._menuTray,\n        _editorArea: contextEl.editorArea,\n        _wysiwygArea: contextEl.wysiwygFrame,\n        _codeArea: contextEl.code,\n        _placeholder: contextEl.placeholder,\n        _resizingBar: contextEl.resizingBar,\n        _navigation: contextEl.navigation,\n        _charCounter: contextEl.charCounter,\n        _charWrapper: contextEl.charWrapper,\n        _loading: contextEl.loading,\n        _lineBreaker: contextEl.lineBreaker,\n        _lineBreaker_t: contextEl.lineBreaker_t,\n        _lineBreaker_b: contextEl.lineBreaker_b,\n        _resizeBack: contextEl.resizeBackground,\n        _stickyDummy: contextEl._stickyDummy,\n        _arrow: contextEl._arrow\n      };\n    }\n  };\n\n  /**\r\n   * @description event function\r\n   */\n  const event = {\n    _IEisComposing: false,\n    // In IE, there is no \"e.isComposing\" in the key-up event.\n    _lineBreakerBind: null,\n    _responsiveCurrentSize: 'default',\n    _responsiveButtonSize: null,\n    _responsiveButtons: null,\n    _cursorMoveKeyCode: new _w.RegExp('^(8|3[2-9]|40|46)$'),\n    _directionKeyCode: new _w.RegExp('^(8|13|3[2-9]|40|46)$'),\n    _nonTextKeyCode: new _w.RegExp('^(8|13|1[6-9]|20|27|3[3-9]|40|45|46|11[2-9]|12[0-3]|144|145)$'),\n    _historyIgnoreKeyCode: new _w.RegExp('^(1[6-9]|20|27|3[3-9]|40|45|11[2-9]|12[0-3]|144|145)$'),\n    _onButtonsCheck: new _w.RegExp('^(' + _w.Object.keys(options._textTagsMap).join('|') + ')$', 'i'),\n    _frontZeroWidthReg: new _w.RegExp(util.zeroWidthSpace + '+', ''),\n    _keyCodeShortcut: {\n      65: 'A',\n      66: 'B',\n      83: 'S',\n      85: 'U',\n      73: 'I',\n      89: 'Y',\n      90: 'Z',\n      219: '[',\n      221: ']'\n    },\n    _shortcutCommand: function (keyCode, shift) {\n      let command = null;\n      const keyStr = event._keyCodeShortcut[keyCode];\n      switch (keyStr) {\n        case 'A':\n          command = 'selectAll';\n          break;\n        case 'B':\n          if (options.shortcutsDisable.indexOf('bold') === -1) {\n            command = 'bold';\n          }\n          break;\n        case 'S':\n          if (shift && options.shortcutsDisable.indexOf('strike') === -1) {\n            command = 'strike';\n          } else if (!shift && options.shortcutsDisable.indexOf('save') === -1) {\n            command = 'save';\n          }\n          break;\n        case 'U':\n          if (options.shortcutsDisable.indexOf('underline') === -1) {\n            command = 'underline';\n          }\n          break;\n        case 'I':\n          if (options.shortcutsDisable.indexOf('italic') === -1) {\n            command = 'italic';\n          }\n          break;\n        case 'Z':\n          if (options.shortcutsDisable.indexOf('undo') === -1) {\n            if (shift) {\n              command = 'redo';\n            } else {\n              command = 'undo';\n            }\n          }\n          break;\n        case 'Y':\n          if (options.shortcutsDisable.indexOf('undo') === -1) {\n            command = 'redo';\n          }\n          break;\n        case '[':\n          if (options.shortcutsDisable.indexOf('indent') === -1) {\n            command = options.rtl ? 'indent' : 'outdent';\n          }\n          break;\n        case ']':\n          if (options.shortcutsDisable.indexOf('indent') === -1) {\n            command = options.rtl ? 'outdent' : 'indent';\n          }\n          break;\n      }\n      if (!command) return !!keyStr;\n      core.commandHandler(core.commandMap[command], command);\n      return true;\n    },\n    _applyTagEffects: function () {\n      let selectionNode = core.getSelectionNode();\n      if (selectionNode === core.effectNode) return;\n      core.effectNode = selectionNode;\n      const marginDir = options.rtl ? 'marginRight' : 'marginLeft';\n      const commandMap = core.commandMap;\n      const classOnCheck = event._onButtonsCheck;\n      const commandMapNodes = [];\n      const currentNodes = [];\n      const activePlugins = core.activePlugins;\n      const cLen = activePlugins.length;\n      let nodeName = '';\n      while (selectionNode.firstChild) {\n        selectionNode = selectionNode.firstChild;\n      }\n      for (let element = selectionNode; !util.isWysiwygDiv(element); element = element.parentNode) {\n        if (!element) break;\n        if (element.nodeType !== 1 || util.isBreak(element)) continue;\n        nodeName = element.nodeName.toUpperCase();\n        currentNodes.push(nodeName);\n\n        /* Active plugins */\n        if (!core.isReadOnly) {\n          for (let c = 0, name; c < cLen; c++) {\n            name = activePlugins[c];\n            if (commandMapNodes.indexOf(name) === -1 && plugins[name].active.call(core, element)) {\n              commandMapNodes.push(name);\n            }\n          }\n        }\n        if (util.isFormatElement(element)) {\n          /* Outdent */\n          if (commandMapNodes.indexOf('OUTDENT') === -1 && commandMap.OUTDENT && !util.isImportantDisabled(commandMap.OUTDENT)) {\n            if (util.isListCell(element) || element.style[marginDir] && util.getNumber(element.style[marginDir], 0) > 0) {\n              commandMapNodes.push('OUTDENT');\n              commandMap.OUTDENT.removeAttribute('disabled');\n            }\n          }\n\n          /* Indent */\n          if (commandMapNodes.indexOf('INDENT') === -1 && commandMap.INDENT && !util.isImportantDisabled(commandMap.INDENT)) {\n            commandMapNodes.push('INDENT');\n            if (util.isListCell(element) && !element.previousElementSibling) {\n              commandMap.INDENT.setAttribute('disabled', true);\n            } else {\n              commandMap.INDENT.removeAttribute('disabled');\n            }\n          }\n          continue;\n        }\n\n        /** default active buttons [strong, ins, em, del, sub, sup] */\n        if (classOnCheck && classOnCheck.test(nodeName)) {\n          commandMapNodes.push(nodeName);\n          util.addClass(commandMap[nodeName], 'active');\n        }\n      }\n      core._setKeyEffect(commandMapNodes);\n\n      /** save current nodes */\n      core._variable.currentNodes = currentNodes.reverse();\n      core._variable.currentNodesMap = commandMapNodes;\n\n      /**  Displays the current node structure to resizingBar */\n      if (options.showPathLabel) context.element.navigation.textContent = core._variable.currentNodes.join(' > ');\n    },\n    _buttonsEventHandler: function (e) {\n      let target = e.target;\n      if (core._bindControllersOff) e.stopPropagation();\n      if (/^(input|textarea|select|option)$/i.test(target.nodeName)) {\n        core._antiBlur = false;\n      } else {\n        e.preventDefault();\n      }\n      if (util.getParentElement(target, '.se-submenu')) {\n        e.stopPropagation();\n        core._notHideToolbar = true;\n      } else {\n        let command = target.getAttribute('data-command');\n        let className = target.className;\n        while (!command && !/se-menu-list/.test(className) && !/sun-editor-common/.test(className)) {\n          target = target.parentNode;\n          command = target.getAttribute('data-command');\n          className = target.className;\n        }\n        if (command === core._submenuName || command === core._containerName) {\n          e.stopPropagation();\n        }\n      }\n    },\n    onClick_toolbar: function (e) {\n      let target = e.target;\n      let display = target.getAttribute('data-display');\n      let command = target.getAttribute('data-command');\n      let className = target.className;\n      core.controllersOff();\n      while (target.parentNode && !command && !/se-menu-list/.test(className) && !/se-toolbar/.test(className)) {\n        target = target.parentNode;\n        command = target.getAttribute('data-command');\n        display = target.getAttribute('data-display');\n        className = target.className;\n      }\n      if (!command && !display) return;\n      if (target.disabled) return;\n      core.actionCall(command, display, target);\n    },\n    onMouseDown_wysiwyg: function (e) {\n      if (core.isReadOnly || util.isNonEditable(context.element.wysiwyg)) return;\n      if (util._isExcludeSelectionElement(e.target)) {\n        e.preventDefault();\n        return;\n      }\n      _w.setTimeout(core._editorRange.bind(core));\n\n      // user event\n      if (typeof functions.onMouseDown === 'function' && functions.onMouseDown(e, core) === false) return;\n      const tableCell = util.getParentElement(e.target, util.isCell);\n      if (tableCell) {\n        const tablePlugin = core.plugins.table;\n        if (tablePlugin && tableCell !== tablePlugin._fixedCell && !tablePlugin._shift) {\n          core.callPlugin('table', function () {\n            tablePlugin.onTableCellMultiSelect.call(core, tableCell, false);\n          }, null);\n        }\n      }\n      if (core._isBalloon) {\n        event._hideToolbar();\n      }\n    },\n    onClick_wysiwyg: function (e) {\n      const targetElement = e.target;\n      if (core.isReadOnly) {\n        e.preventDefault();\n        if (util.isAnchor(targetElement)) {\n          _w.open(targetElement.href, targetElement.target);\n        }\n        return false;\n      }\n      if (util.isNonEditable(context.element.wysiwyg)) return;\n\n      // user event\n      if (typeof functions.onClick === 'function' && functions.onClick(e, core) === false) return;\n      const fileComponentInfo = core.getFileComponent(targetElement);\n      if (fileComponentInfo) {\n        e.preventDefault();\n        core.selectComponent(fileComponentInfo.target, fileComponentInfo.pluginName);\n        return;\n      }\n      const figcaption = util.getParentElement(targetElement, 'FIGCAPTION');\n      if (figcaption && util.isNonEditable(figcaption)) {\n        e.preventDefault();\n        figcaption.focus();\n        if (core._isInline && !core._inlineToolbarAttr.isShow) {\n          event._showToolbarInline();\n          const hideToolbar = function () {\n            event._hideToolbar();\n            figcaption.removeEventListener('blur', hideToolbar);\n          };\n          figcaption.addEventListener('blur', hideToolbar);\n        }\n      }\n      core._editorRange();\n      if (e.detail === 3) {\n        let range = core.getRange();\n        if (util.isFormatElement(range.endContainer) && range.endOffset === 0) {\n          range = core.setRange(range.startContainer, range.startOffset, range.startContainer, range.startContainer.length);\n          core._rangeInfo(range, core.getSelection());\n        }\n      }\n      const selectionNode = core.getSelectionNode();\n      const formatEl = util.getFormatElement(selectionNode, null);\n      const rangeEl = util.getRangeFormatElement(selectionNode, null);\n      if (!formatEl && !util.isNonEditable(targetElement) && !util.isList(rangeEl)) {\n        const range = core.getRange();\n        if (util.getFormatElement(range.startContainer) === util.getFormatElement(range.endContainer)) {\n          if (util.isList(rangeEl)) {\n            e.preventDefault();\n            const oLi = util.createElement('LI');\n            const prevLi = selectionNode.nextElementSibling;\n            oLi.appendChild(selectionNode);\n            rangeEl.insertBefore(oLi, prevLi);\n            core.focus();\n          } else if (!util.isWysiwygDiv(selectionNode) && !util.isComponent(selectionNode) && (!util.isTable(selectionNode) || util.isCell(selectionNode)) && core._setDefaultFormat(util.isRangeFormatElement(rangeEl) ? 'DIV' : options.defaultTag) !== null) {\n            e.preventDefault();\n            core.focus();\n          } else {\n            event._applyTagEffects();\n          }\n        }\n      } else {\n        event._applyTagEffects();\n      }\n      if (core._isBalloon) _w.setTimeout(event._toggleToolbarBalloon);\n    },\n    _balloonDelay: null,\n    _showToolbarBalloonDelay: function () {\n      if (event._balloonDelay) {\n        _w.clearTimeout(event._balloonDelay);\n      }\n      event._balloonDelay = _w.setTimeout(function () {\n        _w.clearTimeout(this._balloonDelay);\n        this._balloonDelay = null;\n        this._showToolbarBalloon();\n      }.bind(event), 350);\n    },\n    _toggleToolbarBalloon: function () {\n      core._editorRange();\n      const range = core.getRange();\n      if (core._bindControllersOff || !core._isBalloonAlways && range.collapsed) event._hideToolbar();else event._showToolbarBalloon(range);\n    },\n    _showToolbarBalloon: function (rangeObj) {\n      if (!core._isBalloon) return;\n      const range = rangeObj || core.getRange();\n      const toolbar = context.element.toolbar;\n      const topArea = context.element.topArea;\n      const selection = core.getSelection();\n      let isDirTop;\n      if (core._isBalloonAlways && range.collapsed) {\n        isDirTop = true;\n      } else if (selection.focusNode === selection.anchorNode) {\n        isDirTop = selection.focusOffset < selection.anchorOffset;\n      } else {\n        const childNodes = util.getListChildNodes(range.commonAncestorContainer, null);\n        isDirTop = util.getArrayIndex(childNodes, selection.focusNode) < util.getArrayIndex(childNodes, selection.anchorNode);\n      }\n      let rects = range.getClientRects();\n      rects = rects[isDirTop ? 0 : rects.length - 1];\n      const globalScroll = core.getGlobalScrollOffset();\n      let scrollLeft = globalScroll.left;\n      let scrollTop = globalScroll.top;\n      const editorWidth = topArea.offsetWidth;\n      const offsets = event._getEditorOffsets(null);\n      const stickyTop = offsets.top;\n      const editorLeft = offsets.left;\n      toolbar.style.top = '-10000px';\n      toolbar.style.visibility = 'hidden';\n      toolbar.style.display = 'block';\n      if (!rects) {\n        const node = core.getSelectionNode();\n        if (util.isFormatElement(node)) {\n          const zeroWidth = util.createTextNode(util.zeroWidthSpace);\n          core.insertNode(zeroWidth, null, false);\n          core.setRange(zeroWidth, 1, zeroWidth, 1);\n          core._editorRange();\n          rects = core.getRange().getClientRects();\n          rects = rects[isDirTop ? 0 : rects.length - 1];\n        }\n        if (!rects) {\n          const nodeOffset = util.getOffset(node, context.element.wysiwygFrame);\n          rects = {\n            left: nodeOffset.left,\n            top: nodeOffset.top,\n            right: nodeOffset.left,\n            bottom: nodeOffset.top + node.offsetHeight,\n            noText: true\n          };\n          scrollLeft = 0;\n          scrollTop = 0;\n        }\n        isDirTop = true;\n      }\n      const arrowMargin = _w.Math.round(context.element._arrow.offsetWidth / 2);\n      const toolbarWidth = toolbar.offsetWidth;\n      const toolbarHeight = toolbar.offsetHeight;\n      const iframeRects = /iframe/i.test(context.element.wysiwygFrame.nodeName) ? context.element.wysiwygFrame.getClientRects()[0] : null;\n      if (iframeRects) {\n        rects = {\n          left: rects.left + iframeRects.left,\n          top: rects.top + iframeRects.top,\n          right: rects.right + iframeRects.right - iframeRects.width,\n          bottom: rects.bottom + iframeRects.bottom - iframeRects.height\n        };\n      }\n      event._setToolbarOffset(isDirTop, rects, toolbar, editorLeft, editorWidth, scrollLeft, scrollTop, stickyTop, arrowMargin);\n      if (toolbarWidth !== toolbar.offsetWidth || toolbarHeight !== toolbar.offsetHeight) {\n        event._setToolbarOffset(isDirTop, rects, toolbar, editorLeft, editorWidth, scrollLeft, scrollTop, stickyTop, arrowMargin);\n      }\n      if (options.toolbarContainer) {\n        const editorParent = topArea.parentElement;\n        let container = options.toolbarContainer;\n        let left = container.offsetLeft;\n        let top = container.offsetTop;\n        while (!container.parentElement.contains(editorParent) || !/^(BODY|HTML)$/i.test(container.parentElement.nodeName)) {\n          container = container.offsetParent;\n          left += container.offsetLeft;\n          top += container.offsetTop;\n        }\n        toolbar.style.left = toolbar.offsetLeft - left + topArea.offsetLeft + 'px';\n        toolbar.style.top = toolbar.offsetTop - top + topArea.offsetTop + 'px';\n      }\n      toolbar.style.visibility = '';\n    },\n    _setToolbarOffset: function (isDirTop, rects, toolbar, editorLeft, editorWidth, scrollLeft, scrollTop, stickyTop, arrowMargin) {\n      const padding = 1;\n      const toolbarWidth = toolbar.offsetWidth;\n      const toolbarHeight = rects.noText && !isDirTop ? 0 : toolbar.offsetHeight;\n      const absoluteLeft = (isDirTop ? rects.left : rects.right) - editorLeft - toolbarWidth / 2 + scrollLeft;\n      const overRight = absoluteLeft + toolbarWidth - editorWidth;\n      let t = (isDirTop ? rects.top - toolbarHeight - arrowMargin : rects.bottom + arrowMargin) - (rects.noText ? 0 : stickyTop) + scrollTop;\n      let l = absoluteLeft < 0 ? padding : overRight < 0 ? absoluteLeft : absoluteLeft - overRight - padding - 1;\n      let resetTop = false;\n      const space = t + (isDirTop ? event._getEditorOffsets(null).top : toolbar.offsetHeight - context.element.wysiwyg.offsetHeight);\n      if (!isDirTop && space > 0 && event._getPageBottomSpace() < space) {\n        isDirTop = true;\n        resetTop = true;\n      } else if (isDirTop && _d.documentElement.offsetTop > space) {\n        isDirTop = false;\n        resetTop = true;\n      }\n      if (resetTop) t = (isDirTop ? rects.top - toolbarHeight - arrowMargin : rects.bottom + arrowMargin) - (rects.noText ? 0 : stickyTop) + scrollTop;\n      toolbar.style.left = _w.Math.floor(l) + 'px';\n      toolbar.style.top = _w.Math.floor(t) + 'px';\n      if (isDirTop) {\n        util.removeClass(context.element._arrow, 'se-arrow-up');\n        util.addClass(context.element._arrow, 'se-arrow-down');\n        context.element._arrow.style.top = toolbarHeight + 'px';\n      } else {\n        util.removeClass(context.element._arrow, 'se-arrow-down');\n        util.addClass(context.element._arrow, 'se-arrow-up');\n        context.element._arrow.style.top = -arrowMargin + 'px';\n      }\n      const arrow_left = _w.Math.floor(toolbarWidth / 2 + (absoluteLeft - l));\n      context.element._arrow.style.left = (arrow_left + arrowMargin > toolbar.offsetWidth ? toolbar.offsetWidth - arrowMargin : arrow_left < arrowMargin ? arrowMargin : arrow_left) + 'px';\n    },\n    _showToolbarInline: function () {\n      if (!core._isInline) return;\n      const toolbar = context.element.toolbar;\n      if (options.toolbarContainer) toolbar.style.position = 'relative';else toolbar.style.position = 'absolute';\n      toolbar.style.visibility = 'hidden';\n      toolbar.style.display = 'block';\n      core._inlineToolbarAttr.width = toolbar.style.width = options.toolbarWidth;\n      core._inlineToolbarAttr.top = toolbar.style.top = (options.toolbarContainer ? 0 : -1 - toolbar.offsetHeight) + 'px';\n      if (typeof functions.showInline === 'function') functions.showInline(toolbar, context, core);\n      event.onScroll_window();\n      core._inlineToolbarAttr.isShow = true;\n      toolbar.style.visibility = '';\n    },\n    _hideToolbar: function () {\n      if (!core._notHideToolbar && !core._variable.isFullScreen) {\n        context.element.toolbar.style.display = 'none';\n        core._inlineToolbarAttr.isShow = false;\n      }\n    },\n    onInput_wysiwyg: function (e) {\n      if (core.isReadOnly || core.isDisabled) {\n        e.preventDefault();\n        e.stopPropagation();\n        core.history.go(core.history.getCurrentIndex());\n        return false;\n      }\n      core._editorRange();\n      const data = (e.data === null ? '' : e.data === undefined ? ' ' : e.data) || '';\n      if (!core._charCount(data)) {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n      }\n\n      // user event\n      if (typeof functions.onInput === 'function' && functions.onInput(e, core) === false) return;\n\n      // history stack\n      core.history.push(true);\n    },\n    _isUneditableNode: function (range, isFront) {\n      const container = isFront ? range.startContainer : range.endContainer;\n      const offset = isFront ? range.startOffset : range.endOffset;\n      const siblingKey = isFront ? 'previousSibling' : 'nextSibling';\n      const isElement = container.nodeType === 1;\n      let siblingNode;\n      if (isElement) {\n        siblingNode = event._isUneditableNode_getSibling(container.childNodes[offset], siblingKey, container);\n        return siblingNode && siblingNode.nodeType === 1 && siblingNode.getAttribute('contenteditable') === 'false';\n      } else {\n        siblingNode = event._isUneditableNode_getSibling(container, siblingKey, container);\n        return core.isEdgePoint(container, offset, isFront ? 'front' : 'end') && siblingNode && siblingNode.nodeType === 1 && siblingNode.getAttribute('contenteditable') === 'false';\n      }\n    },\n    _isUneditableNode_getSibling: function (selectNode, siblingKey, container) {\n      if (!selectNode) return null;\n      let siblingNode = selectNode[siblingKey];\n      if (!siblingNode) {\n        siblingNode = util.getFormatElement(container);\n        siblingNode = siblingNode ? siblingNode[siblingKey] : null;\n        if (siblingNode && !util.isComponent(siblingNode)) siblingNode = siblingKey === 'previousSibling' ? siblingNode.firstChild : siblingNode.lastChild;else return null;\n      }\n      return siblingNode;\n    },\n    _onShortcutKey: false,\n    onKeyDown_wysiwyg: function (e) {\n      let selectionNode = core.getSelectionNode();\n      if (util.isInputElement(selectionNode)) return;\n      const keyCode = e.keyCode;\n      const shift = e.shiftKey;\n      const ctrl = e.ctrlKey || e.metaKey || keyCode === 91 || keyCode === 92 || keyCode === 224;\n      const alt = e.altKey;\n      event._IEisComposing = keyCode === 229;\n      if (!ctrl && core.isReadOnly && !event._cursorMoveKeyCode.test(keyCode)) {\n        e.preventDefault();\n        return false;\n      }\n      core.submenuOff();\n      if (core._isBalloon) {\n        event._hideToolbar();\n      }\n\n      // user event\n      if (typeof functions.onKeyDown === 'function' && functions.onKeyDown(e, core) === false) return;\n\n      /** Shortcuts */\n      if (ctrl && event._shortcutCommand(keyCode, shift)) {\n        event._onShortcutKey = true;\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n      } else if (event._onShortcutKey) {\n        event._onShortcutKey = false;\n      }\n\n      /** default key action */\n      const range = core.getRange();\n      const selectRange = !range.collapsed || range.startContainer !== range.endContainer;\n      const fileComponentName = core._fileManager.pluginRegExp.test(core.currentControllerName) ? core.currentControllerName : '';\n      let formatEl = util.getFormatElement(selectionNode, null) || selectionNode;\n      let rangeEl = util.getRangeFormatElement(formatEl, null);\n      switch (keyCode) {\n        case 8:\n          /** backspace key */\n          if (!selectRange) {\n            if (fileComponentName) {\n              e.preventDefault();\n              e.stopPropagation();\n              core.plugins[fileComponentName].destroy.call(core);\n              break;\n            }\n          }\n          if (selectRange && event._hardDelete()) {\n            e.preventDefault();\n            e.stopPropagation();\n            break;\n          }\n          if (!util.isFormatElement(formatEl) && !context.element.wysiwyg.firstElementChild && !util.isComponent(selectionNode) && core._setDefaultFormat(options.defaultTag) !== null) {\n            e.preventDefault();\n            e.stopPropagation();\n            return false;\n          }\n          if (!selectRange && !formatEl.previousElementSibling && range.startOffset === 0 && !selectionNode.previousSibling && !util.isListCell(formatEl) && util.isFormatElement(formatEl) && (!util.isFreeFormatElement(formatEl) || util.isClosureFreeFormatElement(formatEl))) {\n            // closure range\n            if (util.isClosureRangeFormatElement(formatEl.parentNode)) {\n              e.preventDefault();\n              e.stopPropagation();\n              return false;\n            }\n            // maintain default format\n            if (util.isWysiwygDiv(formatEl.parentNode) && formatEl.childNodes.length <= 1 && (!formatEl.firstChild || util.onlyZeroWidthSpace(formatEl.textContent))) {\n              e.preventDefault();\n              e.stopPropagation();\n              if (formatEl.nodeName.toUpperCase() === options.defaultTag.toUpperCase()) {\n                formatEl.innerHTML = '<br>';\n                const attrs = formatEl.attributes;\n                while (attrs[0]) {\n                  formatEl.removeAttribute(attrs[0].name);\n                }\n              } else {\n                const defaultFormat = util.createElement(options.defaultTag);\n                defaultFormat.innerHTML = '<br>';\n                formatEl.parentElement.replaceChild(defaultFormat, formatEl);\n              }\n              core.nativeFocus();\n              return false;\n            }\n          }\n\n          // clean remove tag\n          const startCon = range.startContainer;\n          if (formatEl && !formatEl.previousElementSibling && range.startOffset === 0 && startCon.nodeType === 3 && !util.isFormatElement(startCon.parentNode)) {\n            let prev = startCon.parentNode.previousSibling;\n            const next = startCon.parentNode.nextSibling;\n            if (!prev) {\n              if (!next) {\n                prev = util.createElement('BR');\n                formatEl.appendChild(prev);\n              } else {\n                prev = next;\n              }\n            }\n            let con = startCon;\n            while (formatEl.contains(con) && !con.previousSibling) {\n              con = con.parentNode;\n            }\n            if (!formatEl.contains(con)) {\n              startCon.textContent = '';\n              util.removeItemAllParents(startCon, null, formatEl);\n              break;\n            }\n          }\n\n          // tag[contenteditable=\"false\"]\n          if (event._isUneditableNode(range, true)) {\n            e.preventDefault();\n            e.stopPropagation();\n            break;\n          }\n\n          // format attributes\n          if (!selectRange && core._isEdgeFormat(range.startContainer, range.startOffset, 'start')) {\n            if (util.isFormatElement(formatEl.previousElementSibling)) {\n              core._formatAttrsTemp = formatEl.previousElementSibling.attributes;\n            }\n          }\n\n          // nested list\n          const commonCon = range.commonAncestorContainer;\n          formatEl = util.getFormatElement(range.startContainer, null);\n          rangeEl = util.getRangeFormatElement(formatEl, null);\n          if (rangeEl && formatEl && !util.isCell(rangeEl) && !/^FIGCAPTION$/i.test(rangeEl.nodeName)) {\n            if (util.isListCell(formatEl) && util.isList(rangeEl) && (util.isListCell(rangeEl.parentNode) || formatEl.previousElementSibling) && (selectionNode === formatEl || selectionNode.nodeType === 3 && (!selectionNode.previousSibling || util.isList(selectionNode.previousSibling))) && (util.getFormatElement(range.startContainer, null) !== util.getFormatElement(range.endContainer, null) ? rangeEl.contains(range.startContainer) : range.startOffset === 0 && range.collapsed)) {\n              if (range.startContainer !== range.endContainer) {\n                e.preventDefault();\n                core.removeNode();\n                if (range.startContainer.nodeType === 3) {\n                  core.setRange(range.startContainer, range.startContainer.textContent.length, range.startContainer, range.startContainer.textContent.length);\n                }\n                // history stack\n                core.history.push(true);\n              } else {\n                let prev = formatEl.previousElementSibling || rangeEl.parentNode;\n                if (util.isListCell(prev)) {\n                  e.preventDefault();\n                  let prevLast = prev;\n                  if (!prev.contains(formatEl) && util.isListCell(prevLast) && util.isList(prevLast.lastElementChild)) {\n                    prevLast = prevLast.lastElementChild.lastElementChild;\n                    while (util.isListCell(prevLast) && util.isList(prevLast.lastElementChild)) {\n                      prevLast = prevLast.lastElementChild && prevLast.lastElementChild.lastElementChild;\n                    }\n                    prev = prevLast;\n                  }\n                  let con = prev === rangeEl.parentNode ? rangeEl.previousSibling : prev.lastChild;\n                  if (!con) {\n                    con = util.createTextNode(util.zeroWidthSpace);\n                    rangeEl.parentNode.insertBefore(con, rangeEl.parentNode.firstChild);\n                  }\n                  const offset = con.nodeType === 3 ? con.textContent.length : 1;\n                  const children = formatEl.childNodes;\n                  let after = con;\n                  let child = children[0];\n                  while (child = children[0]) {\n                    prev.insertBefore(child, after.nextSibling);\n                    after = child;\n                  }\n                  util.removeItem(formatEl);\n                  if (rangeEl.children.length === 0) util.removeItem(rangeEl);\n                  core.setRange(con, offset, con, offset);\n                  // history stack\n                  core.history.push(true);\n                }\n              }\n              break;\n            }\n\n            // detach range\n            if (!selectRange && range.startOffset === 0) {\n              let detach = true;\n              let comm = commonCon;\n              while (comm && comm !== rangeEl && !util.isWysiwygDiv(comm)) {\n                if (comm.previousSibling) {\n                  if (comm.previousSibling.nodeType === 1 || !util.onlyZeroWidthSpace(comm.previousSibling.textContent.trim())) {\n                    detach = false;\n                    break;\n                  }\n                }\n                comm = comm.parentNode;\n              }\n              if (detach && rangeEl.parentNode) {\n                e.preventDefault();\n                core.detachRangeFormatElement(rangeEl, util.isListCell(formatEl) ? [formatEl] : null, null, false, false);\n                // history stack\n                core.history.push(true);\n                break;\n              }\n            }\n          }\n\n          // component\n          if (!selectRange && formatEl && (range.startOffset === 0 || (selectionNode === formatEl ? !!formatEl.childNodes[range.startOffset] : false))) {\n            const sel = selectionNode === formatEl ? formatEl.childNodes[range.startOffset] : selectionNode;\n            const prev = formatEl.previousSibling;\n            // select file component\n            const ignoreZWS = (commonCon.nodeType === 3 || util.isBreak(commonCon)) && !commonCon.previousSibling && range.startOffset === 0;\n            if (sel && !sel.previousSibling && (commonCon && util.isComponent(commonCon.previousSibling) || ignoreZWS && util.isComponent(prev))) {\n              const fileComponentInfo = core.getFileComponent(prev);\n              if (fileComponentInfo) {\n                e.preventDefault();\n                e.stopPropagation();\n                if (formatEl.textContent.length === 0) util.removeItem(formatEl);\n                if (core.selectComponent(fileComponentInfo.target, fileComponentInfo.pluginName) === false) core.blur();\n              } else if (util.isComponent(prev)) {\n                e.preventDefault();\n                e.stopPropagation();\n                util.removeItem(prev);\n              }\n              break;\n            }\n            // delete nonEditable\n            if (sel && util.isNonEditable(sel.previousSibling)) {\n              e.preventDefault();\n              e.stopPropagation();\n              util.removeItem(sel.previousSibling);\n              break;\n            }\n          }\n          break;\n        case 46:\n          /** delete key */\n          if (fileComponentName) {\n            e.preventDefault();\n            e.stopPropagation();\n            core.plugins[fileComponentName].destroy.call(core);\n            break;\n          }\n          if (selectRange && event._hardDelete()) {\n            e.preventDefault();\n            e.stopPropagation();\n            break;\n          }\n\n          // tag[contenteditable=\"false\"]\n          if (event._isUneditableNode(range, false)) {\n            e.preventDefault();\n            e.stopPropagation();\n            break;\n          }\n\n          // component\n          if ((util.isFormatElement(selectionNode) || selectionNode.nextSibling === null || util.onlyZeroWidthSpace(selectionNode.nextSibling) && selectionNode.nextSibling.nextSibling === null) && range.startOffset === selectionNode.textContent.length) {\n            const nextEl = formatEl.nextElementSibling;\n            if (!nextEl) break;\n            if (util.isComponent(nextEl)) {\n              e.preventDefault();\n              if (util.onlyZeroWidthSpace(formatEl)) {\n                util.removeItem(formatEl);\n                // table component\n                if (util.isTable(nextEl)) {\n                  let cell = util.getChildElement(nextEl, util.isCell, false);\n                  cell = cell.firstElementChild || cell;\n                  core.setRange(cell, 0, cell, 0);\n                  break;\n                }\n              }\n\n              // select file component\n              const fileComponentInfo = core.getFileComponent(nextEl);\n              if (fileComponentInfo) {\n                e.stopPropagation();\n                if (core.selectComponent(fileComponentInfo.target, fileComponentInfo.pluginName) === false) core.blur();\n              } else if (util.isComponent(nextEl)) {\n                e.stopPropagation();\n                util.removeItem(nextEl);\n              }\n              break;\n            }\n          }\n          if (!selectRange && (core.isEdgePoint(range.endContainer, range.endOffset) || (selectionNode === formatEl ? !!formatEl.childNodes[range.startOffset] : false))) {\n            const sel = selectionNode === formatEl ? formatEl.childNodes[range.startOffset] || selectionNode : selectionNode;\n            // delete nonEditable\n            if (sel && util.isNonEditable(sel.nextSibling)) {\n              e.preventDefault();\n              e.stopPropagation();\n              util.removeItem(sel.nextSibling);\n              break;\n            } else if (util.isComponent(sel)) {\n              e.preventDefault();\n              e.stopPropagation();\n              util.removeItem(sel);\n              break;\n            }\n          }\n\n          // format attributes\n          if (!selectRange && core._isEdgeFormat(range.endContainer, range.endOffset, 'end')) {\n            if (util.isFormatElement(formatEl.nextElementSibling)) {\n              core._formatAttrsTemp = formatEl.attributes;\n            }\n          }\n\n          // nested list\n          formatEl = util.getFormatElement(range.startContainer, null);\n          rangeEl = util.getRangeFormatElement(formatEl, null);\n          if (util.isListCell(formatEl) && util.isList(rangeEl) && (selectionNode === formatEl || selectionNode.nodeType === 3 && (!selectionNode.nextSibling || util.isList(selectionNode.nextSibling)) && (util.getFormatElement(range.startContainer, null) !== util.getFormatElement(range.endContainer, null) ? rangeEl.contains(range.endContainer) : range.endOffset === selectionNode.textContent.length && range.collapsed))) {\n            if (range.startContainer !== range.endContainer) core.removeNode();\n            let next = util.getArrayItem(formatEl.children, util.isList, false);\n            next = next || formatEl.nextElementSibling || rangeEl.parentNode.nextElementSibling;\n            if (next && (util.isList(next) || util.getArrayItem(next.children, util.isList, false))) {\n              e.preventDefault();\n              let con, children;\n              if (util.isList(next)) {\n                const child = next.firstElementChild;\n                children = child.childNodes;\n                con = children[0];\n                while (children[0]) {\n                  formatEl.insertBefore(children[0], next);\n                }\n                util.removeItem(child);\n              } else {\n                con = next.firstChild;\n                children = next.childNodes;\n                while (children[0]) {\n                  formatEl.appendChild(children[0]);\n                }\n                util.removeItem(next);\n              }\n              core.setRange(con, 0, con, 0);\n              // history stack\n              core.history.push(true);\n            }\n            break;\n          }\n          break;\n        case 9:\n          /** tab key */\n          if (fileComponentName || options.tabDisable) break;\n          e.preventDefault();\n          if (ctrl || alt || util.isWysiwygDiv(selectionNode)) break;\n          const isEdge = !range.collapsed || core.isEdgePoint(range.startContainer, range.startOffset);\n          const selectedFormats = core.getSelectedElements(null);\n          selectionNode = core.getSelectionNode();\n          const cells = [];\n          let lines = [];\n          let fc = util.isListCell(selectedFormats[0]),\n            lc = util.isListCell(selectedFormats[selectedFormats.length - 1]);\n          let r = {\n            sc: range.startContainer,\n            so: range.startOffset,\n            ec: range.endContainer,\n            eo: range.endOffset\n          };\n          for (let i = 0, len = selectedFormats.length, f; i < len; i++) {\n            f = selectedFormats[i];\n            if (util.isListCell(f)) {\n              if (!f.previousElementSibling && !shift) {\n                continue;\n              } else {\n                cells.push(f);\n              }\n            } else {\n              lines.push(f);\n            }\n          }\n\n          // Nested list\n          if (cells.length > 0 && isEdge && core.plugins.list) {\n            r = core.plugins.list.editInsideList.call(core, shift, cells);\n          } else {\n            // table\n            const tableCell = util.getParentElement(selectionNode, util.isCell);\n            if (tableCell && isEdge) {\n              const table = util.getParentElement(tableCell, 'table');\n              const cells = util.getListChildren(table, util.isCell);\n              let idx = shift ? util.prevIdx(cells, tableCell) : util.nextIdx(cells, tableCell);\n              if (idx === cells.length && !shift) idx = 0;\n              if (idx === -1 && shift) idx = cells.length - 1;\n              let moveCell = cells[idx];\n              if (!moveCell) break;\n              moveCell = moveCell.firstElementChild || moveCell;\n              core.setRange(moveCell, 0, moveCell, 0);\n              break;\n            }\n            lines = lines.concat(cells);\n            fc = lc = null;\n          }\n\n          // Lines tab(4)\n          if (lines.length > 0) {\n            if (!shift) {\n              const tabText = util.createTextNode(new _w.Array(core._variable.tabSize + 1).join('\\u00A0'));\n              if (lines.length === 1) {\n                const textRange = core.insertNode(tabText, null, true);\n                if (!textRange) return false;\n                if (!fc) {\n                  r.sc = tabText;\n                  r.so = textRange.endOffset;\n                }\n                if (!lc) {\n                  r.ec = tabText;\n                  r.eo = textRange.endOffset;\n                }\n              } else {\n                const len = lines.length - 1;\n                for (let i = 0, child; i <= len; i++) {\n                  child = lines[i].firstChild;\n                  if (!child) continue;\n                  if (util.isBreak(child)) {\n                    lines[i].insertBefore(tabText.cloneNode(false), child);\n                  } else {\n                    child.textContent = tabText.textContent + child.textContent;\n                  }\n                }\n                const firstChild = util.getChildElement(lines[0], 'text', false);\n                const endChild = util.getChildElement(lines[len], 'text', true);\n                if (!fc && firstChild) {\n                  r.sc = firstChild;\n                  r.so = 0;\n                }\n                if (!lc && endChild) {\n                  r.ec = endChild;\n                  r.eo = endChild.textContent.length;\n                }\n              }\n            } else {\n              const len = lines.length - 1;\n              for (let i = 0, line; i <= len; i++) {\n                line = lines[i].childNodes;\n                for (let c = 0, cLen = line.length, child; c < cLen; c++) {\n                  child = line[c];\n                  if (!child) break;\n                  if (util.onlyZeroWidthSpace(child)) continue;\n                  if (/^\\s{1,4}$/.test(child.textContent)) {\n                    util.removeItem(child);\n                  } else if (/^\\s{1,4}/.test(child.textContent)) {\n                    child.textContent = child.textContent.replace(/^\\s{1,4}/, '');\n                  }\n                  break;\n                }\n              }\n              const firstChild = util.getChildElement(lines[0], 'text', false);\n              const endChild = util.getChildElement(lines[len], 'text', true);\n              if (!fc && firstChild) {\n                r.sc = firstChild;\n                r.so = 0;\n              }\n              if (!lc && endChild) {\n                r.ec = endChild;\n                r.eo = endChild.textContent.length;\n              }\n            }\n          }\n          core.setRange(r.sc, r.so, r.ec, r.eo);\n          // history stack\n          core.history.push(false);\n          break;\n        case 13:\n          /** enter key */\n          const freeFormatEl = util.getFreeFormatElement(selectionNode, null);\n          if (core._charTypeHTML) {\n            let enterHTML = '';\n            if (!shift && freeFormatEl || shift) {\n              enterHTML = '<br>';\n            } else {\n              enterHTML = '<' + formatEl.nodeName + '><br></' + formatEl.nodeName + '>';\n            }\n            if (!core.checkCharCount(enterHTML, 'byte-html')) {\n              e.preventDefault();\n              return false;\n            }\n          }\n          if (!shift) {\n            const formatEndEdge = core._isEdgeFormat(range.endContainer, range.endOffset, 'end');\n            const formatStartEdge = core._isEdgeFormat(range.startContainer, range.startOffset, 'start');\n\n            // add default format line\n            if (formatEndEdge && (/^H[1-6]$/i.test(formatEl.nodeName) || /^HR$/i.test(formatEl.nodeName))) {\n              e.preventDefault();\n              let temp = null;\n              const newFormat = core.appendFormatTag(formatEl, options.defaultTag);\n              if (formatEndEdge && formatEndEdge.length > 0) {\n                temp = formatEndEdge.pop();\n                const innerNode = temp;\n                while (formatEndEdge.length > 0) {\n                  temp = temp.appendChild(formatEndEdge.pop());\n                }\n                newFormat.appendChild(innerNode);\n              }\n              temp = !temp ? newFormat.firstChild : temp.appendChild(newFormat.firstChild);\n              core.setRange(temp, 0, temp, 0);\n              break;\n            } else if (rangeEl && formatEl && !util.isCell(rangeEl) && !/^FIGCAPTION$/i.test(rangeEl.nodeName)) {\n              const range = core.getRange();\n              if (core.isEdgePoint(range.endContainer, range.endOffset) && util.isList(selectionNode.nextSibling)) {\n                e.preventDefault();\n                const newEl = util.createElement('LI');\n                const br = util.createElement('BR');\n                newEl.appendChild(br);\n                formatEl.parentNode.insertBefore(newEl, formatEl.nextElementSibling);\n                newEl.appendChild(selectionNode.nextSibling);\n                core.setRange(br, 1, br, 1);\n                break;\n              }\n              if ((range.commonAncestorContainer.nodeType === 3 ? !range.commonAncestorContainer.nextElementSibling : true) && util.onlyZeroWidthSpace(formatEl.innerText.trim()) && !util.isListCell(formatEl.nextElementSibling)) {\n                e.preventDefault();\n                let newEl = null;\n                if (util.isListCell(rangeEl.parentNode)) {\n                  rangeEl = formatEl.parentNode.parentNode.parentNode;\n                  newEl = util.splitElement(formatEl, null, util.getElementDepth(formatEl) - 2);\n                  if (!newEl) {\n                    const newListCell = util.createElement('LI');\n                    newListCell.innerHTML = '<br>';\n                    util.copyTagAttributes(newListCell, formatEl, options.lineAttrReset);\n                    rangeEl.insertBefore(newListCell, newEl);\n                    newEl = newListCell;\n                  }\n                } else {\n                  const newFormat = util.isCell(rangeEl.parentNode) ? 'DIV' : util.isList(rangeEl.parentNode) ? 'LI' : util.isFormatElement(rangeEl.nextElementSibling) && !util.isRangeFormatElement(rangeEl.nextElementSibling) ? rangeEl.nextElementSibling.nodeName : util.isFormatElement(rangeEl.previousElementSibling) && !util.isRangeFormatElement(rangeEl.previousElementSibling) ? rangeEl.previousElementSibling.nodeName : options.defaultTag;\n                  newEl = util.createElement(newFormat);\n                  util.copyTagAttributes(newEl, formatEl, options.lineAttrReset);\n                  const edge = core.detachRangeFormatElement(rangeEl, [formatEl], null, true, true);\n                  edge.cc.insertBefore(newEl, edge.ec);\n                }\n                newEl.innerHTML = '<br>';\n                util.removeItemAllParents(formatEl, null, null);\n                core.setRange(newEl, 1, newEl, 1);\n                break;\n              }\n            }\n            if (freeFormatEl) {\n              e.preventDefault();\n              const selectionFormat = selectionNode === freeFormatEl;\n              const wSelection = core.getSelection();\n              const children = selectionNode.childNodes,\n                offset = wSelection.focusOffset,\n                prev = selectionNode.previousElementSibling,\n                next = selectionNode.nextSibling;\n              if (!util.isClosureFreeFormatElement(freeFormatEl) && !!children && (selectionFormat && range.collapsed && children.length - 1 <= offset + 1 && util.isBreak(children[offset]) && (!children[offset + 1] || (!children[offset + 2] || util.onlyZeroWidthSpace(children[offset + 2].textContent)) && children[offset + 1].nodeType === 3 && util.onlyZeroWidthSpace(children[offset + 1].textContent)) && offset > 0 && util.isBreak(children[offset - 1]) || !selectionFormat && util.onlyZeroWidthSpace(selectionNode.textContent) && util.isBreak(prev) && (util.isBreak(prev.previousSibling) || !util.onlyZeroWidthSpace(prev.previousSibling.textContent)) && (!next || !util.isBreak(next) && util.onlyZeroWidthSpace(next.textContent)))) {\n                if (selectionFormat) util.removeItem(children[offset - 1]);else util.removeItem(selectionNode);\n                const newEl = core.appendFormatTag(freeFormatEl, util.isFormatElement(freeFormatEl.nextElementSibling) && !util.isRangeFormatElement(freeFormatEl.nextElementSibling) ? freeFormatEl.nextElementSibling : null);\n                util.copyFormatAttributes(newEl, freeFormatEl);\n                core.setRange(newEl, 1, newEl, 1);\n                break;\n              }\n              if (selectionFormat) {\n                functions.insertHTML(range.collapsed && util.isBreak(range.startContainer.childNodes[range.startOffset - 1]) ? '<br>' : '<br><br>', true, false);\n                let focusNode = wSelection.focusNode;\n                const wOffset = wSelection.focusOffset;\n                if (freeFormatEl === focusNode) {\n                  focusNode = focusNode.childNodes[wOffset - offset > 1 ? wOffset - 1 : wOffset];\n                }\n                core.setRange(focusNode, 1, focusNode, 1);\n              } else {\n                const focusNext = wSelection.focusNode.nextSibling;\n                const br = util.createElement('BR');\n                core.insertNode(br, null, false);\n                const brPrev = br.previousSibling,\n                  brNext = br.nextSibling;\n                if (!util.isBreak(focusNext) && !util.isBreak(brPrev) && (!brNext || util.onlyZeroWidthSpace(brNext))) {\n                  br.parentNode.insertBefore(br.cloneNode(false), br);\n                  core.setRange(br, 1, br, 1);\n                } else {\n                  core.setRange(brNext, 0, brNext, 0);\n                }\n              }\n              event._onShortcutKey = true;\n              break;\n            }\n\n            // set format attrs - edge\n            if (range.collapsed && (formatStartEdge || formatEndEdge)) {\n              e.preventDefault();\n              const focusBR = util.createElement('BR');\n              const newFormat = util.createElement(formatEl.nodeName);\n              util.copyTagAttributes(newFormat, formatEl, options.lineAttrReset);\n              let child = focusBR;\n              do {\n                if (!util.isBreak(selectionNode) && selectionNode.nodeType === 1) {\n                  const f = selectionNode.cloneNode(false);\n                  f.appendChild(child);\n                  child = f;\n                }\n                selectionNode = selectionNode.parentNode;\n              } while (formatEl !== selectionNode && formatEl.contains(selectionNode));\n              newFormat.appendChild(child);\n              formatEl.parentNode.insertBefore(newFormat, formatStartEdge && !formatEndEdge ? formatEl : formatEl.nextElementSibling);\n              if (formatEndEdge) {\n                core.setRange(focusBR, 1, focusBR, 1);\n              }\n              break;\n            }\n            if (formatEl) {\n              e.stopPropagation();\n              let newEl;\n              let offset = 0;\n              if (!range.collapsed) {\n                const isMultiLine = util.getFormatElement(range.startContainer, null) !== util.getFormatElement(range.endContainer, null);\n                const newFormat = formatEl.cloneNode(false);\n                newFormat.innerHTML = '<br>';\n                const r = core.removeNode();\n                newEl = util.getFormatElement(r.container, null);\n                if (!newEl) {\n                  if (util.isWysiwygDiv(r.container)) {\n                    e.preventDefault();\n                    context.element.wysiwyg.appendChild(newFormat);\n                    newEl = newFormat;\n                    util.copyTagAttributes(newEl, formatEl, options.lineAttrReset);\n                    core.setRange(newEl, offset, newEl, offset);\n                  }\n                  break;\n                }\n                const innerRange = util.getRangeFormatElement(r.container);\n                newEl = newEl.contains(innerRange) ? util.getChildElement(innerRange, util.getFormatElement.bind(util)) : newEl;\n                if (isMultiLine) {\n                  if (formatEndEdge && !formatStartEdge) {\n                    newEl.parentNode.insertBefore(newFormat, !r.prevContainer || r.container === r.prevContainer ? newEl.nextElementSibling : newEl);\n                    newEl = newFormat;\n                    offset = 0;\n                  } else {\n                    offset = r.offset;\n                    if (formatStartEdge) {\n                      const tempEl = newEl.parentNode.insertBefore(newFormat, newEl);\n                      if (formatEndEdge) {\n                        newEl = tempEl;\n                        offset = 0;\n                      }\n                    }\n                  }\n                } else {\n                  if (formatEndEdge && formatStartEdge) {\n                    newEl.parentNode.insertBefore(newFormat, r.prevContainer && r.container === r.prevContainer ? newEl.nextElementSibling : newEl);\n                    newEl = newFormat;\n                    offset = 0;\n                  } else {\n                    newEl = util.splitElement(r.container, r.offset, util.getElementDepth(formatEl));\n                  }\n                }\n              } else {\n                if (util.onlyZeroWidthSpace(formatEl)) {\n                  newEl = core.appendFormatTag(formatEl, formatEl.cloneNode(false));\n                } else {\n                  newEl = util.splitElement(range.endContainer, range.endOffset, util.getElementDepth(formatEl));\n                }\n              }\n              e.preventDefault();\n              util.copyTagAttributes(newEl, formatEl, options.lineAttrReset);\n              core.setRange(newEl, offset, newEl, offset);\n              break;\n            }\n          }\n          if (selectRange) break;\n          if (rangeEl && util.getParentElement(rangeEl, 'FIGCAPTION') && util.getParentElement(rangeEl, util.isList)) {\n            e.preventDefault();\n            formatEl = core.appendFormatTag(formatEl, null);\n            core.setRange(formatEl, 0, formatEl, 0);\n          }\n          if (fileComponentName) {\n            e.preventDefault();\n            e.stopPropagation();\n            const compContext = context[fileComponentName];\n            const container = compContext._container;\n            const sibling = container.previousElementSibling || container.nextElementSibling;\n            let newEl = null;\n            if (util.isListCell(container.parentNode)) {\n              newEl = util.createElement('BR');\n            } else {\n              newEl = util.createElement(util.isFormatElement(sibling) && !util.isRangeFormatElement(sibling) ? sibling.nodeName : options.defaultTag);\n              newEl.innerHTML = '<br>';\n            }\n            container.parentNode.insertBefore(newEl, container);\n            core.callPlugin(fileComponentName, function () {\n              if (core.selectComponent(compContext._element, fileComponentName) === false) core.blur();\n            }, null);\n          }\n          break;\n        case 27:\n          if (fileComponentName) {\n            e.preventDefault();\n            e.stopPropagation();\n            core.controllersOff();\n            return false;\n          }\n          break;\n      }\n      if (shift && keyCode === 16) {\n        e.preventDefault();\n        e.stopPropagation();\n        const tablePlugin = core.plugins.table;\n        if (tablePlugin && !tablePlugin._shift && !tablePlugin._ref) {\n          const cell = util.getParentElement(formatEl, util.isCell);\n          if (cell) {\n            tablePlugin.onTableCellMultiSelect.call(core, cell, true);\n            return;\n          }\n        }\n      } else if (shift && (util.isOSX_IOS ? alt : ctrl) && keyCode === 32) {\n        e.preventDefault();\n        e.stopPropagation();\n        const nbsp = core.insertNode(util.createTextNode('\\u00a0'));\n        if (nbsp && nbsp.container) {\n          core.setRange(nbsp.container, nbsp.endOffset, nbsp.container, nbsp.endOffset);\n          return;\n        }\n      }\n      if (util.isIE && !ctrl && !alt && !selectRange && !event._nonTextKeyCode.test(keyCode) && util.isBreak(range.commonAncestorContainer)) {\n        const zeroWidth = util.createTextNode(util.zeroWidthSpace);\n        core.insertNode(zeroWidth, null, false);\n        core.setRange(zeroWidth, 1, zeroWidth, 1);\n      }\n      if (event._directionKeyCode.test(keyCode)) {\n        core._editorRange();\n        event._applyTagEffects();\n      }\n    },\n    onKeyUp_wysiwyg: function (e) {\n      if (event._onShortcutKey) return;\n      core._editorRange();\n      const keyCode = e.keyCode;\n      const ctrl = e.ctrlKey || e.metaKey || keyCode === 91 || keyCode === 92 || keyCode === 224;\n      const alt = e.altKey;\n      if (core.isReadOnly) {\n        if (!ctrl && event._cursorMoveKeyCode.test(keyCode)) event._applyTagEffects();\n        return;\n      }\n      const range = core.getRange();\n      let selectionNode = core.getSelectionNode();\n      if (core._isBalloon && (core._isBalloonAlways && keyCode !== 27 || !range.collapsed)) {\n        if (core._isBalloonAlways) {\n          if (keyCode !== 27) event._showToolbarBalloonDelay();\n        } else {\n          event._showToolbarBalloon();\n          return;\n        }\n      }\n\n      /** when format tag deleted */\n      if (keyCode === 8 && util.isWysiwygDiv(selectionNode) && selectionNode.textContent === '' && selectionNode.children.length === 0) {\n        e.preventDefault();\n        e.stopPropagation();\n        selectionNode.innerHTML = '';\n        const oFormatTag = util.createElement(util.isFormatElement(core._variable.currentNodes[0]) ? core._variable.currentNodes[0] : options.defaultTag);\n        oFormatTag.innerHTML = '<br>';\n        selectionNode.appendChild(oFormatTag);\n        core.setRange(oFormatTag, 0, oFormatTag, 0);\n        event._applyTagEffects();\n        core.history.push(false);\n        return;\n      }\n      const formatEl = util.getFormatElement(selectionNode, null);\n      const rangeEl = util.getRangeFormatElement(selectionNode, null);\n      const attrs = core._formatAttrsTemp;\n      if (attrs) {\n        for (let i = 0, len = attrs.length; i < len; i++) {\n          if (keyCode === 13 && /^id$/i.test(attrs[i].name)) {\n            formatEl.removeAttribute('id');\n            continue;\n          }\n          formatEl.setAttribute(attrs[i].name, attrs[i].value);\n        }\n        core._formatAttrsTemp = null;\n      }\n      if (!formatEl && range.collapsed && !util.isComponent(selectionNode) && !util.isList(selectionNode) && core._setDefaultFormat(util.isRangeFormatElement(rangeEl) ? 'DIV' : options.defaultTag) !== null) {\n        selectionNode = core.getSelectionNode();\n      }\n      const textKey = !ctrl && !alt && !event._nonTextKeyCode.test(keyCode);\n      if (textKey && selectionNode.nodeType === 3 && util.zeroWidthRegExp.test(selectionNode.textContent) && !(e.isComposing !== undefined ? e.isComposing : event._IEisComposing)) {\n        let so = range.startOffset,\n          eo = range.endOffset;\n        const frontZeroWidthCnt = (selectionNode.textContent.substring(0, eo).match(event._frontZeroWidthReg) || '').length;\n        so = range.startOffset - frontZeroWidthCnt;\n        eo = range.endOffset - frontZeroWidthCnt;\n        selectionNode.textContent = selectionNode.textContent.replace(util.zeroWidthRegExp, '');\n        core.setRange(selectionNode, so < 0 ? 0 : so, selectionNode, eo < 0 ? 0 : eo);\n      }\n      core._charCount('');\n\n      // user event\n      if (typeof functions.onKeyUp === 'function' && functions.onKeyUp(e, core) === false) return;\n\n      // history stack\n      if (!ctrl && !alt && !event._historyIgnoreKeyCode.test(keyCode)) {\n        core.history.push(true);\n      }\n    },\n    onScroll_wysiwyg: function (e) {\n      core.controllersOff();\n      if (core._isBalloon) event._hideToolbar();\n\n      // user event\n      if (typeof functions.onScroll === 'function') functions.onScroll(e, core);\n    },\n    onFocus_wysiwyg: function (e) {\n      if (core._antiBlur) return;\n      core.hasFocus = true;\n      _w.setTimeout(event._applyTagEffects);\n      if (core._isInline) event._showToolbarInline();\n\n      // user event\n      if (typeof functions.onFocus === 'function') functions.onFocus(e, core);\n    },\n    onBlur_wysiwyg: function (e) {\n      if (core._antiBlur || core._variable.isCodeView) return;\n      core.hasFocus = false;\n      core.effectNode = null;\n      core.controllersOff();\n      if (core._isInline || core._isBalloon) event._hideToolbar();\n      core._setKeyEffect([]);\n      core._variable.currentNodes = [];\n      core._variable.currentNodesMap = [];\n      if (options.showPathLabel) context.element.navigation.textContent = '';\n      // user event\n      if (typeof functions.onBlur === 'function') functions.onBlur(e, core, this);\n    },\n    onMouseDown_resizingBar: function (e) {\n      e.stopPropagation();\n      core.submenuOff();\n      core.controllersOff();\n      core._variable.resizeClientY = e.clientY;\n      context.element.resizeBackground.style.display = 'block';\n      function closureFunc() {\n        context.element.resizeBackground.style.display = 'none';\n        _d.removeEventListener('mousemove', event._resize_editor);\n        _d.removeEventListener('mouseup', closureFunc);\n      }\n      _d.addEventListener('mousemove', event._resize_editor);\n      _d.addEventListener('mouseup', closureFunc);\n    },\n    _resize_editor: function (e) {\n      const resizeInterval = context.element.editorArea.offsetHeight + (e.clientY - core._variable.resizeClientY);\n      const h = resizeInterval < core._variable.minResizingSize ? core._variable.minResizingSize : resizeInterval;\n      context.element.wysiwygFrame.style.height = context.element.code.style.height = h + 'px';\n      core._variable.resizeClientY = e.clientY;\n      if (!util.isResizeObserverSupported) core.__callResizeFunction(h, null);\n    },\n    onResize_window: function () {\n      if (!util.isResizeObserverSupported) core.resetResponsiveToolbar();\n      const toolbar = context.element.toolbar;\n      const isToolbarHidden = toolbar.style.display === 'none' || core._isInline && !core._inlineToolbarAttr.isShow;\n      if (toolbar.offsetWidth === 0 && !isToolbarHidden) return;\n      if (context.fileBrowser && context.fileBrowser.area.style.display === 'block') {\n        context.fileBrowser.body.style.maxHeight = _w.innerHeight - context.fileBrowser.header.offsetHeight - 50 + 'px';\n      }\n      if (core.submenuActiveButton && core.submenu) {\n        core._setMenuPosition(core.submenuActiveButton, core.submenu);\n      }\n      if (core._variable.isFullScreen) {\n        core._variable.innerHeight_fullScreen += _w.innerHeight - toolbar.offsetHeight - core._variable.innerHeight_fullScreen;\n        context.element.editorArea.style.height = core._variable.innerHeight_fullScreen + 'px';\n        return;\n      }\n      if (core._variable.isCodeView && core._isInline) {\n        event._showToolbarInline();\n        return;\n      }\n      core._iframeAutoHeight();\n      if (core._sticky) {\n        toolbar.style.width = context.element.topArea.offsetWidth - 2 + 'px';\n        event.onScroll_window();\n      }\n    },\n    onScroll_window: function () {\n      if (core._variable.isFullScreen || context.element.toolbar.offsetWidth === 0 || options.stickyToolbar < 0) return;\n      const element = context.element;\n      const editorHeight = element.editorArea.offsetHeight;\n      const y = (this.scrollY || _d.documentElement.scrollTop) + options.stickyToolbar;\n      const editorTop = event._getEditorOffsets(options.toolbarContainer).top - (core._isInline ? element.toolbar.offsetHeight : 0);\n      const inlineOffset = core._isInline && y - editorTop > 0 ? y - editorTop - context.element.toolbar.offsetHeight : 0;\n      if (y < editorTop) {\n        event._offStickyToolbar();\n      } else if (y + core._variable.minResizingSize >= editorHeight + editorTop) {\n        if (!core._sticky) event._onStickyToolbar(inlineOffset);\n        element.toolbar.style.top = inlineOffset + editorHeight + editorTop + options.stickyToolbar - y - core._variable.minResizingSize + 'px';\n      } else if (y >= editorTop) {\n        event._onStickyToolbar(inlineOffset);\n      }\n    },\n    _getEditorOffsets: function (container) {\n      let offsetEl = container || context.element.topArea;\n      let t = 0,\n        l = 0,\n        s = 0;\n      while (offsetEl) {\n        t += offsetEl.offsetTop;\n        l += offsetEl.offsetLeft;\n        s += offsetEl.scrollTop;\n        offsetEl = offsetEl.offsetParent;\n      }\n      return {\n        top: t,\n        left: l,\n        scroll: s\n      };\n    },\n    _getPageBottomSpace: function () {\n      return _d.documentElement.scrollHeight - (event._getEditorOffsets(null).top + context.element.topArea.offsetHeight);\n    },\n    _onStickyToolbar: function (inlineOffset) {\n      const element = context.element;\n      if (!core._isInline && !options.toolbarContainer) {\n        element._stickyDummy.style.height = element.toolbar.offsetHeight + 'px';\n        element._stickyDummy.style.display = 'block';\n      }\n      element.toolbar.style.top = options.stickyToolbar + inlineOffset + 'px';\n      element.toolbar.style.width = core._isInline ? core._inlineToolbarAttr.width : element.toolbar.offsetWidth + 'px';\n      util.addClass(element.toolbar, 'se-toolbar-sticky');\n      core._sticky = true;\n    },\n    _offStickyToolbar: function () {\n      const element = context.element;\n      element._stickyDummy.style.display = 'none';\n      element.toolbar.style.top = core._isInline ? core._inlineToolbarAttr.top : '';\n      element.toolbar.style.width = core._isInline ? core._inlineToolbarAttr.width : '';\n      element.editorArea.style.marginTop = '';\n      util.removeClass(element.toolbar, 'se-toolbar-sticky');\n      core._sticky = false;\n    },\n    _codeViewAutoHeight: function () {\n      if (core._variable.isFullScreen) return;\n      context.element.code.style.height = context.element.code.scrollHeight + 'px';\n    },\n    // FireFox - table delete, Chrome - image, video, audio\n    _hardDelete: function () {\n      const range = core.getRange();\n      const sc = range.startContainer;\n      const ec = range.endContainer;\n\n      // table\n      const sCell = util.getRangeFormatElement(sc);\n      const eCell = util.getRangeFormatElement(ec);\n      const sIsCell = util.isCell(sCell);\n      const eIsCell = util.isCell(eCell);\n      const ancestor = range.commonAncestorContainer;\n      if ((sIsCell && !sCell.previousElementSibling && !sCell.parentElement.previousElementSibling || eIsCell && !eCell.nextElementSibling && !eCell.parentElement.nextElementSibling) && sCell !== eCell) {\n        if (!sIsCell) {\n          util.removeItem(util.getParentElement(eCell, function (current) {\n            return ancestor === current.parentNode;\n          }));\n        } else if (!eIsCell) {\n          util.removeItem(util.getParentElement(sCell, function (current) {\n            return ancestor === current.parentNode;\n          }));\n        } else {\n          util.removeItem(util.getParentElement(sCell, function (current) {\n            return ancestor === current.parentNode;\n          }));\n          core.nativeFocus();\n          return true;\n        }\n      }\n\n      // component\n      const sComp = sc.nodeType === 1 ? util.getParentElement(sc, '.se-component') : null;\n      const eComp = ec.nodeType === 1 ? util.getParentElement(ec, '.se-component') : null;\n      if (sComp) util.removeItem(sComp);\n      if (eComp) util.removeItem(eComp);\n      return false;\n    },\n    onPaste_wysiwyg: function (e) {\n      const clipboardData = util.isIE ? _w.clipboardData : e.clipboardData;\n      if (!clipboardData) return true;\n      return event._dataTransferAction('paste', e, clipboardData);\n    },\n    _setClipboardComponent: function (e, info, clipboardData) {\n      e.preventDefault();\n      e.stopPropagation();\n      clipboardData.setData('text/html', info.component.outerHTML);\n    },\n    onCopy_wysiwyg: function (e) {\n      const clipboardData = util.isIE ? _w.clipboardData : e.clipboardData;\n\n      // user event\n      if (typeof functions.onCopy === 'function' && functions.onCopy(e, clipboardData, core) === false) {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n      }\n      const info = core.currentFileComponentInfo;\n      if (info && !util.isIE) {\n        event._setClipboardComponent(e, info, clipboardData);\n        util.addClass(info.component, 'se-component-copy');\n        // copy effect\n        _w.setTimeout(function () {\n          util.removeClass(info.component, 'se-component-copy');\n        }, 150);\n      }\n    },\n    onSave_wysiwyg: function (content) {\n      // user event\n      if (typeof functions.onSave === 'function') {\n        functions.onSave(content, core);\n        return;\n      }\n    },\n    onCut_wysiwyg: function (e) {\n      const clipboardData = util.isIE ? _w.clipboardData : e.clipboardData;\n\n      // user event\n      if (typeof functions.onCut === 'function' && functions.onCut(e, clipboardData, core) === false) {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n      }\n      const info = core.currentFileComponentInfo;\n      if (info && !util.isIE) {\n        event._setClipboardComponent(e, info, clipboardData);\n        util.removeItem(info.component);\n        core.controllersOff();\n      }\n      _w.setTimeout(function () {\n        // history stack\n        core.history.push(false);\n      });\n    },\n    onDrop_wysiwyg: function (e) {\n      if (core.isReadOnly || util.isIE) {\n        e.preventDefault();\n        e.stopPropagation();\n        return false;\n      }\n      const dataTransfer = e.dataTransfer;\n      if (!dataTransfer) return true;\n      core.removeNode();\n      event._setDropLocationSelection(e);\n      return event._dataTransferAction('drop', e, dataTransfer);\n    },\n    _setDropLocationSelection: function (e) {\n      if (e.rangeParent) {\n        core.setRange(e.rangeParent, e.rangeOffset, e.rangeParent, e.rangeOffset);\n      } else if (core._wd.caretRangeFromPoint) {\n        const r = core._wd.caretRangeFromPoint(e.clientX, e.clientY);\n        core.setRange(r.startContainer, r.startOffset, r.endContainer, r.endOffset);\n      } else {\n        const r = core.getRange();\n        core.setRange(r.startContainer, r.startOffset, r.endContainer, r.endOffset);\n      }\n    },\n    _dataTransferAction: function (type, e, data) {\n      let plainText, cleanData;\n      if (util.isIE) {\n        plainText = data.getData('Text');\n        const range = core.getRange();\n        const tempDiv = util.createElement('DIV');\n        const tempRange = {\n          sc: range.startContainer,\n          so: range.startOffset,\n          ec: range.endContainer,\n          eo: range.endOffset\n        };\n        tempDiv.setAttribute('contenteditable', true);\n        tempDiv.style.cssText = 'position:absolute; top:0; left:0; width:1px; height:1px; overflow:hidden;';\n        context.element.relative.appendChild(tempDiv);\n        tempDiv.focus();\n        _w.setTimeout(function () {\n          cleanData = tempDiv.innerHTML;\n          util.removeItem(tempDiv);\n          core.setRange(tempRange.sc, tempRange.so, tempRange.ec, tempRange.eo);\n          event._setClipboardData(type, e, plainText, cleanData, data);\n        });\n        return true;\n      } else {\n        plainText = data.getData('text/plain');\n        cleanData = data.getData('text/html');\n        if (event._setClipboardData(type, e, plainText, cleanData, data) === false) {\n          e.preventDefault();\n          e.stopPropagation();\n          return false;\n        }\n      }\n    },\n    _setClipboardData: function (type, e, plainText, cleanData, data) {\n      // MS word, OneNode, Excel\n      const MSData = /class=[\"']*Mso(Normal|List)/i.test(cleanData) || /content=[\"']*Word.Document/i.test(cleanData) || /content=[\"']*OneNote.File/i.test(cleanData) || /content=[\"']*Excel.Sheet/i.test(cleanData);\n      const onlyText = !cleanData;\n      if (!onlyText) {\n        cleanData = cleanData.replace(/^<html>\\r?\\n?<body>\\r?\\n?\\x3C!--StartFragment--\\>|\\x3C!--EndFragment-->\\r?\\n?<\\/body\\>\\r?\\n?<\\/html>$/g, '');\n        if (MSData) {\n          cleanData = cleanData.replace(/\\n/g, ' ');\n          plainText = plainText.replace(/\\n/g, ' ');\n        }\n        cleanData = core.cleanHTML(cleanData, core.pasteTagsWhitelistRegExp, core.pasteTagsBlacklistRegExp);\n      } else {\n        cleanData = util._HTMLConvertor(plainText).replace(/\\n/g, '<br>');\n      }\n      const maxCharCount = core._charCount(core._charTypeHTML ? cleanData : plainText);\n      // user event - paste\n      if (type === 'paste' && typeof functions.onPaste === 'function') {\n        const value = functions.onPaste(e, cleanData, maxCharCount, core);\n        if (value === false) {\n          return false;\n        } else if (typeof value === 'string') {\n          if (!value) return false;\n          cleanData = value;\n        }\n      }\n      // user event - drop\n      if (type === 'drop' && typeof functions.onDrop === 'function') {\n        const value = functions.onDrop(e, cleanData, maxCharCount, core);\n        if (value === false) {\n          return false;\n        } else if (typeof value === 'string') {\n          if (!value) return false;\n          cleanData = value;\n        }\n      }\n\n      // files\n      const files = data.files;\n      if (files.length > 0 && !MSData) {\n        if (/^image/.test(files[0].type) && core.plugins.image) {\n          functions.insertImage(files);\n        }\n        return false;\n      }\n      if (!maxCharCount) {\n        return false;\n      }\n      if (cleanData) {\n        functions.insertHTML(cleanData, true, false);\n        return false;\n      }\n    },\n    onMouseMove_wysiwyg: function (e) {\n      if (core.isDisabled || core.isReadOnly) return false;\n      const component = util.getParentElement(e.target, util.isComponent);\n      const lineBreakerStyle = core._lineBreaker.style;\n      if (component && !core.currentControllerName) {\n        const ctxEl = context.element;\n        let scrollTop = 0;\n        let el = ctxEl.wysiwyg;\n        do {\n          scrollTop += el.scrollTop;\n          el = el.parentElement;\n        } while (el && !/^(BODY|HTML)$/i.test(el.nodeName));\n        const wScroll = ctxEl.wysiwyg.scrollTop;\n        const offsets = event._getEditorOffsets(null);\n        const componentTop = util.getOffset(component, ctxEl.wysiwygFrame).top + wScroll;\n        const y = e.pageY + scrollTop + (options.iframe && !options.toolbarContainer ? ctxEl.toolbar.offsetHeight : 0);\n        const c = componentTop + (options.iframe ? scrollTop : offsets.top);\n        const isList = util.isListCell(component.parentNode);\n        let dir = '',\n          top = '';\n        if ((isList ? !component.previousSibling : !util.isFormatElement(component.previousElementSibling)) && y < c + 20) {\n          top = componentTop;\n          dir = 't';\n        } else if ((isList ? !component.nextSibling : !util.isFormatElement(component.nextElementSibling)) && y > c + component.offsetHeight - 20) {\n          top = componentTop + component.offsetHeight;\n          dir = 'b';\n        } else {\n          lineBreakerStyle.display = 'none';\n          return;\n        }\n        core._variable._lineBreakComp = component;\n        core._variable._lineBreakDir = dir;\n        lineBreakerStyle.top = top - wScroll + 'px';\n        core._lineBreakerButton.style.left = util.getOffset(component).left + component.offsetWidth / 2 - 15 + 'px';\n        lineBreakerStyle.display = 'block';\n      } // off line breaker\n      else if (lineBreakerStyle.display !== 'none') {\n        lineBreakerStyle.display = 'none';\n      }\n    },\n    _onMouseDown_lineBreak: function (e) {\n      e.preventDefault();\n    },\n    _onLineBreak: function (e) {\n      e.preventDefault();\n      const component = core._variable._lineBreakComp;\n      const dir = !this ? core._variable._lineBreakDir : this;\n      const isList = util.isListCell(component.parentNode);\n      const format = util.createElement(isList ? 'BR' : util.isCell(component.parentNode) ? 'DIV' : options.defaultTag);\n      if (!isList) format.innerHTML = '<br>';\n      if (core._charTypeHTML && !core.checkCharCount(format.outerHTML, 'byte-html')) return;\n      component.parentNode.insertBefore(format, dir === 't' ? component : component.nextSibling);\n      core._lineBreaker.style.display = 'none';\n      core._variable._lineBreakComp = null;\n      const focusEl = isList ? format : format.firstChild;\n      core.setRange(focusEl, 1, focusEl, 1);\n      // history stack\n      core.history.push(false);\n    },\n    _resizeObserver: null,\n    _toolbarObserver: null,\n    _addEvent: function () {\n      const eventWysiwyg = options.iframe ? core._ww : context.element.wysiwyg;\n      if (util.isResizeObserverSupported) {\n        this._resizeObserver = new _w.ResizeObserver(function (entries) {\n          core.__callResizeFunction(-1, entries[0]);\n        });\n      }\n\n      /** toolbar event */\n      context.element.toolbar.addEventListener('mousedown', event._buttonsEventHandler, false);\n      context.element._menuTray.addEventListener('mousedown', event._buttonsEventHandler, false);\n      context.element.toolbar.addEventListener('click', event.onClick_toolbar, false);\n      /** editor area */\n      eventWysiwyg.addEventListener('mousedown', event.onMouseDown_wysiwyg, false);\n      eventWysiwyg.addEventListener('click', event.onClick_wysiwyg, false);\n      eventWysiwyg.addEventListener(util.isIE ? 'textinput' : 'input', event.onInput_wysiwyg, false);\n      eventWysiwyg.addEventListener('keydown', event.onKeyDown_wysiwyg, false);\n      eventWysiwyg.addEventListener('keyup', event.onKeyUp_wysiwyg, false);\n      eventWysiwyg.addEventListener('paste', event.onPaste_wysiwyg, false);\n      eventWysiwyg.addEventListener('copy', event.onCopy_wysiwyg, false);\n      eventWysiwyg.addEventListener('cut', event.onCut_wysiwyg, false);\n      eventWysiwyg.addEventListener('drop', event.onDrop_wysiwyg, false);\n      eventWysiwyg.addEventListener('scroll', event.onScroll_wysiwyg, false);\n      eventWysiwyg.addEventListener('focus', event.onFocus_wysiwyg, false);\n      eventWysiwyg.addEventListener('blur', event.onBlur_wysiwyg, false);\n\n      /** line breaker */\n      event._lineBreakerBind = {\n        a: event._onLineBreak.bind(''),\n        t: event._onLineBreak.bind('t'),\n        b: event._onLineBreak.bind('b')\n      };\n      eventWysiwyg.addEventListener('mousemove', event.onMouseMove_wysiwyg, false);\n      core._lineBreakerButton.addEventListener('mousedown', event._onMouseDown_lineBreak, false);\n      core._lineBreakerButton.addEventListener('click', event._lineBreakerBind.a, false);\n      context.element.lineBreaker_t.addEventListener('mousedown', event._lineBreakerBind.t, false);\n      context.element.lineBreaker_b.addEventListener('mousedown', event._lineBreakerBind.b, false);\n\n      /** Events are registered mobile.  */\n      eventWysiwyg.addEventListener('touchstart', event.onMouseDown_wysiwyg, {\n        passive: true,\n        useCapture: false\n      });\n      eventWysiwyg.addEventListener('touchend', event.onClick_wysiwyg, {\n        passive: true,\n        useCapture: false\n      });\n\n      /** code view area auto line */\n      if (options.height === 'auto' && !options.codeMirrorEditor) {\n        context.element.code.addEventListener('keydown', event._codeViewAutoHeight, false);\n        context.element.code.addEventListener('keyup', event._codeViewAutoHeight, false);\n        context.element.code.addEventListener('paste', event._codeViewAutoHeight, false);\n      }\n\n      /** resizingBar */\n      if (context.element.resizingBar) {\n        if (/\\d+/.test(options.height) && options.resizeEnable) {\n          context.element.resizingBar.addEventListener('mousedown', event.onMouseDown_resizingBar, false);\n        } else {\n          util.addClass(context.element.resizingBar, 'se-resizing-none');\n        }\n      }\n\n      /** set response toolbar */\n      event._setResponsiveToolbar();\n\n      /** responsive toolbar observer */\n      if (util.isResizeObserverSupported) this._toolbarObserver = new _w.ResizeObserver(core.resetResponsiveToolbar);\n\n      /** window event */\n      _w.addEventListener('resize', event.onResize_window, false);\n      if (options.stickyToolbar > -1) {\n        _w.addEventListener('scroll', event.onScroll_window, false);\n      }\n    },\n    _removeEvent: function () {\n      const eventWysiwyg = options.iframe ? core._ww : context.element.wysiwyg;\n      context.element.toolbar.removeEventListener('mousedown', event._buttonsEventHandler);\n      context.element._menuTray.removeEventListener('mousedown', event._buttonsEventHandler);\n      context.element.toolbar.removeEventListener('click', event.onClick_toolbar);\n      eventWysiwyg.removeEventListener('mousedown', event.onMouseDown_wysiwyg);\n      eventWysiwyg.removeEventListener('click', event.onClick_wysiwyg);\n      eventWysiwyg.removeEventListener(util.isIE ? 'textinput' : 'input', event.onInput_wysiwyg);\n      eventWysiwyg.removeEventListener('keydown', event.onKeyDown_wysiwyg);\n      eventWysiwyg.removeEventListener('keyup', event.onKeyUp_wysiwyg);\n      eventWysiwyg.removeEventListener('paste', event.onPaste_wysiwyg);\n      eventWysiwyg.removeEventListener('copy', event.onCopy_wysiwyg);\n      eventWysiwyg.removeEventListener('cut', event.onCut_wysiwyg);\n      eventWysiwyg.removeEventListener('drop', event.onDrop_wysiwyg);\n      eventWysiwyg.removeEventListener('scroll', event.onScroll_wysiwyg);\n      eventWysiwyg.removeEventListener('mousemove', event.onMouseMove_wysiwyg);\n      core._lineBreakerButton.removeEventListener('mousedown', event._onMouseDown_lineBreak);\n      core._lineBreakerButton.removeEventListener('click', event._lineBreakerBind.a);\n      context.element.lineBreaker_t.removeEventListener('mousedown', event._lineBreakerBind.t);\n      context.element.lineBreaker_b.removeEventListener('mousedown', event._lineBreakerBind.b);\n      event._lineBreakerBind = null;\n      eventWysiwyg.removeEventListener('touchstart', event.onMouseDown_wysiwyg, {\n        passive: true,\n        useCapture: false\n      });\n      eventWysiwyg.removeEventListener('touchend', event.onClick_wysiwyg, {\n        passive: true,\n        useCapture: false\n      });\n      eventWysiwyg.removeEventListener('focus', event.onFocus_wysiwyg);\n      eventWysiwyg.removeEventListener('blur', event.onBlur_wysiwyg);\n      context.element.code.removeEventListener('keydown', event._codeViewAutoHeight);\n      context.element.code.removeEventListener('keyup', event._codeViewAutoHeight);\n      context.element.code.removeEventListener('paste', event._codeViewAutoHeight);\n      if (context.element.resizingBar) {\n        context.element.resizingBar.removeEventListener('mousedown', event.onMouseDown_resizingBar);\n      }\n      if (event._resizeObserver) {\n        event._resizeObserver.unobserve(context.element.wysiwygFrame);\n        event._resizeObserver = null;\n      }\n      if (event._toolbarObserver) {\n        event._toolbarObserver.unobserve(context.element._toolbarShadow);\n        event._toolbarObserver = null;\n      }\n      _w.removeEventListener('resize', event.onResize_window);\n      _w.removeEventListener('scroll', event.onScroll_window);\n    },\n    _setResponsiveToolbar: function () {\n      if (_responsiveButtons.length === 0) {\n        _responsiveButtons = null;\n        return;\n      }\n      event._responsiveCurrentSize = 'default';\n      const sizeArray = event._responsiveButtonSize = [];\n      const buttonsObj = event._responsiveButtons = {\n        default: _responsiveButtons[0]\n      };\n      for (let i = 1, len = _responsiveButtons.length, size, buttonGroup; i < len; i++) {\n        buttonGroup = _responsiveButtons[i];\n        size = buttonGroup[0] * 1;\n        sizeArray.push(size);\n        buttonsObj[size] = buttonGroup[1];\n      }\n      sizeArray.sort(function (a, b) {\n        return a - b;\n      }).unshift('default');\n    }\n  };\n\n  /** functions */\n  const functions = {\n    /**\r\n     * @description Core, Util object\r\n     */\n    core: core,\n    util: util,\n    /**\r\n     * @description Event functions\r\n     * @param {Object} e Event Object\r\n     * @param {Object} core Core object\r\n     */\n    onload: null,\n    onScroll: null,\n    onMouseDown: null,\n    onClick: null,\n    onInput: null,\n    onKeyDown: null,\n    onKeyUp: null,\n    onCopy: null,\n    onCut: null,\n    onFocus: null,\n    /**\r\n     * @description Event functions\r\n     * @param {Object} e Event Object\r\n     * @param {Object} core Core object\r\n     * @param {String} contents Current contents\r\n     */\n    onBlur: null,\n    /**\r\n     * @description Event functions\r\n     * @param {String} contents Current contents\r\n     * @param {Object} core Core object\r\n     */\n    onChange: null,\n    /**\r\n     * @description Event functions\r\n     * @param {String} contents Current contents\r\n     * @param {Object} core Core object\r\n     */\n    onSave: null,\n    /**\r\n     * @description Event functions (drop, paste)\r\n     * When false is returned, the default behavior is stopped.\r\n     * If the string is returned, the cleanData value is modified to the return value.\r\n     * @param {Object} e Event object.\r\n     * @param {String} cleanData HTML string modified for editor format.\r\n     * @param {Boolean} maxChartCount option (true if max character is exceeded)\r\n     * @param {Object} core Core object\r\n     * @returns {Boolean|String}\r\n     */\n    onDrop: null,\n    onPaste: null,\n    /**\r\n     * @description Called just before the inline toolbar is positioned and displayed on the screen.\r\n     * @param {Element} toolbar Toolbar Element\r\n     * @param {Object} context The editor's context object (editor.getContext())\r\n     * @param {Object} core Core object\r\n     */\n    showInline: null,\n    /**\r\n     * @description Called just after the controller is positioned and displayed on the screen.\r\n     * controller - editing elements displayed on the screen [image resizing, table editor, link editor..]]\r\n     * @param {String} name The name of the plugin that called the controller\r\n     * @param {Array} controllers Array of Controller elements\r\n     * @param {Object} core Core object\r\n     */\n    showController: null,\n    /**\r\n     * @description An event when toggling between code view and wysiwyg view.\r\n     * @param {Boolean} isCodeView Whether the current code view mode\r\n     * @param {Object} core Core object\r\n     */\n    toggleCodeView: null,\n    /**\r\n     * @description An event when toggling full screen.\r\n     * @param {Boolean} isFullScreen Whether the current full screen mode\r\n     * @param {Object} core Core object\r\n     */\n    toggleFullScreen: null,\n    /**\r\n     * @description It replaces the default callback function of the image upload\r\n     * @param {Object} response Response object\r\n     * @param {Object} info Input information\r\n     * - linkValue: Link url value\r\n     * - linkNewWindow: Open in new window Check Value\r\n     * - inputWidth: Value of width input\r\n     * - inputHeight: Value of height input\r\n     * - align: Align Check Value\r\n     * - isUpdate: Update image if true, create image if false\r\n     * - element: If isUpdate is true, the currently selected image.\r\n     * @param {Object} core Core object\r\n     */\n    imageUploadHandler: null,\n    /**\r\n     * @description It replaces the default callback function of the video upload\r\n     * @param xmlHttp xmlHttpRequest object\r\n     * @param info Input information\r\n     * - inputWidth: Value of width input\r\n     * - inputHeight: Value of height input\r\n     * - align: Align Check Value\r\n     * - isUpdate: Update video if true, create video if false\r\n     * - element: If isUpdate is true, the currently selected video.\r\n     * @param core Core object\r\n     */\n    videoUploadHandler: null,\n    /**\r\n     * @description It replaces the default callback function of the audio upload\r\n     * @param xmlHttp xmlHttpRequest object\r\n     * @param info Input information\r\n     * - isUpdate: Update audio if true, create audio if false\r\n     * - element: If isUpdate is true, the currently selected audio.\r\n     * @param core Core object\r\n     */\n    audioUploadHandler: null,\n    /**\r\n     * @description Called before the image is uploaded\r\n     * If true is returned, the internal upload process runs normally.\r\n     * If false is returned, no image upload is performed.\r\n     * If new fileList are returned,  replaced the previous fileList\r\n     * If undefined is returned, it waits until \"uploadHandler\" is executed.\r\n     * @param {Array} files Files array\r\n     * @param {Object} info info: {\r\n     * - linkValue: Link url value\r\n     * - linkNewWindow: Open in new window Check Value\r\n     * - inputWidth: Value of width input\r\n     * - inputHeight: Value of height input\r\n     * - align: Align Check Value\r\n     * - isUpdate: Update image if true, create image if false\r\n     * - element: If isUpdate is true, the currently selected image.\r\n     * }\r\n     * @param {Object} core Core object\r\n     * @param {Function} uploadHandler If undefined is returned, it waits until \"uploadHandler\" is executed.\r\n     *                \"uploadHandler\" is an upload function with \"core\" and \"info\" bound.\r\n     *                [upload files] : uploadHandler(files or [new File(...),])\r\n     *                [error]        : uploadHandler(\"Error message\")\r\n     *                [Just finish]  : uploadHandler()\r\n     *                [directly register] : uploadHandler(response) // Same format as \"imageUploadUrl\" response\r\n     *                                   ex) {\r\n     *                                      // \"errorMessage\": \"insert error message\",\r\n     *                                      \"result\": [ { \"url\": \"...\", \"name\": \"...\", \"size\": \"999\" }, ]\r\n     *                                   }\r\n     * @returns {Boolean|Array|undefined}\r\n     */\n    onImageUploadBefore: null,\n    /**\r\n     * @description Called before the video is uploaded\r\n     * If true is returned, the internal upload process runs normally.\r\n     * If false is returned, no video(iframe, video) upload is performed.\r\n     * If new fileList are returned,  replaced the previous fileList\r\n     * If undefined is returned, it waits until \"uploadHandler\" is executed.\r\n     * @param {Array} files Files array\r\n     * @param {Object} info info: {\r\n     * - inputWidth: Value of width input\r\n     * - inputHeight: Value of height input\r\n     * - align: Align Check Value\r\n     * - isUpdate: Update video if true, create video if false\r\n     * - element: If isUpdate is true, the currently selected video.\r\n     * }\r\n     * @param {Object} core Core object\r\n     * @param {Function} uploadHandler If undefined is returned, it waits until \"uploadHandler\" is executed.\r\n     *                \"uploadHandler\" is an upload function with \"core\" and \"info\" bound.\r\n     *                [upload files] : uploadHandler(files or [new File(...),])\r\n     *                [error]        : uploadHandler(\"Error message\")\r\n     *                [Just finish]  : uploadHandler()\r\n     *                [directly register] : uploadHandler(response) // Same format as \"videoUploadUrl\" response\r\n     *                                   ex) {\r\n     *                                      // \"errorMessage\": \"insert error message\",\r\n     *                                      \"result\": [ { \"url\": \"...\", \"name\": \"...\", \"size\": \"999\" }, ]\r\n     *                                   }\r\n     * @returns {Boolean|Array|undefined}\r\n     */\n    onVideoUploadBefore: null,\n    /**\r\n     * @description Called before the audio is uploaded\r\n     * If true is returned, the internal upload process runs normally.\r\n     * If false is returned, no audio upload is performed.\r\n     * If new fileList are returned,  replaced the previous fileList\r\n     * If undefined is returned, it waits until \"uploadHandler\" is executed.\r\n     * @param {Array} files Files array\r\n     * @param {Object} info info: {\r\n     * - isUpdate: Update audio if true, create audio if false\r\n     * - element: If isUpdate is true, the currently selected audio.\r\n     * }\r\n     * @param {Object} core Core object\r\n     * @param {Function} uploadHandler If undefined is returned, it waits until \"uploadHandler\" is executed.\r\n     *                \"uploadHandler\" is an upload function with \"core\" and \"info\" bound.\r\n     *                [upload files] : uploadHandler(files or [new File(...),])\r\n     *                [error]        : uploadHandler(\"Error message\")\r\n     *                [Just finish]  : uploadHandler()\r\n     *                [directly register] : uploadHandler(response) // Same format as \"audioUploadUrl\" response\r\n     *                                   ex) {\r\n     *                                      // \"errorMessage\": \"insert error message\",\r\n     *                                      \"result\": [ { \"url\": \"...\", \"name\": \"...\", \"size\": \"999\" }, ]\r\n     *                                   }\r\n     * @returns {Boolean|Array|undefined}\r\n     */\n    onAudioUploadBefore: null,\n    /**\r\n     * @description Called when the image is uploaded, updated, deleted\r\n     * @param {Element} targetElement Target element\r\n     * @param {Number} index Uploaded index\r\n     * @param {String} state Upload status ('create', 'update', 'delete')\r\n     * @param {Object} info Image info object\r\n     * - index: data index\r\n     * - name: file name\r\n     * - size: file size\r\n     * - select: select function\r\n     * - delete: delete function\r\n     * - element: target element\r\n     * - src: src attribute of tag\r\n     * @param {Number} remainingFilesCount Count of remaining files to upload (0 when added as a url)\r\n     * @param {Object} core Core object\r\n     */\n    onImageUpload: null,\n    /**\r\n    * @description Called when the video(iframe, video) is is uploaded, updated, deleted\r\n    * -- arguments is same \"onImageUpload\" --\r\n    */\n    onVideoUpload: null,\n    /**\r\n    * @description Called when the audio is is uploaded, updated, deleted\r\n    * -- arguments is same \"onImageUpload\" --\r\n    */\n    onAudioUpload: null,\n    /**\r\n     * @description Called when the image is upload failed\r\n     * @param {String} errorMessage Error message\r\n     * @param {Object} result Response Object\r\n     * @param {Object} core Core object\r\n     * @returns {Boolean}\r\n     */\n    onImageUploadError: null,\n    /**\r\n     * @description Called when the video(iframe, video) upload failed\r\n     * -- arguments is same \"onImageUploadError\" --\r\n     */\n    onVideoUploadError: null,\n    /**\r\n     * @description Called when the audio upload failed\r\n     * -- arguments is same \"onImageUploadError\" --\r\n     */\n    onAudioUploadError: null,\n    /**\r\n     * @description Called when the editor is resized using the bottom bar\r\n     */\n    onResizeEditor: null,\n    /**\r\n     * @description Called after the \"setToolbarButtons\" invocation.\r\n     * Can be used to tweak buttons properties (useful for custom buttons)\r\n     * @param {Array} buttonList Button list \r\n     * @param {Object} core Core object\r\n     */\n    onSetToolbarButtons: null,\n    /**\r\n     * @description Reset the buttons on the toolbar. (Editor is not reloaded)\r\n     * You cannot set a new plugin for the button.\r\n     * @param {Array} buttonList Button list \r\n     */\n    setToolbarButtons: function (buttonList) {\n      core.submenuOff();\n      core.containerOff();\n      core.moreLayerOff();\n      const newToolbar = _Constructor._createToolBar(_d, buttonList, core.plugins, options);\n      _responsiveButtons = newToolbar.responsiveButtons;\n      event._setResponsiveToolbar();\n      context.element.toolbar.replaceChild(newToolbar._buttonTray, context.element._buttonTray);\n      const newContext = _Context(context.element.originElement, core._getConstructed(context.element), options);\n      context.element = newContext.element;\n      context.tool = newContext.tool;\n      if (options.iframe) context.element.wysiwyg = core._wd.body;\n      core._recoverButtonStates();\n      core._cachingButtons();\n      core.history._resetCachingButton();\n      core.effectNode = null;\n      if (core.hasFocus) event._applyTagEffects();\n      if (core.isReadOnly) util.setDisabledButtons(true, core.resizingDisabledButtons);\n      if (typeof functions.onSetToolbarButtons === 'function') functions.onSetToolbarButtons(newToolbar._buttonTray.querySelectorAll('button'), core);\n    },\n    /**\r\n     * @description Add or reset option property (Editor is reloaded)\r\n     * @param {Object} _options Options\r\n     */\n    setOptions: function (_options) {\n      event._removeEvent();\n      core._resetComponents();\n      util.removeClass(core._styleCommandMap.showBlocks, 'active');\n      util.removeClass(core._styleCommandMap.codeView, 'active');\n      core._variable.isCodeView = false;\n      core._iframeAuto = null;\n      core.plugins = _options.plugins || core.plugins;\n      const mergeOptions = [options, _options].reduce(function (init, option) {\n        for (let key in option) {\n          if (!util.hasOwn(option, key)) continue;\n          if (key === 'plugins' && option[key] && init[key]) {\n            let i = init[key],\n              o = option[key];\n            i = i.length ? i : _w.Object.keys(i).map(function (name) {\n              return i[name];\n            });\n            o = o.length ? o : _w.Object.keys(o).map(function (name) {\n              return o[name];\n            });\n            init[key] = o.filter(function (val) {\n              return i.indexOf(val) === -1;\n            }).concat(i);\n          } else {\n            init[key] = option[key];\n          }\n        }\n        return init;\n      }, {});\n      const el = context.element;\n      const _initHTML = el.wysiwyg.innerHTML;\n\n      // set option\n      const cons = _Constructor._setOptions(mergeOptions, context, options);\n      if (cons.callButtons) {\n        pluginCallButtons = cons.callButtons;\n        core.initPlugins = {};\n      }\n      if (cons.plugins) {\n        core.plugins = plugins = cons.plugins;\n      }\n\n      // reset context\n      if (el._menuTray.children.length === 0) this._menuTray = {};\n      _responsiveButtons = cons.toolbar.responsiveButtons;\n      core.options = options = mergeOptions;\n      core.lang = lang = options.lang;\n      if (options.iframe) {\n        el.wysiwygFrame.addEventListener('load', function () {\n          util._setIframeDocument(this, options);\n          core._setOptionsInit(el, _initHTML);\n        });\n      }\n      el.editorArea.appendChild(el.wysiwygFrame);\n      if (!options.iframe) {\n        core._setOptionsInit(el, _initHTML);\n      }\n    },\n    /**\r\n     * @description Set \"options.defaultStyle\" style.\r\n     * Define the style of the edit area\r\n     * It can also be defined with the \"setOptions\" method, but the \"setDefaultStyle\" method does not render the editor again.\r\n     * @param {String} style Style string\r\n     */\n    setDefaultStyle: function (style) {\n      const newStyles = options._editorStyles = util._setDefaultOptionStyle(options, style);\n      const el = context.element;\n\n      // top area\n      el.topArea.style.cssText = newStyles.top;\n      // code view\n      el.code.style.cssText = options._editorStyles.frame;\n      el.code.style.display = 'none';\n      if (options.height === 'auto') {\n        el.code.style.overflow = 'hidden';\n      } else {\n        el.code.style.overflow = '';\n      }\n      // wysiwyg frame\n      if (!options.iframe) {\n        el.wysiwygFrame.style.cssText = newStyles.frame + newStyles.editor;\n      } else {\n        el.wysiwygFrame.style.cssText = newStyles.frame;\n        el.wysiwyg.style.cssText = newStyles.editor;\n      }\n    },\n    /**\r\n     * @description Open a notice area\r\n     * @param {String} message Notice message\r\n     */\n    noticeOpen: function (message) {\n      core.notice.open.call(core, message);\n    },\n    /**\r\n     * @description Close a notice area\r\n     */\n    noticeClose: function () {\n      core.notice.close.call(core);\n    },\n    /**\r\n     * @description Copying the contents of the editor to the original textarea and execute onSave callback\r\n     * * not working during enabled codeView mode\r\n     */\n    save: function () {\n      const contents = core.getContents(false);\n      context.element.originElement.value = contents;\n      event.onSave_wysiwyg(contents, core);\n    },\n    /**\r\n     * @description Gets the suneditor's context object. Contains settings, plugins, and cached element objects\r\n     * @returns {Object}\r\n     */\n    getContext: function () {\n      return context;\n    },\n    /**\r\n     * @description Gets the contents of the suneditor\r\n     * * not working during enabled codeView mode\r\n     * @param {Boolean} onlyContents - Return only the contents of the body without headers when the \"fullPage\" option is true\r\n     * @returns {String}\r\n     */\n    getContents: function (onlyContents) {\n      return core.getContents(onlyContents);\n    },\n    /**\r\n     * @description Gets only the text of the suneditor contents\r\n     * * not working during enabled codeView mode\r\n     * @returns {String}\r\n     */\n    getText: function () {\n      return context.element.wysiwyg.textContent;\n    },\n    /**\r\n     * @description Get the editor's number of characters or binary data size.\r\n     * You can use the \"charCounterType\" option format.\r\n     * @param {String|null} charCounterType options - charCounterType ('char', 'byte', 'byte-html')\r\n     * If argument is no value, the currently set \"charCounterType\" option is used.\r\n     * @returns {Number}\r\n     */\n    getCharCount: function (charCounterType) {\n      charCounterType = typeof charCounterType === 'string' ? charCounterType : options.charCounterType;\n      return core.getCharLength(core._charTypeHTML ? context.element.wysiwyg.innerHTML : context.element.wysiwyg.textContent, charCounterType);\n    },\n    /**\r\n     * @description Gets uploaded images informations\r\n     * - index: data index\r\n     * - name: file name\r\n     * - size: file size\r\n     * - select: select function\r\n     * - delete: delete function\r\n     * - element: target element\r\n     * - src: src attribute of tag\r\n     * @returns {Array}\r\n     */\n    getImagesInfo: function () {\n      return context.image ? context.image._infoList : [];\n    },\n    /**\r\n     * @description Gets uploaded files(plugin using fileManager) information list.\r\n     * image: [img], video: [video, iframe], audio: [audio]\r\n     * When the argument value is 'image', it is the same function as \"getImagesInfo\".\r\n     * - index: data index\r\n     * - name: file name\r\n     * - size: file size\r\n     * - select: select function\r\n     * - delete: delete function\r\n     * - element: target element\r\n     * - src: src attribute of tag\r\n     * @param {String} pluginName Plugin name (image, video, audio)\r\n     * @returns {Array}\r\n     */\n    getFilesInfo: function (pluginName) {\n      return context[pluginName] ? context[pluginName]._infoList : [];\n    },\n    /**\r\n     * @description Upload images using image plugin\r\n     * @param {FileList} files FileList\r\n     */\n    insertImage: function (files) {\n      if (!core.plugins.image || !files) return;\n      if (!core.initPlugins.image) core.callPlugin('image', core.plugins.image.submitAction.bind(core, files), null);else core.plugins.image.submitAction.call(core, files);\n      core.focus();\n    },\n    /**\r\n     * @description Inserts an HTML element or HTML string or plain string at the current cursor position\r\n     * @param {Element|String} html HTML Element or HTML string or plain string\r\n     * @param {Boolean} notCleaningData If true, inserts the HTML string without refining it with core.cleanHTML.\r\n     * @param {Boolean} checkCharCount If true, if \"options.maxCharCount\" is exceeded when \"element\" is added, null is returned without addition.\r\n     * @param {Boolean} rangeSelection If true, range select the inserted node.\r\n     */\n    insertHTML: function (html, notCleaningData, checkCharCount, rangeSelection) {\n      if (!context.element.wysiwygFrame.contains(core.getSelection().focusNode)) core.focus();\n      if (typeof html === 'string') {\n        if (!notCleaningData) html = core.cleanHTML(html, null, null);\n        try {\n          if (util.isListCell(util.getFormatElement(core.getSelectionNode(), null))) {\n            const dom = _d.createRange().createContextualFragment(html);\n            const domTree = dom.childNodes;\n            if (core._isFormatData(domTree)) html = core._convertListCell(domTree);\n          }\n          const dom = _d.createRange().createContextualFragment(html);\n          const domTree = dom.childNodes;\n          if (checkCharCount) {\n            const type = core._charTypeHTML ? 'outerHTML' : 'textContent';\n            let checkHTML = '';\n            for (let i = 0, len = domTree.length; i < len; i++) {\n              checkHTML += domTree[i][type];\n            }\n            if (!core.checkCharCount(checkHTML, null)) return;\n          }\n          let c, a, t, prev, firstCon;\n          while (c = domTree[0]) {\n            if (prev && prev.nodeType === 3 && a && a.nodeType === 1 && util.isBreak(c)) {\n              prev = c;\n              util.removeItem(c);\n              continue;\n            }\n            t = core.insertNode(c, a, false);\n            a = t.container || t;\n            if (!firstCon) firstCon = t;\n            prev = c;\n          }\n          if (prev.nodeType === 3 && a.nodeType === 1) a = prev;\n          const offset = a.nodeType === 3 ? t.endOffset || a.textContent.length : a.childNodes.length;\n          if (rangeSelection) core.setRange(firstCon.container || firstCon, firstCon.startOffset || 0, a, offset);else core.setRange(a, offset, a, offset);\n        } catch (error) {\n          if (core.isDisabled || core.isReadOnly) return;\n          console.warn('[SUNEDITOR.insertHTML.fail] ' + error);\n          core.execCommand('insertHTML', false, html);\n        }\n      } else {\n        if (util.isComponent(html)) {\n          core.insertComponent(html, false, checkCharCount, false);\n        } else {\n          let afterNode = null;\n          if (util.isFormatElement(html) || util.isMedia(html)) {\n            afterNode = util.getFormatElement(core.getSelectionNode(), null);\n          }\n          core.insertNode(html, afterNode, checkCharCount);\n        }\n      }\n      core.effectNode = null;\n      core.focus();\n\n      // history stack\n      core.history.push(false);\n    },\n    /**\r\n     * @description Change the contents of the suneditor\r\n     * @param {String|undefined} contents Contents to Input\r\n     */\n    setContents: function (contents) {\n      core.setContents(contents);\n    },\n    /**\r\n     * @description Add contents to the suneditor\r\n     * @param {String} contents Contents to Input\r\n     */\n    appendContents: function (contents) {\n      const convertValue = core.convertContentsForEditor(contents);\n      if (!core._variable.isCodeView) {\n        const temp = util.createElement('DIV');\n        temp.innerHTML = convertValue;\n        const wysiwyg = context.element.wysiwyg;\n        const children = temp.children;\n        for (let i = 0, len = children.length; i < len; i++) {\n          if (children[i]) {\n            wysiwyg.appendChild(children[i]);\n          }\n        }\n      } else {\n        core._setCodeView(core._getCodeView() + '\\n' + core.convertHTMLForCodeView(convertValue, false));\n      }\n\n      // history stack\n      core.history.push(false);\n    },\n    /**\r\n     * @description Switch to or off \"ReadOnly\" mode.\r\n     * @param {Boolean} value \"readOnly\" boolean value.\r\n     */\n    readOnly: function (value) {\n      core.isReadOnly = value;\n      util.setDisabledButtons(!!value, core.resizingDisabledButtons);\n      if (value) {\n        /** off menus */\n        core.controllersOff();\n        if (core.submenuActiveButton && core.submenuActiveButton.disabled) core.submenuOff();\n        if (core._moreLayerActiveButton && core._moreLayerActiveButton.disabled) core.moreLayerOff();\n        if (core.containerActiveButton && core.containerActiveButton.disabled) core.containerOff();\n        if (core.modalForm) core.plugins.dialog.close.call(core);\n        context.element.code.setAttribute(\"readOnly\", \"true\");\n        util.addClass(context.element.wysiwygFrame, 'se-read-only');\n      } else {\n        context.element.code.removeAttribute(\"readOnly\");\n        util.removeClass(context.element.wysiwygFrame, 'se-read-only');\n      }\n      if (options.codeMirrorEditor) options.codeMirrorEditor.setOption('readOnly', !!value);\n    },\n    /**\r\n     * @description Disable the suneditor\r\n     */\n    disable: function () {\n      this.toolbar.disable();\n      this.wysiwyg.disable();\n    },\n    /**\r\n     * @description Provided for backward compatibility and will be removed in 3.0.0 version\r\n     */\n    disabled: function () {\n      this.disable();\n    },\n    /**\r\n     * @description Enable the suneditor\r\n     */\n    enable: function () {\n      this.toolbar.enable();\n      this.wysiwyg.enable();\n    },\n    /**\r\n     * @description Provided for backward compatibility and will be removed in 3.0.0 version\r\n     */\n    enabled: function () {\n      this.enable();\n    },\n    /**\r\n     * @description Show the suneditor\r\n     */\n    show: function () {\n      const topAreaStyle = context.element.topArea.style;\n      if (topAreaStyle.display === 'none') topAreaStyle.display = options.display;\n    },\n    /**\r\n     * @description Hide the suneditor\r\n     */\n    hide: function () {\n      context.element.topArea.style.display = 'none';\n    },\n    /**\r\n     * @description Destroy the suneditor\r\n     */\n    destroy: function () {\n      /** off menus */\n      core.submenuOff();\n      core.containerOff();\n      core.controllersOff();\n      if (core.notice) core.notice.close.call(core);\n      if (core.modalForm) core.plugins.dialog.close.call(core);\n\n      /** remove history */\n      core.history._destroy();\n\n      /** remove event listeners */\n      event._removeEvent();\n\n      /** remove element */\n      util.removeItem(context.element.toolbar);\n      util.removeItem(context.element.topArea);\n\n      /** remove object reference */\n      for (let k in core.functions) {\n        if (util.hasOwn(core, k)) delete core.functions[k];\n      }\n      for (let k in core) {\n        if (util.hasOwn(core, k)) delete core[k];\n      }\n      for (let k in event) {\n        if (util.hasOwn(event, k)) delete event[k];\n      }\n      for (let k in context) {\n        if (util.hasOwn(context, k)) delete context[k];\n      }\n      for (let k in pluginCallButtons) {\n        if (util.hasOwn(pluginCallButtons, k)) delete pluginCallButtons[k];\n      }\n\n      /** remove user object */\n      for (let k in this) {\n        if (util.hasOwn(this, k)) delete this[k];\n      }\n    },\n    /**\r\n     * @description Toolbar methods\r\n     */\n    toolbar: {\n      /**\r\n       * @description Disable the toolbar\r\n       */\n      disable: function () {\n        /** off menus */\n        core.submenuOff();\n        core.moreLayerOff();\n        core.containerOff();\n        context.tool.cover.style.display = 'block';\n      },\n      /**\r\n       * @description Provided for backward compatibility and will be removed in 3.0.0 version\r\n       */\n      disabled: function () {\n        this.disable();\n      },\n      /**\r\n       * @description Enable the toolbar\r\n       */\n      enable: function () {\n        context.tool.cover.style.display = 'none';\n      },\n      /**\r\n       * @description Provided for backward compatibility and will be removed in 3.0.0 version\r\n       */\n      enabled: function () {\n        this.enable();\n      },\n      /**\r\n       * @description Show the toolbar\r\n       */\n      show: function () {\n        if (core._isInline) {\n          event._showToolbarInline();\n        } else {\n          context.element.toolbar.style.display = '';\n          context.element._stickyDummy.style.display = '';\n        }\n        event.onResize_window();\n      },\n      /**\r\n       * @description Hide the toolbar\r\n       */\n      hide: function () {\n        if (core._isInline) {\n          event._hideToolbar();\n        } else {\n          context.element.toolbar.style.display = 'none';\n          context.element._stickyDummy.style.display = 'none';\n        }\n        event.onResize_window();\n      }\n    },\n    /**\r\n     * @description Wysiwyg methods\r\n     */\n    wysiwyg: {\n      /**\r\n       * @description Disable the wysiwyg area\r\n       */\n      disable: function () {\n        /** off menus */\n        core.controllersOff();\n        if (core.modalForm) core.plugins.dialog.close.call(core);\n        context.element.wysiwyg.setAttribute('contenteditable', false);\n        core.isDisabled = true;\n        if (options.codeMirrorEditor) {\n          options.codeMirrorEditor.setOption('readOnly', true);\n        } else {\n          context.element.code.setAttribute('disabled', 'disabled');\n        }\n      },\n      /**\r\n       * @description Enable the wysiwyg area\r\n       */\n      enable: function () {\n        context.element.wysiwyg.setAttribute('contenteditable', true);\n        core.isDisabled = false;\n        if (options.codeMirrorEditor) {\n          options.codeMirrorEditor.setOption('readOnly', false);\n        } else {\n          context.element.code.removeAttribute('disabled');\n        }\n      }\n    }\n  };\n\n  /************ Core init ************/\n  // functions\n  core.functions = functions;\n  core.options = options;\n\n  // Create to sibling node\n  let contextEl = context.element;\n  let originEl = contextEl.originElement;\n  let topEl = contextEl.topArea;\n  originEl.style.display = 'none';\n  topEl.style.display = 'block';\n\n  // init\n  if (options.iframe) {\n    contextEl.wysiwygFrame.addEventListener('load', function () {\n      util._setIframeDocument(this, options);\n      core._editorInit(false, options.value);\n      options.value = null;\n    });\n  }\n\n  // insert editor element\n  if (typeof originEl.nextElementSibling === 'object') {\n    originEl.parentNode.insertBefore(topEl, originEl.nextElementSibling);\n  } else {\n    originEl.parentNode.appendChild(topEl);\n  }\n  contextEl.editorArea.appendChild(contextEl.wysiwygFrame);\n  contextEl = originEl = topEl = null;\n\n  // init\n  if (!options.iframe) {\n    core._editorInit(false, options.value);\n    options.value = null;\n  }\n  return functions;\n}","map":{"version":3,"names":["_Constructor","_Context","_history","_util","_notice","context","pluginCallButtons","plugins","lang","options","_responsiveButtons","_d","element","originElement","ownerDocument","document","_w","defaultView","window","util","icons","core","_parser","DOMParser","_prevRtl","rtl","_editorHeight","_editorHeightPadding","_listCamel","__listCommonStyle","_listKebab","camelToKebabCase","_wd","_ww","_shadowRoot","_shadowRootControllerEventTarget","functions","wwComputedStyle","notice","history","initPlugins","_targetPlugins","_menuTray","effectNode","submenu","container","_submenuName","_bindedSubmenuOff","_bindedContainerOff","submenuActiveButton","containerActiveButton","controllerArray","currentControllerName","currentControllerTarget","currentFileComponentInfo","codeViewDisabledButtons","resizingDisabledButtons","_moreLayerActiveButton","_htmlCheckWhitelistRegExp","_htmlCheckBlacklistRegExp","_disallowedTextTagsRegExp","editorTagsWhitelistRegExp","editorTagsBlacklistRegExp","pasteTagsWhitelistRegExp","pasteTagsBlacklistRegExp","hasFocus","isDisabled","isReadOnly","_attributesWhitelistRegExp","_attributesWhitelistRegExp_all_data","_attributesBlacklistRegExp","_attributesTagsWhitelist","_attributesTagsBlacklist","_bindControllersOff","_isInline","_isBalloon","_isBalloonAlways","_inlineToolbarAttr","top","width","isShow","_notHideToolbar","_sticky","_antiBlur","_lineBreaker","_lineBreakerButton","_componentsInfoInit","_componentsInfoReset","activePlugins","managedTagsInfo","_charTypeHTML","_fileInfoPluginsCheck","_fileInfoPluginsReset","_fileManager","tags","regExp","queryString","pluginRegExp","pluginMap","commandMap","_commandMapStyles","STRONG","U","EM","DEL","_styleCommandMap","_cleanStyleRegExp","span","RegExp","format","fontSizeUnit","_variable","isChanged","isCodeView","isFullScreen","innerHeight_fullScreen","resizeClientY","tabSize","codeIndent","minResizingSize","getNumber","wysiwygFrame","style","minHeight","currentNodes","currentNodesMap","_range","_selectionNode","_originCssText","topArea","cssText","_bodyOverflow","_editorAreaOriginCssText","_wysiwygOriginCssText","_codeOriginCssText","_fullScreenAttrs","sticky","balloon","inline","_lineBreakComp","_lineBreakDir","_formatAttrsTemp","_saveButtonStates","allCommandButtons","currentButtons","_buttonTray","querySelectorAll","i","command","length","getAttribute","_recoverButtonStates","button","oldButton","parentElement","replaceChild","tool","callPlugin","pluginName","callBackFunction","_target","Error","add","initMenuTarget","active","push","addModule","moduleArray","len","moduleName","name","getGlobalScrollOffset","t","l","el","scrollTop","scrollLeft","host","left","target","menu","appendChild","submenuOn","controllersOff","submenuName","_setMenuPosition","submenuOff","bind","addDocEvent","on","call","removeDocEvent","display","removeClass","moreLayerOff","layer","toolbar","querySelector","containerOn","containerName","_containerName","containerOff","visibility","height","addClass","toolbarW","offsetWidth","toolbarOffset","event","_getEditorOffsets","menuW","offsetLeft","elementW","rtlW","rtlL","overLeft","offsetEl","offsetTop","offsetParent","bt","offsetHeight","toolbarTop","menuHeight","menuHeight_bottom","innerHeight","menuTop","insTop","menuHeight_top","controllersOn","arg","arguments","hasClass","getFileComponent","indexOf","addEventListener","e","preventDefault","stopPropagation","showController","contains","test","type","keyCode","lineBreaker_t","lineBreaker_b","setControllerPosition","controller","referEl","position","addOffset","offset","getOffset","topMargin","controllerW","referElW","allow","firstElementChild","overSize","execCommand","showDefaultUI","value","nativeFocus","__focus","_editorRange","caption","getParentElement","getSelectionNode","focus","wysiwyg","iframe","range","getRange","startContainer","endContainer","isWysiwygDiv","currentNode","commonAncestorContainer","children","startOffset","isFormatElement","isComponent","createElement","defaultTag","br","insertBefore","setRange","endOffset","_applyTagEffects","_toggleToolbarBalloon","focusEdge","focusEl","lastElementChild","fileComponentInfo","selectComponent","getChildElement","current","childNodes","nodeType","textContent","blur","startCon","startOff","endCon","endOff","createRange","setStart","setEnd","error","console","warn","selection","getSelection","removeAllRanges","addRange","_rangeInfo","removeRange","_setKeyEffect","_createDefaultRange","collapsed","isCollapsed","focusNode","rangeCount","getRangeAt","sc","anchorNode","ec","so","anchorOffset","eo","focusOffset","compareValue","compareElements","rightDir","ancestor","result","getRange_addLine","_selectionVoid","op","innerHTML","nextElementSibling","selectionNode","firstChild","activeEl","activeElement","isInputElement","extentNode","firstFormat","comm","nodeName","isMediaComponent","_resetRangeToTextNode","tempCon","tempOffset","tempChild","lastChild","isBreak","onlyBreak","nextSibling","getFormatElement","getRangeFormatElement","isCell","parentNode","emptyText","createTextNode","zeroWidthSpace","previousElementSibling","previousSibling","removeItem","getSelectedElements","validation","trim","commonCon","lineNodes","getListChildren","isRangeFormatElement","unshift","startLine","endLine","startIdx","endIdx","onlyTable","isTable","startRangeEl","endRangeEl","isListCell","sameRange","line","slice","getSelectedElementsAndComponents","removeDuplicate","myComponent","selectedLines","component","j","splice","isEdgePoint","dir","nodeValue","_isEdgeFormat","node","cloneNode","showLoading","loading","closeLoading","appendFormatTag","formatNode","currentFormatEl","oFormat","isFreeFormatElement","oFormatName","copyTagAttributes","insertComponent","notHistoryPush","checkCharCount","notSelect","r","removeNode","oNode","formatEl","insertNode","depthFormat","splitElement","getElementDepth","onlyZeroWidthSpace","getEdgeChildNodes","className","toLowerCase","isUneditableComponent","plugin","setTimeout","select","_setComponentLineBreaker","t_style","b_style","resizing","resizeContainer","isList","componentTop","wScroll","w","_checkDuplicateNode","recursionFunc","_dupleCheck","isTextStyleElement","oStyles","match","map","v","duple","styles","classList","remove","join","setAttribute","removeAttribute","attributes","afterNode","insertListCell","originAfter","tempAfterNode","tempParentNode","freeFormat","isFormats","isMedia","isEdge","prevContainer","sameParent","subList","newCell","formatRange","splitText","c","removeChild","isSameContainer","removedTag","oldParent","rangeCon","fNode","ul","chList","getArrayItem","dupleNodes","d","ch","parent","cItem","isEmptyLine","_setIntoFreeFormat","previous","next","previousText","nextText","newRange","zeroWidth","_isIgnoreNodeChange","oNodeChildren","lastONode","isStartEdge","isEndEdge","startPrevEl","endNextEl","substr","beforeNode","getListChildNodes","startIndex","getArrayIndex","endIndex","startNode","endNode","item","data","undefined","_nodeRemoveListItem","substringData","endUl","startLi","rc","removeItemAllParents","applyRangeFormatElement","rangeElement","rangeLines","linesLoop","nested","fEl","lEl","f","list","last","standTag","beforeTag","pElement","parentDepth","listParent","lineArr","removeItems","origin","before","cc","originParent","depth","nextLine","nextList","p","edge","detachRangeFormatElement","cLen","removeArray","mergeSameTags","mergeNestedTags","splitRange","selectedFormats","newRangeElement","firstNode","lastNode","rangeEl","newList","insertedNew","reset","moveComplete","appendNode","insNode","sibling","originNode","insChildren","first","_notTextNode","originNext","detachRange","detachNestedList","fChildren","lineIndex","insNext","inner","innerChildren","copyFormatAttributes","rangeParent","rangeRight","removeEmptyNode","childEdge","detachList","rangeArr","listFirst","listLast","passComponent","o","lastIndex","nodeChange","styleArray","removeNodeArray","strictRemove","isRemoveNode","isRemoveFormat","isNonEditable","getValues","some","k","wRegExp","newNodeName","sNode","checkCnt","checkAttrs","checkStyles","ckeckClasses","s","classReg","replace","styleCheck","classCheck","start","end","newNode","styleRegExp","classRegExp","removeNodeRegExp","wBoolean","Boolean","_removeCheck","checkNode","vNode","tagRemove","originStyle","originClasses","classes","oneLine","endLength","isRemoveAnchor","arr","n","_isMaintainedNode","_isSizeNode","isSizeNode","_getMaintainedNode","_util_getMaintainedNode","_util_isMaintainedNode","_resetCommonListCell","_nodeChange_oneLine","_setCommonListStyle","appliedCommonList","_nodeChange_endLine","_nodeChange_middleLine","_nodeChange_startLine","elStyles","ek","elKeys","refer","removeProperty","sel","appliedEl","_textTagsMap","child","childStyle","elStyle","_defaultCommand","bold","fontWeight","italic","fontStyle","cKeys","_stripRemoveNode","_isRemove","anchor","newInnerNode","parentCon","sameTag","z","nNodeArray","pNode","isSameNode","startPass","endPass","pCurrent","checkCss","coverNode","prevNode","textNode","a","m","prevAnchorNode","childNode","pop","anchors","concat","afterAnchorNode","aChildren","aLen","ancestorAnchorNode","textNode_s","textNode_e","rChildren","endConReset","newStartOffset","startPath","getNodePath","mergeEndCon","newEndOffset","endPath","newOffsets","getNodeFromPath","_endContainer","passNode","cloneChild","isTopNode","offsets","path","tempNode","newCssText","newClass","noneChange","actionCall","_showToolbarBalloon","_showToolbarInline","arrayIncludes","open","action","commandHandler","info","toggleCodeView","toggleFullScreen","indent","undo","redo","removeFormat","print","preview","toggleDisplayBlocks","setDir","callBackSave","getContents","save","nodesMap","cmd","cells","shift","marginDir","margin","setStyle","editInsideList","toggleClass","showBlocks","_resourcesStateChange","setDisabledButtons","_setCodeDataToEditor","code","codeMirrorEditor","mode","_arrow","_hideToolbar","codeView","_resetCachingButton","_setEditorDataToCodeView","scrollHeight","refresh","_checkPlaceholder","code_html","_getCodeView","fullPage","parseDocument","parseFromString","__allowedScriptTag","headChildren","head","tagName","headers","_setIframeCssTags","body","convertContentsForEditor","attrs","editableClasses","_editableClass","split","codeContents","convertHTMLForCodeView","codeValue","getAttributesToString","outerHTML","_setCodeView","editorArea","_var","wasToolbarHidden","toolbarContainer","relative","maxWidth","zIndex","_stickyDummy","overflow","_editorStyles","editor","fullScreenOffset","changeElement","reduction","_iframeAutoHeight","marginTop","fullScreen","_codeViewAutoHeight","stickyToolbar","onScroll_window","expansion","hide","contentsHTML","printTemplate","printDocument","getIframeDocument","wDoc","arrts","_printClass","write","links","getElementsByTagName","linkHTML","isIE_Edge","isChromium","documentMode","StyleMedia","contentWindow","previewTemplate","windowObject","mimeType","changeDir","align","exchangeDir","outdent","marginRight","marginLeft","textAlign","changeTxt","dir_ltr","dir_rtl","setContents","html","convertValue","_resetComponents","setIframeContents","ctx","__scriptTagRegExp","onlyContents","contents","cleanHTML","renderHTML","editableEls","hasAttribute","getFullContents","_makeLine","requireFormat","__disallowedTagNameRegExp","isSpanWithoutAttr","isNotCheckingNode","isAnchor","_HTMLConvertor","textArray","tLen","text","_allowHTMLComments","_tagConvertor","_deleteDisallowedTags","__disallowedTagsRegExp","_editorTagsWhitelist","_convertFontSize","to","size","math","Math","sizeNum","fontValueMap","from","pxSize","round","toFixed","floor","_cleanStyle","sv","face","color","allowedStyle","kebabToCamelCase","font","fontSize","fontColor","hiliteColor","_cleanTags","lowLevelCheck","bAttr","wAttr","toString","isFigures","_editFormat","dom","tempTree","createContextualFragment","_convertListCell","domTree","_isFormatData","whitelist","blacklist","htmlCompress","_consistencyCheckOfHTML","_classNameFilter","query","textCompList","initMethod","__allowedScriptRegExp","htmlRemoveWhiteSpace","createTagsWhitelist","createTagsBlacklist","comp","returnHTML","brReg","isFormat","brChar","indentSize","Array","elementRegTest","elementIndent","lineBR","nodeRegTest","tag","tagIndent","XMLSerializer","serializeToString","listener","useCapture","removeEventListener","_charCount","inputText","maxCharCount","countType","charCounterType","nextCharCount","getCharLength","_setCharCount","over","count","getCharCount","slicePosition","_callCounterBlink","content","getByteLength","resetResponsiveToolbar","responsiveSize","_responsiveButtonSize","toolbarWidth","responsiveWidth","_responsiveCurrentSize","setToolbarButtons","charCounter","charWrapper","_checkComponents","getDoc","setValue","getValue","ignoredList","key","hasOwn","OUTDENT","isImportantDisabled","INDENT","_init","reload","_initHTML","getComputedStyle","getPropertyValue","allowedClassNames","sPrefix","ShadowRoot","shadowRoot","disallowTextTags","Object","keys","allowTextTags","addTagsWhitelist","filter","getRegList","str","str2","defaultAttr","dataAttr","tagsBlacklist","pasteTagsWhitelist","pasteTagsBlacklist","regEndStr","_wAttr","attributesWhitelist","tagsAttr","allAttr","_bAttr","attributesBlacklist","_cachingButtons","managedClass","filePluginRegExp","checkFileInfo","resetFileInfo","isArray","fileTags","managedTags","method","_placeholder","placeholder","lineBreaker","_onChange_historyStack","contentDocument","_iframeAuto","_initWysiwygArea","textTags","toUpperCase","underline","strike","sub","subscript","sup","superscript","onChange","h","isResizeObserverSupported","__callResizeFunction","resizeObserverEntry","borderBoxSize","blockSize","contentRect","onResizeEditor","_allowedEmptyNodeList","innerText","_setDefaultFormat","formatName","fileComponent","_setOptionsInit","_getConstructed","_editorInit","_addEvent","_offStickyToolbar","onResize_window","attr","frameAttrbutes","_resizeObserver","observe","_toolbarObserver","_toolbarShadow","onload","contextEl","_top","_relative","_toolBar","_editorArea","_wysiwygArea","_codeArea","_resizingBar","resizingBar","_navigation","navigation","_charCounter","_charWrapper","_loading","_lineBreaker_t","_lineBreaker_b","_resizeBack","resizeBackground","_IEisComposing","_lineBreakerBind","_cursorMoveKeyCode","_directionKeyCode","_nonTextKeyCode","_historyIgnoreKeyCode","_onButtonsCheck","_frontZeroWidthReg","_keyCodeShortcut","_shortcutCommand","keyStr","shortcutsDisable","classOnCheck","commandMapNodes","reverse","showPathLabel","_buttonsEventHandler","onClick_toolbar","disabled","onMouseDown_wysiwyg","_isExcludeSelectionElement","onMouseDown","tableCell","tablePlugin","table","_fixedCell","_shift","onTableCellMultiSelect","onClick_wysiwyg","targetElement","href","onClick","figcaption","hideToolbar","detail","oLi","prevLi","_balloonDelay","_showToolbarBalloonDelay","clearTimeout","rangeObj","isDirTop","rects","getClientRects","globalScroll","editorWidth","stickyTop","editorLeft","nodeOffset","right","bottom","noText","arrowMargin","toolbarHeight","iframeRects","_setToolbarOffset","editorParent","padding","absoluteLeft","overRight","resetTop","space","_getPageBottomSpace","documentElement","arrow_left","showInline","onInput_wysiwyg","go","getCurrentIndex","onInput","_isUneditableNode","isFront","siblingKey","isElement","siblingNode","_isUneditableNode_getSibling","selectNode","_onShortcutKey","onKeyDown_wysiwyg","shiftKey","ctrl","ctrlKey","metaKey","alt","altKey","onKeyDown","selectRange","fileComponentName","destroy","_hardDelete","isClosureFreeFormatElement","isClosureRangeFormatElement","defaultFormat","prev","con","prevLast","after","detach","ignoreZWS","nextEl","cell","tabDisable","lines","fc","lc","idx","prevIdx","nextIdx","moveCell","tabText","textRange","endChild","freeFormatEl","getFreeFormatElement","enterHTML","formatEndEdge","formatStartEdge","temp","newFormat","innerNode","newEl","newListCell","lineAttrReset","selectionFormat","wSelection","insertHTML","wOffset","focusNext","brPrev","brNext","focusBR","isMultiLine","innerRange","tempEl","compContext","_container","_element","_ref","isOSX_IOS","nbsp","isIE","onKeyUp_wysiwyg","oFormatTag","textKey","zeroWidthRegExp","isComposing","frontZeroWidthCnt","substring","onKeyUp","onScroll_wysiwyg","onScroll","onFocus_wysiwyg","onFocus","onBlur_wysiwyg","onBlur","onMouseDown_resizingBar","clientY","closureFunc","_resize_editor","resizeInterval","isToolbarHidden","fileBrowser","area","maxHeight","header","editorHeight","y","scrollY","editorTop","inlineOffset","_onStickyToolbar","scroll","sCell","eCell","sIsCell","eIsCell","sComp","eComp","onPaste_wysiwyg","clipboardData","_dataTransferAction","_setClipboardComponent","setData","onCopy_wysiwyg","onCopy","onSave_wysiwyg","onSave","onCut_wysiwyg","onCut","onDrop_wysiwyg","dataTransfer","_setDropLocationSelection","rangeOffset","caretRangeFromPoint","clientX","plainText","cleanData","getData","tempDiv","tempRange","_setClipboardData","MSData","onlyText","onPaste","onDrop","files","image","insertImage","onMouseMove_wysiwyg","lineBreakerStyle","ctxEl","pageY","_onMouseDown_lineBreak","_onLineBreak","eventWysiwyg","ResizeObserver","entries","b","passive","resizeEnable","_setResponsiveToolbar","_removeEvent","unobserve","sizeArray","buttonsObj","default","buttonGroup","sort","imageUploadHandler","videoUploadHandler","audioUploadHandler","onImageUploadBefore","onVideoUploadBefore","onAudioUploadBefore","onImageUpload","onVideoUpload","onAudioUpload","onImageUploadError","onVideoUploadError","onAudioUploadError","onSetToolbarButtons","buttonList","newToolbar","_createToolBar","responsiveButtons","newContext","setOptions","_options","mergeOptions","reduce","init","option","val","cons","_setOptions","callButtons","_setIframeDocument","setDefaultStyle","newStyles","_setDefaultOptionStyle","frame","noticeOpen","message","noticeClose","close","getContext","getText","getImagesInfo","_infoList","getFilesInfo","submitAction","notCleaningData","rangeSelection","checkHTML","firstCon","appendContents","readOnly","modalForm","dialog","setOption","disable","enable","enabled","show","topAreaStyle","_destroy","cover","originEl","topEl"],"sources":["E:/Programming/React/New folder (2)/dynamicArt/dynamic-article/node_modules/suneditor/src/lib/core.js"],"sourcesContent":["/*\r\n * wysiwyg web editor\r\n *\r\n * suneditor.js\r\n * Copyright 2017 JiHong Lee.\r\n * MIT license.\r\n */\r\n'use strict';\r\n\r\nimport _Constructor from './constructor';\r\nimport _Context from './context';\r\nimport _history from './history';\r\nimport _util from './util';\r\nimport _notice from '../plugins/modules/_notice';\r\n\r\n/**\r\n * @description SunEditor constuctor function.\r\n * create core object and event registration.\r\n * core, event, functions\r\n * @param {Object} context\r\n * @param {Object} pluginCallButtons\r\n * @param {Object} plugins \r\n * @param {Object} lang\r\n * @param {Object} options\r\n * @param {Object} _responsiveButtons\r\n * @returns {Object} functions Object\r\n */\r\nexport default function (context, pluginCallButtons, plugins, lang, options, _responsiveButtons) {\r\n    const _d = context.element.originElement.ownerDocument || document;\r\n    const _w = _d.defaultView || window;\r\n    const util = _util;\r\n    const icons = options.icons;\r\n\r\n    /**\r\n     * @description editor core object\r\n     * should always bind this object when registering an event in the plug-in.\r\n     */\r\n    const core = {\r\n        _d: _d,\r\n        _w: _w,\r\n        _parser: new _w.DOMParser(),\r\n        _prevRtl: options.rtl,\r\n        _editorHeight: 0,\r\n        _editorHeightPadding: 0,\r\n        _listCamel: options.__listCommonStyle,\r\n        _listKebab: util.camelToKebabCase(options.__listCommonStyle),\r\n\r\n        /**\r\n         * @description Document object of the iframe if created as an iframe || _d\r\n         * @private\r\n         */\r\n        _wd: null,\r\n\r\n        /**\r\n         * @description Window object of the iframe if created as an iframe || _w\r\n         * @private\r\n         */\r\n        _ww: null,\r\n        \r\n        /**\r\n         * @description Closest ShadowRoot to editor if found\r\n         * @private\r\n         */\r\n        _shadowRoot: null,\r\n\r\n        /**\r\n         * @description Block controller mousedown events in \"shadowRoot\" environment\r\n         * @private\r\n         */\r\n        _shadowRootControllerEventTarget: null,\r\n\r\n        /**\r\n         * @description Util object\r\n         */\r\n        util: util,\r\n\r\n        /**\r\n         * @description Functions object\r\n         */\r\n        functions: null,\r\n\r\n        /**\r\n         * @description Editor options\r\n         */\r\n        options: null,\r\n\r\n        /**\r\n         * @description Computed style of the wysiwyg area (window.getComputedStyle(context.element.wysiwyg))\r\n         */\r\n        wwComputedStyle: null,\r\n\r\n        /**\r\n         * @description Notice object\r\n         */\r\n        notice: _notice,\r\n\r\n        /**\r\n         * @description Default icons object\r\n         */\r\n        icons: icons,\r\n\r\n        /**\r\n         * @description History object for undo, redo\r\n         */\r\n        history: null,\r\n        \r\n        /**\r\n         * @description Elements and user options parameters of the suneditor\r\n         */\r\n        context: context,\r\n\r\n        /**\r\n         * @description Plugin buttons\r\n         */\r\n        pluginCallButtons: pluginCallButtons,\r\n\r\n        /**\r\n         * @description Loaded plugins\r\n         */\r\n        plugins: plugins || {},\r\n\r\n        /**\r\n         * @description Whether the plugin is initialized\r\n         */\r\n        initPlugins: {},\r\n\r\n        /**\r\n         * @description Object for managing submenu elements\r\n         * @private\r\n         */\r\n        _targetPlugins: {},\r\n\r\n        /**\r\n         * @description Save rendered submenus and containers\r\n         * @private\r\n         */\r\n        _menuTray: {},\r\n\r\n        /**\r\n         * @description loaded language\r\n         */\r\n        lang: lang,\r\n\r\n        /**\r\n         * @description The selection node (core.getSelectionNode()) to which the effect was last applied\r\n         */\r\n        effectNode: null,\r\n\r\n        /**\r\n         * @description submenu element\r\n         */\r\n        submenu: null,\r\n\r\n        /**\r\n         * @description container element\r\n         */\r\n        container: null,\r\n\r\n        /**\r\n         * @description current subment name\r\n         * @private\r\n         */\r\n        _submenuName: '',\r\n\r\n        /**\r\n         * @description binded submenuOff method\r\n         * @private\r\n         */\r\n        _bindedSubmenuOff: null,\r\n\r\n        /**\r\n         * @description binded containerOff method\r\n         * @private\r\n         */\r\n        _bindedContainerOff: null,\r\n\r\n        /**\r\n         * @description active button element in submenu\r\n         */\r\n        submenuActiveButton: null,\r\n\r\n        /**\r\n         * @description active button element in container\r\n         */\r\n        containerActiveButton: null,\r\n\r\n        /**\r\n         * @description The elements array to be processed unvisible when the controllersOff function is executed (resizing, link modified button, table controller)\r\n         */\r\n        controllerArray: [],\r\n\r\n        /**\r\n         * @description The name of the plugin that called the currently active controller\r\n         */\r\n        currentControllerName: '',\r\n\r\n        /**\r\n         * @description The target element of current controller\r\n         */\r\n        currentControllerTarget: null,\r\n\r\n        /**\r\n         * @description The file component object of current selected file tag (getFileComponent)\r\n         */\r\n        currentFileComponentInfo: null,\r\n\r\n        /**\r\n         * @description An array of buttons whose class name is not \"se-code-view-enabled\"\r\n         */\r\n        codeViewDisabledButtons: [],\r\n\r\n        /**\r\n         * @description An array of buttons whose class name is not \"se-resizing-enabled\"\r\n         */\r\n        resizingDisabledButtons: [],\r\n\r\n        /**\r\n         * @description active more layer element in submenu\r\n         * @private\r\n         */\r\n        _moreLayerActiveButton: null,\r\n\r\n        /**\r\n         * @description Tag whitelist RegExp object used in \"_consistencyCheckOfHTML\" method\r\n         * ^(options._editorTagsWhitelist)$\r\n         * @private\r\n         */\r\n        _htmlCheckWhitelistRegExp: null,\r\n\r\n        /**\r\n         * @description Tag blacklist RegExp object used in \"_consistencyCheckOfHTML\" method\r\n         * @private\r\n         */\r\n         _htmlCheckBlacklistRegExp: null,\r\n\r\n        /**\r\n         * @description RegExp when using check disallowd tags. (b, i, ins, strike, s)\r\n         * @private\r\n         */\r\n        _disallowedTextTagsRegExp: null,\r\n\r\n        /**\r\n         * @description Editor tags whitelist (RegExp object)\r\n         * util.createTagsWhitelist(options._editorTagsWhitelist)\r\n         */\r\n        editorTagsWhitelistRegExp: null,\r\n\r\n        /**\r\n         * @description Editor tags blacklist (RegExp object)\r\n         * util.createTagsBlacklist(options.tagsBlacklist)\r\n         */\r\n        editorTagsBlacklistRegExp: null,\r\n\r\n        /**\r\n         * @description Tag whitelist when pasting (RegExp object)\r\n         * util.createTagsWhitelist(options.pasteTagsWhitelist)\r\n         */\r\n        pasteTagsWhitelistRegExp: null,\r\n\r\n        /**\r\n         * @description Tag blacklist when pasting (RegExp object)\r\n         * util.createTagsBlacklist(options.pasteTagsBlacklist)\r\n         */\r\n        pasteTagsBlacklistRegExp: null,\r\n\r\n        /**\r\n         * @description Boolean value of whether the editor has focus\r\n         */\r\n        hasFocus: false,\r\n\r\n        /**\r\n         * @description Boolean value of whether the editor is disabled\r\n         */\r\n        isDisabled: false,\r\n\r\n        /**\r\n         * @description Boolean value of whether the editor is readOnly\r\n         */\r\n        isReadOnly: false,\r\n\r\n        /**\r\n         * @description Attributes whitelist used by the cleanHTML method\r\n         * @private\r\n         */\r\n        _attributesWhitelistRegExp: null,\r\n        _attributesWhitelistRegExp_all_data: null,\r\n\r\n        /**\r\n         * @description Attributes blacklist used by the cleanHTML method\r\n         * @private\r\n         */\r\n        _attributesBlacklistRegExp: null,\r\n\r\n        /**\r\n         * @description Attributes of tags whitelist used by the cleanHTML method\r\n         * @private\r\n         */\r\n        _attributesTagsWhitelist: null,\r\n\r\n        /**\r\n         * @description Attributes of tags blacklist used by the cleanHTML method\r\n         * @private\r\n         */\r\n        _attributesTagsBlacklist: null,\r\n\r\n        /**\r\n         * @description binded controllersOff method\r\n         * @private\r\n         */\r\n        _bindControllersOff: null,\r\n\r\n        /**\r\n         * @description Is inline mode?\r\n         * @private\r\n         */\r\n        _isInline: null,\r\n\r\n        /**\r\n         * @description Is balloon|balloon-always mode?\r\n         * @private\r\n         */\r\n        _isBalloon: null,\r\n\r\n        /**\r\n         * @description Is balloon-always mode?\r\n         * @private\r\n         */\r\n        _isBalloonAlways: null,\r\n\r\n        /**\r\n         * @description Required value when using inline mode to sticky toolbar\r\n         * @private\r\n         */\r\n        _inlineToolbarAttr: {top: '', width: '', isShow: false},\r\n\r\n        /**\r\n         * @description Variable that controls the \"blur\" event in the editor of inline or balloon mode when the focus is moved to submenu\r\n         * @private\r\n         */\r\n        _notHideToolbar: false,\r\n\r\n        /**\r\n         * @description Variable value that sticky toolbar mode\r\n         * @private\r\n         */\r\n        _sticky: false,\r\n\r\n        /**\r\n         * @description Variables for controlling focus and blur events\r\n         * @private\r\n         */\r\n        _antiBlur: false,\r\n\r\n        /**\r\n         * @description Component line breaker element\r\n         * @private\r\n         */\r\n        _lineBreaker: null,\r\n        _lineBreakerButton: null,\r\n\r\n        /**\r\n         * @description If true, (initialize, reset) all indexes of image, video information\r\n         * @private\r\n         */\r\n        _componentsInfoInit: true,\r\n        _componentsInfoReset: false,\r\n\r\n        /**\r\n         * @description Plugins array with \"active\" method.\r\n         * \"activePlugins\" runs the \"add\" method when creating the editor.\r\n         */\r\n        activePlugins: null,\r\n\r\n        /**\r\n         * @description Information of tags that should maintain HTML structure, style, class name, etc. (In use by \"math\" plugin)\r\n         * When inserting \"html\" such as paste, it is executed on the \"html\" to be inserted. (core.cleanHTML)\r\n         * Basic Editor Actions:\r\n         * 1. All classes not starting with \"__se__\" or \"se-\" in the editor are removed.\r\n         * 2. The style of all tags except the \"span\" tag is removed from the editor.\r\n         * \"managedTagsInfo\" structure ex:\r\n         * managedTagsInfo: {\r\n         *   query: '.__se__xxx, se-xxx'\r\n         *   map: {\r\n         *     '__se__xxx': method.bind(core),\r\n         *     'se-xxx': method.bind(core),\r\n         *   }\r\n         * }\r\n         * @example\r\n         * Define in the following return format in the \"managedTagInfo\" function of the plugin.\r\n         * managedTagInfo() => {\r\n         *  return {\r\n         *    className: 'string', // Class name to identify the tag. (\"__se__xxx\", \"se-xxx\")\r\n         *    // Change the html of the \"element\". (\"element\" is the element found with \"className\".)\r\n         *    // \"method\" is executed by binding \"core\".\r\n         *    method: function (element) {\r\n         *      // this === core\r\n         *      element.innerHTML = // (rendered html);\r\n         *    }\r\n         *  }\r\n         * }\r\n         */\r\n        managedTagsInfo: null,\r\n\r\n        /**\r\n         * @description cashing: options.charCounterType === 'byte-html'\r\n         * @private\r\n         */\r\n        _charTypeHTML: false,\r\n\r\n        /**\r\n         * @description Array of \"checkFileInfo\" functions with the core bound\r\n         * (Plugins with \"checkFileInfo\" and \"resetFileInfo\" methods)\r\n         * \"fileInfoPlugins\" runs the \"add\" method when creating the editor.\r\n         * \"checkFileInfo\" method is always call just before the \"change\" event.\r\n         * @private\r\n         */\r\n        _fileInfoPluginsCheck: null,\r\n\r\n        /**\r\n         * @description Array of \"resetFileInfo\" functions with the core bound\r\n         * (Plugins with \"checkFileInfo\" and \"resetFileInfo\" methods)\r\n         * \"checkFileInfo\" method is always call just before the \"functions.setOptions\" method.\r\n         * @private\r\n         */\r\n        _fileInfoPluginsReset: null,\r\n\r\n        /**\r\n         * @description Variables for file component management\r\n         * @private\r\n         */\r\n        _fileManager: {\r\n            tags: null,\r\n            regExp: null,\r\n            queryString: null,\r\n            pluginRegExp: null,\r\n            pluginMap: null\r\n        },\r\n\r\n        /**\r\n         * @description Elements that need to change text or className for each selection change\r\n         * After creating the editor, \"activePlugins\" are added.\r\n         * @property {Element} STRONG bold button\r\n         * @property {Element} U underline button\r\n         * @property {Element} EM italic button\r\n         * @property {Element} DEL strike button\r\n         * @property {Element} SUB subscript button\r\n         * @property {Element} SUP superscript button\r\n         * @property {Element} OUTDENT outdent button\r\n         * @property {Element} INDENT indent button\r\n         */\r\n        commandMap: {},\r\n\r\n        /**\r\n         * @description CSS properties related to style tags \r\n         * @private\r\n         */\r\n        _commandMapStyles: {\r\n            STRONG: ['font-weight'],\r\n            U: ['text-decoration'],\r\n            EM: ['font-style'],\r\n            DEL: ['text-decoration']\r\n        },\r\n\r\n        /**\r\n         * @description Style button related to edit area\r\n         * @property {Element} fullScreen fullScreen button element\r\n         * @property {Element} showBlocks showBlocks button element\r\n         * @property {Element} codeView codeView button element\r\n         * @private\r\n         */\r\n        _styleCommandMap: null,\r\n\r\n        /**\r\n         * @private\r\n         */\r\n        _cleanStyleRegExp: {\r\n            span: new _w.RegExp('\\\\s*[^-a-zA-Z](font-family|font-size|color|background-color)\\\\s*:[^;]+(?!;)*', 'ig'),\r\n            format: new _w.RegExp('\\\\s*[^-a-zA-Z](text-align|margin-left|margin-right)\\\\s*:[^;]+(?!;)*', 'ig'),\r\n            fontSizeUnit: new _w.RegExp('\\\\d+' + options.fontSizeUnit + '$', 'i'),\r\n        },\r\n\r\n        /**\r\n         * @description Variables used internally in editor operation\r\n         * @property {Boolean} isCodeView State of code view\r\n         * @property {Boolean} isFullScreen State of full screen\r\n         * @property {Number} innerHeight_fullScreen InnerHeight in editor when in full screen\r\n         * @property {Number} resizeClientY Remember the vertical size of the editor before resizing the editor (Used when calculating during resize operation)\r\n         * @property {Number} tabSize Indent size of tab (4)\r\n         * @property {Number} codeIndent Indent size of Code view mode (2)\r\n         * @property {Number} minResizingSize Minimum size of editing area when resized {Number} (.se-wrapper-inner {min-height: 65px;} || 65)\r\n         * @property {Array} currentNodes  An array of the current cursor's node structure\r\n         * @private\r\n         */\r\n        _variable: {\r\n            isChanged: false,\r\n            isCodeView: false,\r\n            isFullScreen: false,\r\n            innerHeight_fullScreen: 0,\r\n            resizeClientY: 0,\r\n            tabSize: 4,\r\n            codeIndent: 2,\r\n            minResizingSize: util.getNumber((context.element.wysiwygFrame.style.minHeight || '65'), 0),\r\n            currentNodes: [],\r\n            currentNodesMap: [],\r\n            _range: null,\r\n            _selectionNode: null,\r\n            _originCssText: context.element.topArea.style.cssText,\r\n            _bodyOverflow: '',\r\n            _editorAreaOriginCssText: '',\r\n            _wysiwygOriginCssText: '',\r\n            _codeOriginCssText: '',\r\n            _fullScreenAttrs: {sticky: false, balloon: false, inline: false},\r\n            _lineBreakComp: null,\r\n            _lineBreakDir: ''\r\n        },\r\n\r\n        /**\r\n         * @description Temp variable for set line attrs\r\n         * @private\r\n         */\r\n        _formatAttrsTemp: null,\r\n\r\n        /**\r\n         * @description Save the current buttons states to \"allCommandButtons\" object\r\n         * @private\r\n         */\r\n         _saveButtonStates: function () {\r\n            if (!this.allCommandButtons) this.allCommandButtons = {};\r\n\r\n            const currentButtons = this.context.element._buttonTray.querySelectorAll('.se-menu-list button[data-display]');\r\n            for (let i = 0, element, command; i < currentButtons.length; i++) {\r\n                element = currentButtons[i];\r\n                command = element.getAttribute('data-command');\r\n\r\n                this.allCommandButtons[command] = element;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Recover the current buttons states from \"allCommandButtons\" object\r\n         * @private\r\n         */\r\n        _recoverButtonStates: function () {\r\n            if (this.allCommandButtons) {\r\n                const currentButtons = this.context.element._buttonTray.querySelectorAll('.se-menu-list button[data-display]'); \r\n                for (let i = 0, button, command, oldButton; i < currentButtons.length; i++) {\r\n                    button = currentButtons[i]; \r\n                    command = button.getAttribute('data-command');\r\n\r\n                    oldButton = this.allCommandButtons[command];\r\n                    if (oldButton) {\r\n                        button.parentElement.replaceChild(oldButton, button);\r\n                        if (this.context.tool[command]) this.context.tool[command] = oldButton;\r\n                    }\r\n                }   \r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description If the plugin is not added, add the plugin and call the 'add' function.\r\n         * If the plugin is added call callBack function.\r\n         * @param {String} pluginName The name of the plugin to call\r\n         * @param {function} callBackFunction Function to be executed immediately after module call\r\n         * @param {Element|null} _target Plugin target button (This is not necessary if you have a button list when creating the editor)\r\n         */\r\n        callPlugin: function (pluginName, callBackFunction, _target) {\r\n            _target = _target || pluginCallButtons[pluginName];\r\n\r\n            if (!this.plugins[pluginName]) {\r\n                throw Error('[SUNEDITOR.core.callPlugin.fail] The called plugin does not exist or is in an invalid format. (pluginName:\"' + pluginName + '\")');\r\n            } else if (!this.initPlugins[pluginName]) {\r\n                this.plugins[pluginName].add(this, _target);\r\n                this.initPlugins[pluginName] = true;\r\n            } else if (typeof this._targetPlugins[pluginName] === 'object' && !!_target) {\r\n                this.initMenuTarget(pluginName, _target, this._targetPlugins[pluginName]);\r\n            }\r\n\r\n            if (this.plugins[pluginName].active && !this.commandMap[pluginName] && !!_target) {\r\n                this.commandMap[pluginName] = _target;\r\n                this.activePlugins.push(pluginName);\r\n            }\r\n                \r\n            if (typeof callBackFunction === 'function') callBackFunction();\r\n        },\r\n\r\n        /**\r\n         * @description If the module is not added, add the module and call the 'add' function\r\n         * @param {Array} moduleArray module object's Array [dialog, resizing]\r\n         */\r\n        addModule: function (moduleArray) {\r\n            for (let i = 0, len = moduleArray.length, moduleName; i < len; i++) {\r\n                moduleName = moduleArray[i].name;\r\n                if (!this.plugins[moduleName]) {\r\n                    this.plugins[moduleName] = moduleArray[i];\r\n                }\r\n                if (!this.initPlugins[moduleName]) {\r\n                    this.initPlugins[moduleName] = true;\r\n                    if (typeof this.plugins[moduleName].add === 'function') this.plugins[moduleName].add(this);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Gets the current editor-relative scroll offset.\r\n         * @returns {Object} {top, left}\r\n         */\r\n        getGlobalScrollOffset: function () {\r\n            let t = 0, l = 0;\r\n            let el = context.element.topArea;\r\n            while (el) {\r\n                t += el.scrollTop;\r\n                l += el.scrollLeft;\r\n                el = el.parentElement;\r\n            }\r\n            \r\n            el = this._shadowRoot ? this._shadowRoot.host : null;\r\n            while (el) {\r\n                t += el.scrollTop;\r\n                l += el.scrollLeft;\r\n                el = el.parentElement;\r\n            }\r\n\r\n            return {\r\n                top: t,\r\n                left: l\r\n            };\r\n        },\r\n\r\n        /**\r\n         * @description Method for managing submenu element.\r\n         * You must add the \"submenu\" element using the this method at custom plugin.\r\n         * @param {String} pluginName Plugin name\r\n         * @param {Element|null} target Target button\r\n         * @param {Element} menu Submenu element\r\n         */\r\n        initMenuTarget: function (pluginName, target, menu) {\r\n            if (!target) {\r\n                this._targetPlugins[pluginName] = menu;\r\n            } else {\r\n                context.element._menuTray.appendChild(menu);\r\n                this._targetPlugins[pluginName] = true;\r\n                this._menuTray[target.getAttribute('data-command')] = menu;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Enable submenu\r\n         * @param {Element} element Submenu's button element to call\r\n         */\r\n        submenuOn: function (element) {\r\n            if (this._bindedSubmenuOff) this._bindedSubmenuOff();\r\n            if (this._bindControllersOff) this.controllersOff();\r\n\r\n            const submenuName = this._submenuName = element.getAttribute('data-command');\r\n            const menu = this.submenu = this._menuTray[submenuName];\r\n            this.submenuActiveButton = element;\r\n            this._setMenuPosition(element, menu);\r\n            \r\n            this._bindedSubmenuOff = this.submenuOff.bind(this);\r\n            this.addDocEvent('mousedown', this._bindedSubmenuOff, false);\r\n\r\n            if (this.plugins[submenuName].on) this.plugins[submenuName].on.call(this);\r\n            this._antiBlur = true;\r\n        },\r\n\r\n        /**\r\n         * @description Disable submenu\r\n         */\r\n        submenuOff: function () {\r\n            this.removeDocEvent('mousedown', this._bindedSubmenuOff);\r\n            this._bindedSubmenuOff = null;\r\n\r\n            if (this.submenu) {\r\n                this._submenuName = '';\r\n                this.submenu.style.display = 'none';\r\n                this.submenu = null;\r\n                util.removeClass(this.submenuActiveButton, 'on');\r\n                this.submenuActiveButton = null;\r\n                this._notHideToolbar = false;\r\n            }\r\n\r\n            this._antiBlur = false;\r\n        },\r\n\r\n        /**\r\n         * @description Disable more layer\r\n         */\r\n        moreLayerOff: function() {\r\n            if (this._moreLayerActiveButton) {\r\n                const layer = context.element.toolbar.querySelector('.' + this._moreLayerActiveButton.getAttribute('data-command'));\r\n                layer.style.display = 'none';\r\n                util.removeClass(this._moreLayerActiveButton, 'on');\r\n                this._moreLayerActiveButton = null;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Enable container\r\n         * @param {Element} element Container's button element to call\r\n         */\r\n        containerOn: function (element) {\r\n            if (this._bindedContainerOff) this._bindedContainerOff();\r\n\r\n            const containerName = this._containerName = element.getAttribute('data-command');\r\n            const menu = this.container = this._menuTray[containerName];\r\n            this.containerActiveButton = element;\r\n            this._setMenuPosition(element, menu);\r\n            \r\n            this._bindedContainerOff = this.containerOff.bind(this);\r\n            this.addDocEvent('mousedown', this._bindedContainerOff, false);\r\n\r\n            if (this.plugins[containerName].on) this.plugins[containerName].on.call(this);\r\n            this._antiBlur = true;\r\n        },\r\n\r\n        /**\r\n         * @description Disable container\r\n         */\r\n        containerOff: function () {\r\n            this.removeDocEvent('mousedown', this._bindedContainerOff);\r\n            this._bindedContainerOff = null;\r\n\r\n            if (this.container) {\r\n                this._containerName = '';\r\n                this.container.style.display = 'none';\r\n                this.container = null;\r\n                util.removeClass(this.containerActiveButton, 'on');\r\n                this.containerActiveButton = null;\r\n                this._notHideToolbar = false;\r\n            }\r\n\r\n            this._antiBlur = false;\r\n        },\r\n\r\n        /**\r\n         * @description Set the menu position. (submenu, container)\r\n         * @param {*} element Button element\r\n         * @param {*} menu Menu element\r\n         * @private\r\n         */\r\n        _setMenuPosition: function (element, menu) {\r\n            menu.style.visibility = 'hidden';\r\n            menu.style.display = 'block';\r\n            menu.style.height = '';\r\n            util.addClass(element, 'on');\r\n\r\n            const toolbar = this.context.element.toolbar;\r\n            const toolbarW = toolbar.offsetWidth;\r\n            const toolbarOffset = event._getEditorOffsets(context.element.toolbar);\r\n            const menuW = menu.offsetWidth;\r\n            const l = element.parentElement.offsetLeft + 3;\r\n\r\n            // rtl\r\n            if (options.rtl) {\r\n                const elementW = element.offsetWidth;\r\n                const rtlW = menuW > elementW ? menuW - elementW : 0;\r\n                const rtlL = rtlW > 0 ? 0 : elementW - menuW;\r\n                menu.style.left = (l - rtlW + rtlL) + 'px';\r\n                if (toolbarOffset.left > event._getEditorOffsets(menu).left) {\r\n                    menu.style.left = '0px';\r\n                }\r\n            } else {\r\n                const overLeft = toolbarW <= menuW ? 0 : toolbarW - (l + menuW);\r\n                if (overLeft < 0) menu.style.left = (l + overLeft) + 'px';\r\n                else menu.style.left = l + 'px';\r\n            }\r\n\r\n            // get element top\r\n            let t = 0;\r\n            let offsetEl = element;\r\n            while (offsetEl && offsetEl !== toolbar) {\r\n                t += offsetEl.offsetTop;\r\n                offsetEl = offsetEl.offsetParent;\r\n            }\r\n\r\n            const bt = t;\r\n            if (this._isBalloon) {\r\n                t += toolbar.offsetTop + element.offsetHeight;\r\n            } else {\r\n                t -= element.offsetHeight;\r\n            }\r\n\r\n            // set menu position\r\n            const toolbarTop = toolbarOffset.top;\r\n            const menuHeight = menu.offsetHeight;\r\n            const scrollTop = this.getGlobalScrollOffset().top;\r\n\r\n            const menuHeight_bottom = _w.innerHeight - (toolbarTop - scrollTop + bt + element.parentElement.offsetHeight);\r\n            if (menuHeight_bottom < menuHeight) {\r\n                let menuTop = -1 * (menuHeight - bt + 3);\r\n                const insTop = toolbarTop - scrollTop + menuTop;\r\n                const menuHeight_top = menuHeight + (insTop < 0 ? insTop : 0);\r\n                \r\n                if (menuHeight_top > menuHeight_bottom) {\r\n                    menu.style.height = menuHeight_top + 'px';\r\n                    menuTop = -1 * (menuHeight_top - bt + 3);\r\n                } else {\r\n                    menu.style.height = menuHeight_bottom + 'px';\r\n                    menuTop = bt + element.parentElement.offsetHeight;\r\n                }\r\n\r\n                menu.style.top = menuTop + 'px';\r\n            } else {\r\n                menu.style.top = (bt + element.parentElement.offsetHeight) + 'px';\r\n            }\r\n\r\n            menu.style.visibility = '';\r\n        },\r\n\r\n        /**\r\n         * @description Show controller at editor area (controller elements, function, \"controller target element(@Required)\", \"controller name(@Required)\", etc..)\r\n         * @param {*} arguments controller elements, functions..\r\n         */\r\n        controllersOn: function () {\r\n            if (this._bindControllersOff) this._bindControllersOff();\r\n            this.controllerArray = [];\r\n\r\n            for (let i = 0, arg; i < arguments.length; i++) {\r\n                arg = arguments[i];\r\n                if (!arg) continue;\r\n                \r\n                if (typeof arg === 'string') {\r\n                    this.currentControllerName = arg;\r\n                    continue;\r\n                }\r\n                if (typeof arg === 'function') {\r\n                    this.controllerArray.push(arg);\r\n                    continue;\r\n                }\r\n                if (!util.hasClass(arg, 'se-controller')) {\r\n                    this.currentControllerTarget = arg;\r\n                    this.currentFileComponentInfo = this.getFileComponent(arg);\r\n                    continue;\r\n                }\r\n                if (arg.style) {\r\n                    arg.style.display = 'block';\r\n                    if (this._shadowRoot && this._shadowRootControllerEventTarget.indexOf(arg) === -1) {\r\n                        arg.addEventListener('mousedown', function (e) { e.preventDefault(); e.stopPropagation(); });\r\n                        this._shadowRootControllerEventTarget.push(arg);\r\n                    }\r\n                }\r\n                this.controllerArray.push(arg);\r\n            }\r\n\r\n            this._bindControllersOff = this.controllersOff.bind(this);\r\n            this.addDocEvent('mousedown', this._bindControllersOff, false);\r\n            this.addDocEvent('keydown', this._bindControllersOff, false);\r\n            this._antiBlur = true;\r\n\r\n            if (typeof functions.showController === 'function') functions.showController(this.currentControllerName, this.controllerArray, this);\r\n        },\r\n\r\n        /**\r\n         * @description Hide controller at editor area (link button, image resize button..)\r\n         * @param {KeyboardEvent|MouseEvent|null} e Event object when called from mousedown and keydown events registered in \"core.controllersOn\"\r\n         */\r\n        controllersOff: function (e) {\r\n            this._lineBreaker.style.display = 'none';\r\n            const len = this.controllerArray.length;\r\n\r\n            if (e && e.target && len > 0) {\r\n                for (let i = 0; i < len; i++) {\r\n                    if (typeof this.controllerArray[i].contains === 'function' && this.controllerArray[i].contains(e.target)) return;\r\n                }\r\n            }\r\n            \r\n            if (this._fileManager.pluginRegExp.test(this.currentControllerName) && e && e.type === 'keydown' && e.keyCode !== 27) return;\r\n            context.element.lineBreaker_t.style.display = context.element.lineBreaker_b.style.display = 'none';\r\n            this._variable._lineBreakComp = null;\r\n\r\n            this.currentControllerName = '';\r\n            this.currentControllerTarget = null;\r\n            this.currentFileComponentInfo = null;\r\n            this.effectNode = null;\r\n            if (!this._bindControllersOff) return;\r\n\r\n            this.removeDocEvent('mousedown', this._bindControllersOff);\r\n            this.removeDocEvent('keydown', this._bindControllersOff);\r\n            this._bindControllersOff = null;\r\n\r\n            if (len > 0) {\r\n                for (let i = 0; i < len; i++) {\r\n                    if (typeof this.controllerArray[i] === 'function') this.controllerArray[i]();\r\n                    else this.controllerArray[i].style.display = 'none';\r\n                }\r\n\r\n                this.controllerArray = [];\r\n            }\r\n\r\n            this._antiBlur = false;\r\n        },\r\n\r\n        /**\r\n         * @description Specify the position of the controller.\r\n         * @param {Element} controller Controller element.\r\n         * @param {Element} referEl Element that is the basis of the controller's position.\r\n         * @param {String} position Type of position (\"top\" | \"bottom\")\r\n         * When using the \"top\" position, there should not be an arrow on the controller.\r\n         * When using the \"bottom\" position there should be an arrow on the controller.\r\n         * @param {Object} addOffset These are the left and top values that need to be added specially. \r\n         * This argument is required. - {left: 0, top: 0}\r\n         * Please enter the value based on ltr mode.\r\n         * Calculated automatically in rtl mode.\r\n         */\r\n        setControllerPosition: function (controller, referEl, position, addOffset) {\r\n            if (options.rtl) addOffset.left *= -1;\r\n\r\n            const offset = util.getOffset(referEl, context.element.wysiwygFrame);\r\n            controller.style.visibility = 'hidden';\r\n            controller.style.display = 'block';\r\n\r\n            // Height value of the arrow element is 11px\r\n            const topMargin = position === 'top' ? -(controller.offsetHeight + 2) : (referEl.offsetHeight + 12);\r\n            controller.style.top = (offset.top + topMargin + addOffset.top) + 'px';\r\n\r\n            const l = offset.left - context.element.wysiwygFrame.scrollLeft + addOffset.left;\r\n            const controllerW = controller.offsetWidth;\r\n            const referElW = referEl.offsetWidth;\r\n            \r\n            const allow = util.hasClass(controller.firstElementChild, 'se-arrow') ? controller.firstElementChild : null;\r\n\r\n            // rtl (Width value of the arrow element is 22px)\r\n            if (options.rtl) {\r\n                const rtlW = (controllerW > referElW) ? controllerW - referElW : 0;\r\n                const rtlL = rtlW > 0 ? 0 : referElW - controllerW;\r\n                controller.style.left = (l - rtlW + rtlL) + 'px';\r\n                \r\n                if (rtlW > 0) {\r\n                    if (allow) allow.style.left = ((controllerW - 14 < 10 + rtlW) ? (controllerW - 14) : (10 + rtlW)) + 'px';\r\n                }\r\n                \r\n                const overSize = context.element.wysiwygFrame.offsetLeft - controller.offsetLeft;\r\n                if (overSize > 0) {\r\n                    controller.style.left = '0px';\r\n                    if (allow) allow.style.left = overSize + 'px';\r\n                }\r\n            } else {\r\n                controller.style.left = l + 'px';\r\n\r\n                const overSize = context.element.wysiwygFrame.offsetWidth - (controller.offsetLeft + controllerW);\r\n                if (overSize < 0) {\r\n                    controller.style.left = (controller.offsetLeft + overSize) + 'px';\r\n                    if (allow) allow.style.left = (20 - overSize) + 'px';\r\n                } else {\r\n                    if (allow) allow.style.left = '20px';\r\n                }\r\n            }\r\n\r\n            controller.style.visibility = '';\r\n        },\r\n\r\n        /**\r\n         * @description javascript execCommand\r\n         * @param {String} command javascript execCommand function property\r\n         * @param {Boolean|undefined} showDefaultUI javascript execCommand function property\r\n         * @param {String|undefined} value javascript execCommand function property\r\n         */\r\n        execCommand: function (command, showDefaultUI, value) {\r\n            this._wd.execCommand(command, showDefaultUI, (command === 'formatBlock' ? '<' + value + '>' : value));\r\n            // history stack\r\n            this.history.push(true);\r\n        },\r\n\r\n        /**\r\n         * @description Focus to wysiwyg area using \"native focus function\"\r\n         */\r\n        nativeFocus: function () {\r\n            this.__focus();\r\n            this._editorRange();\r\n        },\r\n\r\n        /**\r\n         * @description Focus method\r\n         * @private\r\n         */\r\n        __focus: function () {\r\n            const caption = util.getParentElement(this.getSelectionNode(), 'figcaption');\r\n            if (caption) {\r\n                caption.focus();\r\n            } else {\r\n                context.element.wysiwyg.focus();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Focus to wysiwyg area\r\n         */\r\n        focus: function () {\r\n            if (context.element.wysiwygFrame.style.display === 'none') return;\r\n\r\n            if (options.iframe) {\r\n                this.nativeFocus();\r\n            } else {\r\n                try {\r\n                    const range = this.getRange();\r\n                    if (range.startContainer === range.endContainer && util.isWysiwygDiv(range.startContainer)) {\r\n                        const currentNode = range.commonAncestorContainer.children[range.startOffset];\r\n                        if (!util.isFormatElement(currentNode) && !util.isComponent(currentNode)) {\r\n                            const format = util.createElement(options.defaultTag);\r\n                            const br = util.createElement('BR');\r\n                            format.appendChild(br);\r\n                            context.element.wysiwyg.insertBefore(format, currentNode);\r\n                            this.setRange(br, 0, br, 0);\r\n                            return;\r\n                        }\r\n                    }\r\n                    this.setRange(range.startContainer, range.startOffset, range.endContainer, range.endOffset);\r\n                } catch (e) {\r\n                    this.nativeFocus();\r\n                }\r\n            }\r\n\r\n            event._applyTagEffects();\r\n            if (this._isBalloon) event._toggleToolbarBalloon();\r\n        },\r\n\r\n        /**\r\n         * @description If \"focusEl\" is a component, then that component is selected; if it is a format element, the last text is selected\r\n         * If \"focusEdge\" is null, then selected last element\r\n         * @param {Element|null} focusEl Focus element\r\n         */\r\n        focusEdge: function (focusEl) {\r\n            if (!focusEl) focusEl = context.element.wysiwyg.lastElementChild;\r\n\r\n            const fileComponentInfo = this.getFileComponent(focusEl);\r\n            if (fileComponentInfo) {\r\n                this.selectComponent(fileComponentInfo.target, fileComponentInfo.pluginName);\r\n            } else if (focusEl) {\r\n                focusEl = util.getChildElement(focusEl, function (current) { return current.childNodes.length === 0 || current.nodeType === 3; }, true);\r\n                if (!focusEl) this.nativeFocus();\r\n                else this.setRange(focusEl, focusEl.textContent.length, focusEl, focusEl.textContent.length);\r\n            } else {\r\n                this.focus();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Focusout to wysiwyg area (.blur())\r\n         */\r\n        blur: function () {\r\n            if (options.iframe) {\r\n                context.element.wysiwygFrame.blur();\r\n            } else {\r\n                context.element.wysiwyg.blur();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Set current editor's range object and return.\r\n         * @param {Node} startCon The startContainer property of the selection object.\r\n         * @param {Number} startOff The startOffset property of the selection object.\r\n         * @param {Node} endCon The endContainer property of the selection object.\r\n         * @param {Number} endOff The endOffset property of the selection object.\r\n         * @returns {Object} Range object.\r\n         */\r\n        setRange: function (startCon, startOff, endCon, endOff) {\r\n            if (!startCon || !endCon) return;\r\n            if (startOff > startCon.textContent.length) startOff = startCon.textContent.length;\r\n            if (endOff > endCon.textContent.length) endOff = endCon.textContent.length;\r\n            if (util.isFormatElement(startCon)) {\r\n                startCon = startCon.childNodes[startOff] || startCon.childNodes[startOff - 1] || startCon;\r\n                startOff = startOff > 0 ? startCon.nodeType === 1 ? 1 : startCon.textContent ? startCon.textContent.length : 0 : 0;\r\n            }\r\n            if (util.isFormatElement(endCon)) {\r\n                endCon = endCon.childNodes[endOff] || endCon.childNodes[endOff - 1] || endCon;\r\n                endOff = endOff > 0 ? endCon.nodeType === 1 ? 1 : endCon.textContent ? endCon.textContent.length : 0 : 0;\r\n            }\r\n            \r\n            const range = this._wd.createRange();\r\n\r\n            try {\r\n                range.setStart(startCon, startOff);\r\n                range.setEnd(endCon, endOff);\r\n            } catch (error) {\r\n                console.warn('[SUNEDITOR.core.focus.error] ' + error);\r\n                this.nativeFocus();\r\n                return;\r\n            }\r\n\r\n            const selection = this.getSelection();\r\n\r\n            if (selection.removeAllRanges) {\r\n                selection.removeAllRanges();\r\n            }\r\n\r\n            selection.addRange(range);\r\n            this._rangeInfo(range, this.getSelection());\r\n            if (options.iframe) this.__focus();\r\n\r\n            return range;\r\n        },\r\n\r\n        /**\r\n         * @description Remove range object and button effect\r\n         */\r\n        removeRange: function () {\r\n            this._variable._range = null;\r\n            this._variable._selectionNode = null;\r\n            if (this.hasFocus) this.getSelection().removeAllRanges();\r\n            this._setKeyEffect([]);\r\n        },\r\n\r\n        /**\r\n         * @description Get current editor's range object\r\n         * @returns {Object}\r\n         */\r\n        getRange: function () {\r\n            const range = this._variable._range || this._createDefaultRange();\r\n            const selection = this.getSelection();\r\n            if (range.collapsed === selection.isCollapsed || !context.element.wysiwyg.contains(selection.focusNode)) return range;\r\n            \r\n            if (selection.rangeCount > 0) {\r\n                this._variable._range = selection.getRangeAt(0);\r\n                return this._variable._range;\r\n            } else {\r\n                const sc = selection.anchorNode, ec = selection.focusNode, so = selection.anchorOffset, eo = selection.focusOffset;\r\n                const compareValue = util.compareElements(sc, ec);\r\n                const rightDir = compareValue.ancestor && (compareValue.result === 0 ? so <= eo : compareValue.result > 1 ? true : false);\r\n                return this.setRange(\r\n                    rightDir ? sc : ec,\r\n                    rightDir ? so : eo,\r\n                    rightDir ? ec : sc,\r\n                    rightDir ? eo : so\r\n                );\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description If the \"range\" object is a non-editable area, add a line at the top of the editor and update the \"range\" object.\r\n         * Returns a new \"range\" or argument \"range\".\r\n         * @param {Object} range core.getRange()\r\n         * @param {Element|null} container If there is \"container\" argument, it creates a line in front of the container.\r\n         * @returns {Object} range\r\n         */\r\n        getRange_addLine: function (range, container) {\r\n            if (this._selectionVoid(range)) {\r\n                const wysiwyg = context.element.wysiwyg;\r\n                const op = util.createElement(options.defaultTag);\r\n                op.innerHTML = '<br>';\r\n                wysiwyg.insertBefore(op, container && container !== wysiwyg ? container.nextElementSibling : wysiwyg.firstElementChild);\r\n                this.setRange(op.firstElementChild, 0, op.firstElementChild, 1);\r\n                range = this._variable._range;\r\n            }\r\n            return range;\r\n        },\r\n\r\n        /**\r\n         * @description Get window selection obejct\r\n         * @returns {Object}\r\n         */\r\n        getSelection: function () {\r\n            const selection = this._shadowRoot && this._shadowRoot.getSelection ? this._shadowRoot.getSelection() : this._ww.getSelection();\r\n            if (!this._variable._range && !context.element.wysiwyg.contains(selection.focusNode)) {\r\n                selection.removeAllRanges();\r\n                selection.addRange(this._createDefaultRange());\r\n            }\r\n            return selection;\r\n        },\r\n\r\n        /**\r\n         * @description Get current select node\r\n         * @returns {Node}\r\n         */\r\n        getSelectionNode: function () {\r\n            if (!context.element.wysiwyg.contains(this._variable._selectionNode)) this._editorRange();\r\n            if (!this._variable._selectionNode) {\r\n                const selectionNode = util.getChildElement(context.element.wysiwyg.firstChild, function (current) { return current.childNodes.length === 0 || current.nodeType === 3; }, false);\r\n                if (!selectionNode) {\r\n                    this._editorRange();\r\n                } else {\r\n                    this._variable._selectionNode = selectionNode;\r\n                    return selectionNode;\r\n                }\r\n            }\r\n            return this._variable._selectionNode;\r\n        },\r\n\r\n        /**\r\n         * @description Saving the range object and the currently selected node of editor\r\n         * @private\r\n         */\r\n        _editorRange: function () {\r\n            const activeEl = this._wd.activeElement;\r\n            if (util.isInputElement(activeEl)) {\r\n                this._variable._selectionNode = activeEl;\r\n                return activeEl;\r\n            }\r\n\r\n            const selection = this.getSelection();\r\n            if (!selection) return null;\r\n            let range = null;\r\n\r\n            if (selection.rangeCount > 0) {\r\n                range = selection.getRangeAt(0);\r\n            } else {\r\n                range = this._createDefaultRange();\r\n            }\r\n\r\n            this._rangeInfo(range, selection);\r\n        },\r\n\r\n        /**\r\n         * @description Set \"range\" and \"selection\" info.\r\n         * @param {Object} range range object.\r\n         * @param {Object} selection selection object.\r\n         */\r\n        _rangeInfo: function (range, selection) {\r\n            let selectionNode = null;\r\n            this._variable._range = range;\r\n\r\n            if (range.collapsed) {\r\n                if (util.isWysiwygDiv(range.commonAncestorContainer)) selectionNode = range.commonAncestorContainer.children[range.startOffset] || range.commonAncestorContainer;\r\n                else selectionNode = range.commonAncestorContainer;\r\n            } else {\r\n                selectionNode = selection.extentNode || selection.anchorNode;\r\n            }\r\n\r\n            this._variable._selectionNode = selectionNode;\r\n        },\r\n\r\n        /**\r\n         * @description Return the range object of editor's first child node\r\n         * @returns {Object}\r\n         * @private\r\n         */\r\n        _createDefaultRange: function () {\r\n            const wysiwyg = context.element.wysiwyg;\r\n            const range = this._wd.createRange();\r\n\r\n            let firstFormat = wysiwyg.firstElementChild;\r\n            let focusEl = null;\r\n            if (!firstFormat) {\r\n                firstFormat = util.createElement(options.defaultTag);\r\n                focusEl = util.createElement('BR');\r\n                firstFormat.appendChild(focusEl);\r\n                wysiwyg.appendChild(firstFormat);\r\n            } else {\r\n                focusEl = firstFormat.firstChild;\r\n                if (!focusEl) {\r\n                    focusEl = util.createElement('BR');\r\n                    firstFormat.appendChild(focusEl);\r\n                }\r\n            }\r\n\r\n            range.setStart(focusEl, 0);\r\n            range.setEnd(focusEl, 0);\r\n            \r\n            return range;\r\n        },\r\n\r\n        /**\r\n         * @description Returns true if there is no valid \"selection\".\r\n         * @param {Object} range core.getRange()\r\n         * @returns {Object} range\r\n         * @private\r\n         */\r\n        _selectionVoid: function (range) {\r\n            const comm = range.commonAncestorContainer;\r\n            return (util.isWysiwygDiv(range.startContainer) && util.isWysiwygDiv(range.endContainer)) || /FIGURE/i.test(comm.nodeName) || this._fileManager.regExp.test(comm.nodeName) || util.isMediaComponent(comm);\r\n        },\r\n\r\n        /**\r\n         * @description Reset range object to text node selected status.\r\n         * @returns {Boolean} Returns false if there is no valid selection.\r\n         * @private\r\n         */\r\n        _resetRangeToTextNode: function () {\r\n            const range = this.getRange();\r\n            if (this._selectionVoid(range)) return false;\r\n            \r\n            let startCon = range.startContainer;\r\n            let startOff = range.startOffset;\r\n            let endCon = range.endContainer;\r\n            let endOff = range.endOffset;\r\n            let tempCon, tempOffset, tempChild;\r\n\r\n            if (util.isFormatElement(startCon)) {\r\n                if (!startCon.childNodes[startOff]) {\r\n                    startCon = startCon.lastChild || startCon;\r\n                    startOff = startCon.textContent.length;\r\n                } else {\r\n                    startCon = startCon.childNodes[startOff] || startCon;\r\n                    startOff = 0;\r\n                }\r\n                while (startCon && startCon.nodeType === 1 && startCon.firstChild) {\r\n                    startCon = startCon.firstChild || startCon;\r\n                    startOff = 0;\r\n                }\r\n            }\r\n            if (util.isFormatElement(endCon)) {\r\n                endCon = endCon.childNodes[endOff] || endCon.lastChild || endCon;\r\n                while (endCon && endCon.nodeType === 1 && endCon.lastChild) {\r\n                    endCon = endCon.lastChild;\r\n                }\r\n                endOff = endCon.textContent.length;\r\n            }\r\n\r\n            // startContainer\r\n            tempCon = util.isWysiwygDiv(startCon) ? context.element.wysiwyg.firstChild : startCon;\r\n            tempOffset = startOff;\r\n\r\n            if (util.isBreak(tempCon) || (tempCon.nodeType === 1 && tempCon.childNodes.length > 0)) {\r\n                const onlyBreak = util.isBreak(tempCon);\r\n                if (!onlyBreak) {\r\n                    while (tempCon && !util.isBreak(tempCon) && tempCon.nodeType === 1) {\r\n                        tempCon = tempCon.childNodes[tempOffset] || tempCon.nextElementSibling || tempCon.nextSibling;\r\n                        tempOffset = 0;\r\n                    }\r\n    \r\n                    let format = util.getFormatElement(tempCon, null);\r\n                    if (format === util.getRangeFormatElement(format, null)) {\r\n                        format = util.createElement(util.getParentElement(tempCon, util.isCell) ? 'DIV' : options.defaultTag);\r\n                        tempCon.parentNode.insertBefore(format, tempCon);\r\n                        format.appendChild(tempCon);\r\n                    }\r\n                }\r\n\r\n                if (util.isBreak(tempCon)) {\r\n                    const emptyText = util.createTextNode(util.zeroWidthSpace);\r\n                    tempCon.parentNode.insertBefore(emptyText, tempCon);\r\n                    tempCon = emptyText;\r\n                    if (onlyBreak) {\r\n                        if (startCon === endCon) {\r\n                            endCon = tempCon;\r\n                            endOff = 1;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // set startContainer\r\n            startCon = tempCon;\r\n            startOff = tempOffset;\r\n\r\n            // endContainer\r\n            tempCon = util.isWysiwygDiv(endCon) ? context.element.wysiwyg.lastChild : endCon;\r\n            tempOffset = endOff;\r\n\r\n            if (util.isBreak(tempCon) || (tempCon.nodeType === 1 && tempCon.childNodes.length > 0)) {\r\n                const onlyBreak = util.isBreak(tempCon);\r\n                if (!onlyBreak) {\r\n                    while (tempCon && !util.isBreak(tempCon) && tempCon.nodeType === 1) {\r\n                        tempChild = tempCon.childNodes;\r\n                        if (tempChild.length === 0) break;\r\n                        tempCon = tempChild[tempOffset > 0 ? tempOffset - 1 : tempOffset] || !/FIGURE/i.test(tempChild[0].nodeName) ? tempChild[0] : (tempCon.previousElementSibling || tempCon.previousSibling || startCon);\r\n                        tempOffset = tempOffset > 0 ? tempCon.textContent.length : tempOffset;\r\n                    }\r\n    \r\n                    let format = util.getFormatElement(tempCon, null);\r\n                    if (format === util.getRangeFormatElement(format, null)) {\r\n                        format = util.createElement(util.isCell(format) ? 'DIV' : options.defaultTag);\r\n                        tempCon.parentNode.insertBefore(format, tempCon);\r\n                        format.appendChild(tempCon);\r\n                    }\r\n                }\r\n\r\n                if (util.isBreak(tempCon)) {\r\n                    const emptyText = util.createTextNode(util.zeroWidthSpace);\r\n                    tempCon.parentNode.insertBefore(emptyText, tempCon);\r\n                    tempCon = emptyText;\r\n                    tempOffset = 1;\r\n                    if (onlyBreak && !tempCon.previousSibling) {\r\n                        util.removeItem(endCon);\r\n                    }\r\n                }\r\n            }\r\n\r\n            // set endContainer\r\n            endCon = tempCon;\r\n            endOff = tempOffset;\r\n\r\n            // set Range\r\n            this.setRange(startCon, startOff, endCon, endOff);\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * @description Returns a \"formatElement\"(util.isFormatElement) array from the currently selected range.\r\n         * @param {Function|null} validation The validation function. (Replaces the default validation function-util.isFormatElement(current))\r\n         * @returns {Array}\r\n         */\r\n        getSelectedElements: function (validation) {\r\n            if (!this._resetRangeToTextNode()) return [];\r\n            let range = this.getRange();\r\n\r\n            if (util.isWysiwygDiv(range.startContainer)) {\r\n                const children = context.element.wysiwyg.children;\r\n                if (children.length === 0) return [];\r\n                this.setRange(children[0], 0, children[children.length - 1], children[children.length - 1].textContent.trim().length);\r\n                range = this.getRange();\r\n            }\r\n\r\n            const startCon = range.startContainer;\r\n            const endCon = range.endContainer;\r\n            const commonCon = range.commonAncestorContainer;\r\n\r\n            // get line nodes\r\n            const lineNodes = util.getListChildren(commonCon, function (current) {\r\n                return validation ? validation(current) : util.isFormatElement(current);\r\n            });\r\n\r\n            if (!util.isWysiwygDiv(commonCon) && !util.isRangeFormatElement(commonCon)) lineNodes.unshift(util.getFormatElement(commonCon, null));\r\n            if (startCon === endCon || lineNodes.length === 1) return lineNodes;\r\n\r\n            let startLine = util.getFormatElement(startCon, null);\r\n            let endLine = util.getFormatElement(endCon, null);\r\n            let startIdx = null;\r\n            let endIdx = null;\r\n            \r\n            const onlyTable = function (current) {\r\n                return util.isTable(current) ? /^TABLE$/i.test(current.nodeName) : true;\r\n            };\r\n\r\n            let startRangeEl = util.getRangeFormatElement(startLine, onlyTable);\r\n            let endRangeEl = util.getRangeFormatElement(endLine, onlyTable);\r\n            if (util.isTable(startRangeEl) && util.isListCell(startRangeEl.parentNode)) startRangeEl = startRangeEl.parentNode;\r\n            if (util.isTable(endRangeEl) && util.isListCell(endRangeEl.parentNode)) endRangeEl = endRangeEl.parentNode;\r\n            \r\n            const sameRange = startRangeEl === endRangeEl;\r\n            for (let i = 0, len = lineNodes.length, line; i < len; i++) {\r\n                line = lineNodes[i];\r\n\r\n                if (startLine === line || (!sameRange && line === startRangeEl)) {\r\n                    startIdx = i;\r\n                    continue;\r\n                }\r\n\r\n                if (endLine === line || (!sameRange && line === endRangeEl)) {\r\n                    endIdx = i;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (startIdx === null) startIdx = 0;\r\n            if (endIdx === null) endIdx = lineNodes.length - 1;\r\n\r\n            return lineNodes.slice(startIdx, endIdx + 1);\r\n        },\r\n\r\n        /**\r\n         * @description Get format elements and components from the selected area. (P, DIV, H[1-6], OL, UL, TABLE..)\r\n         * If some of the component are included in the selection, get the entire that component.\r\n         * @param {Boolean} removeDuplicate If true, if there is a parent and child tag among the selected elements, the child tag is excluded.\r\n         * @returns {Array}\r\n         */\r\n        getSelectedElementsAndComponents: function (removeDuplicate) {\r\n            const commonCon = this.getRange().commonAncestorContainer;\r\n            const myComponent = util.getParentElement(commonCon, util.isComponent);\r\n            const selectedLines = util.isTable(commonCon) ? \r\n                this.getSelectedElements(null) :\r\n                this.getSelectedElements(function (current) {\r\n                    const component = this.getParentElement(current, this.isComponent);\r\n                    return (this.isFormatElement(current) && (!component || component === myComponent)) || (this.isComponent(current) && !this.getFormatElement(current));\r\n                }.bind(util));\r\n            \r\n            if (removeDuplicate) {\r\n                for (let i = 0, len = selectedLines.length; i < len; i++) {\r\n                    for (let j = i - 1; j >= 0; j--) {\r\n                        if (selectedLines[j].contains(selectedLines[i])) {\r\n                            selectedLines.splice(i, 1);\r\n                            i--; len--;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return selectedLines;\r\n        },\r\n\r\n        /**\r\n         * @description Determine if this offset is the edge offset of container\r\n         * @param {Node} container The node of the selection object. (range.startContainer..)\r\n         * @param {Number} offset The offset of the selection object. (core.getRange().startOffset...)\r\n         * @param {String|undefined} dir Select check point - Both edge, Front edge or End edge. (\"front\": Front edge, \"end\": End edge, undefined: Both edge)\r\n         * @returns {Boolean}\r\n         */\r\n        isEdgePoint: function (container, offset, dir) {\r\n            return (dir !== 'end' && offset === 0) || ((!dir || dir !== 'front') && !container.nodeValue && offset === 1) || ((!dir || dir === 'end') && !!container.nodeValue && offset === container.nodeValue.length);\r\n        },\r\n\r\n        /**\r\n         * @description Check if the container and offset values are the edges of the format tag\r\n         * @param {Node} container The node of the selection object. (range.startContainer..)\r\n         * @param {Number} offset The offset of the selection object. (core.getRange().startOffset...)\r\n         * @param {String} dir Select check point - \"front\": Front edge, \"end\": End edge, undefined: Both edge.\r\n         * @returns {Array|null}\r\n         * @private\r\n         */\r\n        _isEdgeFormat: function (node, offset, dir) {\r\n            if (!this.isEdgePoint(node, offset, dir)) return false;\r\n\r\n            const result = [];\r\n            dir = dir === 'front' ? 'previousSibling' : 'nextSibling';\r\n            while (node && !util.isFormatElement(node) && !util.isWysiwygDiv(node)) {\r\n                if (!node[dir] || (util.isBreak(node[dir]) && !node[dir][dir])) {\r\n                    if (node.nodeType === 1) result.push(node.cloneNode(false));\r\n                    node = node.parentNode;\r\n                } else {\r\n                    return null;\r\n                }\r\n            }\r\n\r\n            return result;\r\n        },\r\n\r\n        /**\r\n         * @description Show loading box\r\n         */\r\n        showLoading: function () {\r\n            context.element.loading.style.display = 'block';\r\n        },\r\n\r\n        /**\r\n         * @description Close loading box\r\n         */\r\n        closeLoading: function () {\r\n            context.element.loading.style.display = 'none';\r\n        },\r\n\r\n        /**\r\n         * @description Append format element to sibling node of argument element.\r\n         * If the \"formatNodeName\" argument value is present, the tag of that argument value is inserted,\r\n         * If not, the currently selected format tag is inserted.\r\n         * @param {Element} element Insert as siblings of that element\r\n         * @param {String|Element|null} formatNode Node name or node obejct to be inserted\r\n         * @returns {Element}\r\n         */\r\n        appendFormatTag: function (element, formatNode) {\r\n            if (!element || !element.parentNode) return null;\r\n\r\n            const currentFormatEl = util.getFormatElement(this.getSelectionNode(), null);\r\n            let oFormat = null;\r\n            if (!util.isFormatElement(element) && util.isFreeFormatElement(currentFormatEl || element.parentNode)) {\r\n                oFormat = util.createElement('BR');\r\n            } else {\r\n                const oFormatName = formatNode ? (typeof formatNode === 'string' ? formatNode : formatNode.nodeName) : (util.isFormatElement(currentFormatEl) && !util.isRangeFormatElement(currentFormatEl) && !util.isFreeFormatElement(currentFormatEl)) ? currentFormatEl.nodeName : options.defaultTag;\r\n                oFormat = util.createElement(oFormatName);\r\n                oFormat.innerHTML = '<br>';\r\n                if ((formatNode && typeof formatNode !== 'string') || (!formatNode && util.isFormatElement(currentFormatEl))) {\r\n                    util.copyTagAttributes(oFormat, formatNode || currentFormatEl, ['id']);\r\n                }\r\n            }\r\n\r\n            if (util.isCell(element)) element.insertBefore(oFormat, element.nextElementSibling);\r\n            else element.parentNode.insertBefore(oFormat, element.nextElementSibling);\r\n\r\n            return oFormat;\r\n        },\r\n\r\n        /**\r\n         * @description The method to insert a element and return. (used elements : table, hr, image, video)\r\n         * If \"element\" is \"HR\", insert and return the new line.\r\n         * @param {Element} element Element to be inserted\r\n         * @param {Boolean} notHistoryPush When true, it does not update the history stack and the selection object and return EdgeNodes (util.getEdgeChildNodes)\r\n         * @param {Boolean} checkCharCount If true, if \"options.maxCharCount\" is exceeded when \"element\" is added, null is returned without addition.\r\n         * @param {Boolean} notSelect If true, Do not automatically select the inserted component.\r\n         * @returns {Element}\r\n         */\r\n        insertComponent: function (element, notHistoryPush, checkCharCount, notSelect) {\r\n            if (this.isReadOnly || (checkCharCount && !this.checkCharCount(element, null))) {\r\n                return null;\r\n            }\r\n\r\n            const r = this.removeNode();\r\n            this.getRange_addLine(this.getRange(), r.container);\r\n            let oNode = null;\r\n            let selectionNode = this.getSelectionNode();\r\n            let formatEl = util.getFormatElement(selectionNode, null);\r\n\r\n            if (util.isListCell(formatEl)) {\r\n                this.insertNode(element, selectionNode === formatEl ? null : r.container.nextSibling, false);\r\n                if (!element.nextSibling) element.parentNode.appendChild(util.createElement('BR'));\r\n            } else {\r\n                if (this.getRange().collapsed && (r.container.nodeType === 3 || util.isBreak(r.container))) {\r\n                    const depthFormat = util.getParentElement(r.container, function (current) { return this.isRangeFormatElement(current); }.bind(util));\r\n                    oNode = util.splitElement(r.container, r.offset, !depthFormat ? 0 : util.getElementDepth(depthFormat) + 1);\r\n                    if (oNode) formatEl = oNode.previousSibling;\r\n                }\r\n                this.insertNode(element, util.isRangeFormatElement(formatEl) ? null : formatEl, false);\r\n                if (formatEl && util.onlyZeroWidthSpace(formatEl)) util.removeItem(formatEl);\r\n            }\r\n\r\n            if (!notSelect) {\r\n                this.setRange(element, 0, element, 0);\r\n                \r\n                const fileComponentInfo = this.getFileComponent(element);\r\n                if (fileComponentInfo) {\r\n                    this.selectComponent(fileComponentInfo.target, fileComponentInfo.pluginName);\r\n                } else if (oNode) {\r\n                    oNode = util.getEdgeChildNodes(oNode, null).sc || oNode;\r\n                    this.setRange(oNode, 0, oNode, 0);\r\n                }\r\n            }\r\n\r\n            // history stack\r\n            if (!notHistoryPush) this.history.push(1);\r\n\r\n            return oNode || element;\r\n        },\r\n\r\n        /**\r\n         * @description Gets the file component and that plugin name\r\n         * return: {target, component, pluginName} | null\r\n         * @param {Element} element Target element (figure tag, component div, file tag)\r\n         * @returns {Object|null}\r\n         */\r\n        getFileComponent: function (element) {\r\n            if (!this._fileManager.queryString || !element) return null;\r\n\r\n            let target, pluginName;\r\n            if (/^FIGURE$/i.test(element.nodeName) || /se-component/.test(element.className)) {\r\n                target = element.querySelector(this._fileManager.queryString);\r\n            }\r\n            if (!target && element.nodeName && this._fileManager.regExp.test(element.nodeName)) {\r\n                target = element;\r\n            }\r\n\r\n            if (target) {\r\n                pluginName = this._fileManager.pluginMap[target.nodeName.toLowerCase()];\r\n                if (pluginName) {\r\n                    return {\r\n                        target: target,\r\n                        component: util.getParentElement(target, util.isComponent),\r\n                        pluginName: pluginName\r\n                    };\r\n                }\r\n            }\r\n\r\n            return null;\r\n        },\r\n\r\n        /**\r\n         * @description The component(image, video) is selected and the resizing module is called.\r\n         * @param {Element} element Element tag (img, iframe, video)\r\n         * @param {String} pluginName Plugin name (image, video)\r\n         */\r\n        selectComponent: function (element, pluginName) {\r\n            if (util.isUneditableComponent(util.getParentElement(element, util.isComponent)) || util.isUneditableComponent(element)) return false;\r\n            if (!this.hasFocus) this.focus();\r\n            const plugin = this.plugins[pluginName];\r\n            if (!plugin) return;\r\n            _w.setTimeout(function () {\r\n                if (typeof plugin.select === 'function') this.callPlugin(pluginName, plugin.select.bind(this, element), null);\r\n                this._setComponentLineBreaker(element);\r\n            }.bind(this));\r\n        },\r\n\r\n        /**\r\n         * @description Set line breaker of component\r\n         * @param {Element} element Element tag (img, iframe, video)\r\n         * @private\r\n         */\r\n        _setComponentLineBreaker: function (element) {\r\n            // line breaker\r\n            this._lineBreaker.style.display = 'none';\r\n            const container = util.getParentElement(element, util.isComponent);\r\n            const t_style = context.element.lineBreaker_t.style;\r\n            const b_style = context.element.lineBreaker_b.style;\r\n            const target = this.context.resizing.resizeContainer.style.display === 'block' ? this.context.resizing.resizeContainer : element;\r\n\r\n            const isList = util.isListCell(container.parentNode);\r\n            let componentTop, wScroll, w;\r\n            // top\r\n            if (isList ? !container.previousSibling : !util.isFormatElement(container.previousElementSibling)) {\r\n                this._variable._lineBreakComp = container;\r\n                wScroll = context.element.wysiwyg.scrollTop;\r\n                componentTop = util.getOffset(element, context.element.wysiwygFrame).top + wScroll;\r\n                w = (target.offsetWidth / 2) / 2;\r\n\r\n                t_style.top = (componentTop - wScroll - 12) + 'px';\r\n                t_style.left = (util.getOffset(target).left + w) + 'px';\r\n                t_style.display = 'block';\r\n            } else {\r\n                t_style.display = 'none';\r\n            }\r\n            // bottom\r\n            if (isList ? !container.nextSibling : !util.isFormatElement(container.nextElementSibling)) {\r\n                if (!componentTop) {\r\n                    this._variable._lineBreakComp = container;\r\n                    wScroll = context.element.wysiwyg.scrollTop;\r\n                    componentTop = util.getOffset(element, context.element.wysiwygFrame).top + wScroll;\r\n                    w = (target.offsetWidth / 2) / 2;\r\n                }\r\n\r\n                b_style.top = (componentTop + target.offsetHeight - wScroll - 12) + 'px';\r\n                b_style.left = (util.getOffset(target).left + target.offsetWidth - w - 24) + 'px';\r\n                b_style.display = 'block';\r\n            } else {\r\n                b_style.display = 'none';\r\n            }\r\n        },\r\n\r\n        _checkDuplicateNode: function (oNode, parentNode) {\r\n            (function recursionFunc(current) {\r\n                core._dupleCheck(current, parentNode);\r\n                const childNodes = current.childNodes;\r\n                for (let i = 0, len = childNodes.length; i < len; i++) {\r\n                    recursionFunc(childNodes[i]);\r\n                }\r\n            })(oNode);\r\n        },\r\n\r\n        _dupleCheck: function (oNode, parentNode) {\r\n            if (!util.isTextStyleElement(oNode)) return;\r\n            \r\n            const oStyles = (oNode.style.cssText.match(/[^;]+;/g) || []).map(function(v){ return v.trim(); });\r\n            const nodeName = oNode.nodeName;\r\n            if (/^span$/i.test(nodeName) && oStyles.length === 0) return oNode;\r\n\r\n            let duple = false;\r\n            (function recursionFunc(ancestor) {\r\n                if (util.isWysiwygDiv(ancestor) || !util.isTextStyleElement(ancestor)) return;\r\n                if (ancestor.nodeName === nodeName) {\r\n                    duple = true;\r\n                    const styles = ancestor.style.cssText.match(/[^;]+;/g) || [];\r\n                    for (let i = 0, len = styles.length, j; i < len; i++) {\r\n                        if ((j = oStyles.indexOf(styles[i].trim())) > -1) {\r\n                            oStyles.splice(j, 1);\r\n                        }\r\n                    }\r\n                    for (let i = 0, len = ancestor.classList.length; i < len; i++) {\r\n                        oNode.classList.remove(ancestor.classList[i]);\r\n                    }\r\n                }\r\n\r\n                recursionFunc(ancestor.parentElement);\r\n            })(parentNode);\r\n\r\n            if (duple) {\r\n                if (!(oNode.style.cssText = oStyles.join(' '))) {\r\n                    oNode.setAttribute('style', '');\r\n                    oNode.removeAttribute('style');\r\n                }\r\n                if (!oNode.attributes.length) {\r\n                    oNode.setAttribute('data-se-duple', 'true');\r\n                }\r\n            }\r\n\r\n            return oNode;\r\n        },\r\n\r\n        /**\r\n         * @description Delete selected node and insert argument value node and return.\r\n         * If the \"afterNode\" exists, it is inserted after the \"afterNode\"\r\n         * Inserting a text node merges with both text nodes on both sides and returns a new \"{ container, startOffset, endOffset }\".\r\n         * @param {Node} oNode Element to be inserted\r\n         * @param {Node|null} afterNode If the node exists, it is inserted after the node\r\n         * @param {Boolean} checkCharCount If true, if \"options.maxCharCount\" is exceeded when \"element\" is added, null is returned without addition.\r\n         * @returns {Object|Node|null}\r\n         */\r\n        insertNode: function (oNode, afterNode, checkCharCount) {\r\n            if (this.isReadOnly || (checkCharCount && !this.checkCharCount(oNode, null))) {\r\n                return null;\r\n            }\r\n\r\n            let range = this.getRange();\r\n            let line = util.isListCell(range.commonAncestorContainer) ? range.commonAncestorContainer : util.getFormatElement(this.getSelectionNode(), null);\r\n            let insertListCell = util.isListCell(line) && (util.isListCell(oNode) || util.isList(oNode));\r\n            \r\n            let parentNode, originAfter, tempAfterNode, tempParentNode = null;\r\n            const freeFormat = util.isFreeFormatElement(line);\r\n            const isFormats = (!freeFormat && (util.isFormatElement(oNode) || util.isRangeFormatElement(oNode))) || util.isComponent(oNode);\r\n\r\n            if (insertListCell) {\r\n                tempAfterNode = afterNode || util.isList(oNode) ? line.lastChild : line.nextElementSibling;\r\n                tempParentNode = util.isList(oNode) ? line : (tempAfterNode || line).parentNode;\r\n            }\r\n\r\n            if (!afterNode && (isFormats || util.isComponent(oNode) || util.isMedia(oNode))) {\r\n                const isEdge = this.isEdgePoint(range.endContainer, range.endOffset, 'end');\r\n                const r = this.removeNode();\r\n                const container = r.container;\r\n                const prevContainer = (container === r.prevContainer && range.collapsed) ? null : r.prevContainer;\r\n\r\n                if (insertListCell && prevContainer) {\r\n                    tempParentNode = prevContainer.nodeType === 3 ? prevContainer.parentNode : prevContainer;\r\n                    if (tempParentNode.contains(container)) {\r\n                        let sameParent = true;\r\n                        tempAfterNode = container;\r\n                        while (tempAfterNode.parentNode && tempAfterNode.parentNode !== tempParentNode) {\r\n                            tempAfterNode = tempAfterNode.parentNode;\r\n                            sameParent = false;\r\n                        }\r\n                        if (sameParent && container === prevContainer) tempAfterNode = tempAfterNode.nextSibling;\r\n                    } else {\r\n                        tempAfterNode = null;\r\n                    }\r\n                } else if (insertListCell && util.isListCell(container) && !line.parentElement) {\r\n                    line = util.createElement('LI');\r\n                    tempParentNode.appendChild(line);\r\n                    container.appendChild(tempParentNode);\r\n                    tempAfterNode = null;\r\n                } else if (container.nodeType === 3 || util.isBreak(container) || insertListCell) {\r\n                    const depthFormat = util.getParentElement(container, function (current) { return this.isRangeFormatElement(current) || this.isListCell(current); }.bind(util));\r\n                    afterNode = util.splitElement(container, r.offset, !depthFormat ? 0 : util.getElementDepth(depthFormat) + 1);\r\n                    if (!afterNode) {\r\n                        tempAfterNode = afterNode = line;\r\n                    } else if (insertListCell) {\r\n                        if (line.contains(container)) {\r\n                            const subList = util.isList(line.lastElementChild);\r\n                            let newCell = null;\r\n                            if (!isEdge) {\r\n                                newCell = line.cloneNode(false);\r\n                                newCell.appendChild(afterNode.textContent.trim() ? afterNode : util.createTextNode(util.zeroWidthSpace));\r\n                            }\r\n                            if (subList) {\r\n                                if (!newCell) {\r\n                                    newCell = line.cloneNode(false);\r\n                                    newCell.appendChild(util.createTextNode(util.zeroWidthSpace));\r\n                                }\r\n                                newCell.appendChild(line.lastElementChild);\r\n                            }\r\n                            if (newCell) {\r\n                                line.parentNode.insertBefore(newCell, line.nextElementSibling);\r\n                                tempAfterNode = afterNode = newCell;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        afterNode = afterNode.previousSibling;\r\n                    }\r\n                }\r\n            }\r\n\r\n            range = (!afterNode && !isFormats) ? this.getRange_addLine(this.getRange(), null) : this.getRange();\r\n            const commonCon = range.commonAncestorContainer;\r\n            const startOff = range.startOffset;\r\n            const endOff = range.endOffset;\r\n            const formatRange = range.startContainer === commonCon && util.isFormatElement(commonCon);\r\n            const startCon = formatRange ? (commonCon.childNodes[startOff] || commonCon.childNodes[0] || range.startContainer) : range.startContainer;\r\n            const endCon = formatRange ? (commonCon.childNodes[endOff] || commonCon.childNodes[commonCon.childNodes.length - 1] || range.endContainer) : range.endContainer;\r\n\r\n            if (!insertListCell) {\r\n                if (!afterNode) {\r\n                    parentNode = startCon;\r\n                    if (startCon.nodeType === 3) {\r\n                        parentNode = startCon.parentNode;\r\n                    }\r\n    \r\n                    /** No Select range node */\r\n                    if (range.collapsed) {\r\n                        if (commonCon.nodeType === 3) {\r\n                            if (commonCon.textContent.length > endOff) afterNode = commonCon.splitText(endOff);\r\n                            else afterNode = commonCon.nextSibling;\r\n                        } else {\r\n                            if (!util.isBreak(parentNode)) {\r\n                                let c = parentNode.childNodes[startOff];\r\n                                const focusNode = (c && c.nodeType === 3 && util.onlyZeroWidthSpace(c) && util.isBreak(c.nextSibling)) ? c.nextSibling : c;\r\n                                if (focusNode) {\r\n                                    if (!focusNode.nextSibling && util.isBreak(focusNode)) {\r\n                                        parentNode.removeChild(focusNode);\r\n                                        afterNode = null;\r\n                                    } else {\r\n                                        afterNode = (util.isBreak(focusNode) && !util.isBreak(oNode)) ? focusNode : focusNode.nextSibling;\r\n                                    }\r\n                                } else {\r\n                                    afterNode = null;\r\n                                }\r\n                            } else {\r\n                                afterNode = parentNode;\r\n                                parentNode = parentNode.parentNode;\r\n                            }\r\n                        }\r\n                    } else { /** Select range nodes */\r\n                        const isSameContainer = startCon === endCon;\r\n                        if (isSameContainer) {\r\n                            if (this.isEdgePoint(endCon, endOff)) afterNode = endCon.nextSibling;\r\n                            else afterNode = endCon.splitText(endOff);\r\n    \r\n                            let removeNode = startCon;\r\n                            if (!this.isEdgePoint(startCon, startOff)) removeNode = startCon.splitText(startOff);\r\n    \r\n                            parentNode.removeChild(removeNode);\r\n                            if (parentNode.childNodes.length === 0 && isFormats) {\r\n                                parentNode.innerHTML = '<br>';\r\n                            }\r\n                        }\r\n                        else {\r\n                            const removedTag = this.removeNode();\r\n                            const container = removedTag.container;\r\n                            const prevContainer = removedTag.prevContainer;\r\n\r\n                            if (container && container.childNodes.length === 0 && isFormats) {\r\n                                if (util.isFormatElement(container)) {\r\n                                    container.innerHTML = '<br>';\r\n                                } else if (util.isRangeFormatElement(container)) {\r\n                                    container.innerHTML = '<' + options.defaultTag + '><br></' + options.defaultTag + '>';\r\n                                }\r\n                            }\r\n    \r\n                            if (util.isListCell(container) && oNode.nodeType === 3) {\r\n                                parentNode = container;\r\n                                afterNode = null;\r\n                            } else if (!isFormats && prevContainer) {\r\n                                parentNode = prevContainer.nodeType === 3 ? prevContainer.parentNode : prevContainer;\r\n                                if (parentNode.contains(container)) {\r\n                                    let sameParent = true;\r\n                                    afterNode = container;\r\n                                    while (afterNode.parentNode && afterNode.parentNode !== parentNode) {\r\n                                        afterNode = afterNode.parentNode;\r\n                                        sameParent = false;\r\n                                    }\r\n                                    if (sameParent && container === prevContainer) afterNode = afterNode.nextSibling;\r\n                                } else {\r\n                                    afterNode = null;\r\n                                }\r\n                            } else if (util.isWysiwygDiv(container) && !util.isFormatElement(oNode)) {\r\n                                parentNode = container.appendChild(util.createElement(options.defaultTag));\r\n                                afterNode = null;\r\n                            } else {\r\n                                afterNode = isFormats ? endCon : container === prevContainer ? container.nextSibling : container;\r\n                                parentNode = (!afterNode || !afterNode.parentNode) ? commonCon : afterNode.parentNode;\r\n                            }\r\n    \r\n                            while (afterNode && !util.isFormatElement(afterNode) && afterNode.parentNode !== commonCon) {\r\n                                afterNode = afterNode.parentNode;\r\n                            }\r\n                        }\r\n                    }\r\n                } else { // has afterNode\r\n                    parentNode = afterNode.parentNode;\r\n                    afterNode = afterNode.nextSibling;\r\n                    originAfter = true;\r\n                }\r\n            }\r\n\r\n            try {\r\n                // set node\r\n                if (!insertListCell) {\r\n                    if (util.isWysiwygDiv(afterNode) || parentNode === context.element.wysiwyg.parentNode) {\r\n                        parentNode = context.element.wysiwyg;\r\n                        afterNode = null;\r\n                    }\r\n    \r\n                    if (util.isFormatElement(oNode) || util.isRangeFormatElement(oNode) || (!util.isListCell(parentNode) && util.isComponent(oNode))) {\r\n                        const oldParent = parentNode;\r\n                        if (util.isList(afterNode)) {\r\n                            parentNode = afterNode;\r\n                            afterNode = null;\r\n                        } else if (util.isListCell(afterNode)) {\r\n                            parentNode = afterNode.previousElementSibling || afterNode;\r\n                        } else if (!originAfter && !afterNode) {\r\n                            const r = this.removeNode();\r\n                            const container = r.container.nodeType === 3 ? (util.isListCell(util.getFormatElement(r.container, null)) ? r.container : (util.getFormatElement(r.container, null) || r.container.parentNode)) : r.container;\r\n                            const rangeCon = util.isWysiwygDiv(container) || util.isRangeFormatElement(container);\r\n                            parentNode = rangeCon ? container : container.parentNode;\r\n                            afterNode = rangeCon ? null : container.nextSibling;\r\n                        }\r\n    \r\n                        if (oldParent.childNodes.length === 0 && parentNode !== oldParent) util.removeItem(oldParent);\r\n                    }\r\n    \r\n                    if (isFormats && !freeFormat && !util.isRangeFormatElement(parentNode) && !util.isListCell(parentNode) && !util.isWysiwygDiv(parentNode)) {\r\n                        afterNode = parentNode.nextElementSibling;\r\n                        parentNode = parentNode.parentNode;\r\n                    }\r\n    \r\n                    if (util.isWysiwygDiv(parentNode) && (oNode.nodeType === 3 || util.isBreak(oNode))) {\r\n                        const fNode = util.createElement(options.defaultTag);\r\n                        fNode.appendChild(oNode);\r\n                        oNode = fNode;\r\n                    }\r\n                }\r\n\r\n                // insert--\r\n                if (insertListCell) {\r\n                    if (!tempParentNode.parentNode) {\r\n                        parentNode = context.element.wysiwyg;\r\n                        afterNode = null;\r\n                    } else {\r\n                        parentNode = tempParentNode;\r\n                        afterNode = tempAfterNode;\r\n                    }\r\n                } else {\r\n                    afterNode = parentNode === afterNode ? parentNode.lastChild : afterNode;\r\n                }\r\n\r\n                if (util.isListCell(oNode) && !util.isList(parentNode)) {\r\n                    if (util.isListCell(parentNode)) {\r\n                        afterNode = parentNode.nextElementSibling;\r\n                        parentNode = parentNode.parentNode;\r\n                    } else {\r\n                        const ul = util.createElement('ol');\r\n                        parentNode.insertBefore(ul, afterNode);\r\n                        parentNode = ul;\r\n                        afterNode = null;\r\n                    }\r\n                    insertListCell = true;\r\n                }\r\n\r\n                this._checkDuplicateNode(oNode, parentNode);\r\n                parentNode.insertBefore(oNode, afterNode);\r\n\r\n                if (insertListCell) {\r\n                    if (util.onlyZeroWidthSpace(line.textContent.trim())) {\r\n                        util.removeItem(line);\r\n                        oNode = oNode.lastChild;\r\n                    } else {\r\n                        const chList = util.getArrayItem(line.children, util.isList);\r\n                        if (chList) {\r\n                            if (oNode !== chList) {\r\n                                oNode.appendChild(chList);\r\n                                oNode = chList.previousSibling;\r\n                            } else {\r\n                                parentNode.appendChild(oNode);\r\n                                oNode = parentNode;\r\n                            }\r\n\r\n                            if (util.onlyZeroWidthSpace(line.textContent.trim())) {\r\n                                util.removeItem(line);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                parentNode.appendChild(oNode);\r\n                console.warn('[SUNEDITOR.insertNode.warn] ' + error);\r\n            } finally {\r\n                const dupleNodes = parentNode.querySelectorAll('[data-se-duple]');\r\n                if (dupleNodes.length > 0) {\r\n                    for (let i = 0, len = dupleNodes.length, d, c, ch, parent; i < len; i++) {\r\n                        d = dupleNodes[i];\r\n                        ch = d.childNodes;\r\n                        parent = d.parentNode;\r\n\r\n                        while (ch[0]) {\r\n                            c = ch[0];\r\n                            parent.insertBefore(c, d);\r\n                        }\r\n\r\n                        if (d === oNode) oNode = c;\r\n                        util.removeItem(d);\r\n                    }\r\n                }\r\n\r\n                if ((util.isFormatElement(oNode) || util.isComponent(oNode)) && startCon === endCon) {\r\n                    const cItem = util.getFormatElement(commonCon, null);\r\n                    if (cItem && cItem.nodeType === 1 && util.isEmptyLine(cItem)) {\r\n                        util.removeItem(cItem);\r\n                    }\r\n                }\r\n\r\n                if (freeFormat && (util.isFormatElement(oNode) || util.isRangeFormatElement(oNode))) {\r\n                    oNode = this._setIntoFreeFormat(oNode);\r\n                }\r\n\r\n                if (!util.isComponent(oNode)) {\r\n                    let offset = 1;\r\n                    if (oNode.nodeType === 3) {\r\n                        const previous = oNode.previousSibling;\r\n                        const next = oNode.nextSibling;\r\n                        const previousText = (!previous ||  previous.nodeType === 1 || util.onlyZeroWidthSpace(previous)) ? '' : previous.textContent;\r\n                        const nextText = (!next || next.nodeType === 1 || util.onlyZeroWidthSpace(next)) ? '' : next.textContent;\r\n        \r\n                        if (previous && previousText.length > 0) {\r\n                            oNode.textContent = previousText + oNode.textContent;\r\n                            util.removeItem(previous);\r\n                        }\r\n        \r\n                        if (next && next.length > 0) {\r\n                            oNode.textContent += nextText;\r\n                            util.removeItem(next);\r\n                        }\r\n\r\n                        const newRange = {\r\n                            container: oNode,\r\n                            startOffset: previousText.length,\r\n                            endOffset: oNode.textContent.length - nextText.length\r\n                        };\r\n\r\n                        this.setRange(oNode, newRange.startOffset, oNode, newRange.endOffset);\r\n    \r\n                        return newRange;\r\n                    } else if (!util.isBreak(oNode) && !util.isListCell(oNode) && util.isFormatElement(parentNode)) {\r\n                        let zeroWidth = null;\r\n                        if (!oNode.previousSibling || util.isBreak(oNode.previousSibling)) {\r\n                            zeroWidth = util.createTextNode(util.zeroWidthSpace);\r\n                            oNode.parentNode.insertBefore(zeroWidth, oNode);\r\n                        }\r\n                        \r\n                        if (!oNode.nextSibling || util.isBreak(oNode.nextSibling)) {\r\n                            zeroWidth = util.createTextNode(util.zeroWidthSpace);\r\n                            oNode.parentNode.insertBefore(zeroWidth, oNode.nextSibling);\r\n                        }\r\n    \r\n                        if (util._isIgnoreNodeChange(oNode)) {\r\n                            oNode = oNode.nextSibling;\r\n                            offset = 0;\r\n                        }\r\n                    }\r\n    \r\n                    this.setRange(oNode, offset, oNode, offset);\r\n                }\r\n\r\n                // history stack\r\n                this.history.push(true);\r\n\r\n                return oNode;\r\n            }\r\n        },\r\n\r\n        _setIntoFreeFormat: function (oNode) {\r\n            const parentNode = oNode.parentNode;\r\n            let oNodeChildren, lastONode;\r\n            \r\n            while (util.isFormatElement(oNode) || util.isRangeFormatElement(oNode)) {\r\n                oNodeChildren = oNode.childNodes;\r\n                lastONode = null;\r\n                \r\n                while (oNodeChildren[0]) {\r\n                    lastONode = oNodeChildren[0];\r\n                    if (util.isFormatElement(lastONode) || util.isRangeFormatElement(lastONode)) {\r\n                        this._setIntoFreeFormat(lastONode);\r\n                        if (!oNode.parentNode) break;\r\n                        oNodeChildren = oNode.childNodes;\r\n                        continue;\r\n                    }\r\n                    \r\n                    parentNode.insertBefore(lastONode, oNode);\r\n                }\r\n                \r\n                if (oNode.childNodes.length === 0) util.removeItem(oNode);\r\n                oNode = util.createElement('BR');\r\n                parentNode.insertBefore(oNode, lastONode.nextSibling);\r\n            }\r\n\r\n            return oNode;\r\n        },\r\n\r\n        /**\r\n         * @description Delete the currently selected nodes and reset selection range\r\n         * Returns {container: \"the last element after deletion\", offset: \"offset\", prevContainer: \"previousElementSibling Of the deleted area\"}\r\n         * @returns {Object}\r\n         */\r\n        removeNode: function () {\r\n            this._resetRangeToTextNode();\r\n\r\n            const range = this.getRange();\r\n            const isStartEdge = range.startOffset === 0;\r\n            const isEndEdge = core.isEdgePoint(range.endContainer, range.endOffset, 'end');\r\n            let prevContainer = null;\r\n            let startPrevEl = null;\r\n            let endNextEl = null;\r\n            if (isStartEdge) {\r\n                startPrevEl = util.getFormatElement(range.startContainer);\r\n                prevContainer = startPrevEl.previousElementSibling;\r\n                startPrevEl = startPrevEl ? prevContainer : startPrevEl;\r\n            }\r\n            if (isEndEdge) {\r\n                endNextEl = util.getFormatElement(range.endContainer);\r\n                endNextEl = endNextEl ? endNextEl.nextElementSibling : endNextEl;\r\n            }\r\n\r\n            let container, offset = 0;\r\n            let startCon = range.startContainer;\r\n            let endCon = range.endContainer;\r\n            let startOff = range.startOffset;\r\n            let endOff = range.endOffset;\r\n            const commonCon = (range.commonAncestorContainer.nodeType === 3 && range.commonAncestorContainer.parentNode === startCon.parentNode) ? startCon.parentNode : range.commonAncestorContainer;\r\n            if (commonCon === startCon && commonCon === endCon) {\r\n                startCon = commonCon.children[startOff];\r\n                endCon = commonCon.children[endOff];\r\n                startOff = endOff = 0;\r\n            }\r\n\r\n            if (!startCon || !endCon) return  {\r\n                container: commonCon,\r\n                offset: 0\r\n            };\r\n\r\n            if (startCon === endCon && range.collapsed) {\r\n                if (startCon.textContent && util.onlyZeroWidthSpace(startCon.textContent.substr(startOff))) {\r\n                    return {\r\n                        container: startCon,\r\n                        offset: startOff,\r\n                        prevContainer: startCon && startCon.parentNode ? startCon : null\r\n                    };\r\n                }\r\n            }\r\n\r\n            let beforeNode = null;\r\n            let afterNode = null;\r\n\r\n            const childNodes = util.getListChildNodes(commonCon, null);\r\n            let startIndex = util.getArrayIndex(childNodes, startCon);\r\n            let endIndex = util.getArrayIndex(childNodes, endCon);\r\n\r\n            if (childNodes.length > 0 && startIndex > -1 && endIndex > -1) {\r\n                for (let i = startIndex + 1, startNode = startCon; i >= 0; i--) {\r\n                    if (childNodes[i] === startNode.parentNode && childNodes[i].firstChild === startNode && startOff === 0) {\r\n                        startIndex = i;\r\n                        startNode = startNode.parentNode;\r\n                    }\r\n                }\r\n    \r\n                for (let i = endIndex - 1, endNode = endCon; i > startIndex; i--) {\r\n                    if (childNodes[i] === endNode.parentNode && childNodes[i].nodeType === 1) {\r\n                        childNodes.splice(i, 1);\r\n                        endNode = endNode.parentNode;\r\n                        --endIndex;\r\n                    }\r\n                }\r\n            } else {\r\n                if (childNodes.length === 0) {\r\n                    if (util.isFormatElement(commonCon) || util.isRangeFormatElement(commonCon) || util.isWysiwygDiv(commonCon) || util.isBreak(commonCon) || util.isMedia(commonCon)) {\r\n                        return {\r\n                            container: commonCon,\r\n                            offset: 0\r\n                        };\r\n                    } else if (commonCon.nodeType === 3) {\r\n                        return {\r\n                            container: commonCon,\r\n                            offset: endOff\r\n                        };\r\n                    }\r\n                    childNodes.push(commonCon);\r\n                    startCon = endCon = commonCon;\r\n                } else {\r\n                    startCon = endCon = childNodes[0];\r\n                    if (util.isBreak(startCon) || util.onlyZeroWidthSpace(startCon)) {\r\n                        return {\r\n                            container: util.isMedia(commonCon) ? commonCon : startCon,\r\n                            offset: 0\r\n                        };\r\n                    }\r\n                }\r\n\r\n                startIndex = endIndex = 0;\r\n            }\r\n\r\n            for (let i = startIndex; i <= endIndex; i++) {\r\n                const item = childNodes[i];\r\n\r\n                if (item.length === 0 || (item.nodeType === 3 && item.data === undefined)) {\r\n                    this._nodeRemoveListItem(item);\r\n                    continue;\r\n                }\r\n\r\n                if (item === startCon) {\r\n                    if (startCon.nodeType === 1) {\r\n                        if (util.isComponent(startCon)) continue;\r\n                        else beforeNode = util.createTextNode(startCon.textContent);\r\n                    } else {\r\n                        if (item === endCon) {\r\n                            beforeNode = util.createTextNode(startCon.substringData(0, startOff) + endCon.substringData(endOff, (endCon.length - endOff)));\r\n                            offset = startOff;\r\n                        } else {\r\n                            beforeNode = util.createTextNode(startCon.substringData(0, startOff));\r\n                        }\r\n                    }\r\n\r\n                    if (beforeNode.length > 0) {\r\n                        startCon.data = beforeNode.data;\r\n                    } else {\r\n                        this._nodeRemoveListItem(startCon);\r\n                    }\r\n\r\n                    if (item === endCon) break;\r\n                    continue;\r\n                }\r\n\r\n                if (item === endCon) {\r\n                    if (endCon.nodeType === 1) {\r\n                        if (util.isComponent(endCon)) continue;\r\n                        else afterNode = util.createTextNode(endCon.textContent);\r\n                    } else {\r\n                        afterNode = util.createTextNode(endCon.substringData(endOff, (endCon.length - endOff)));\r\n                    }\r\n\r\n                    if (afterNode.length > 0) {\r\n                        endCon.data = afterNode.data;\r\n                    } else {\r\n                        this._nodeRemoveListItem(endCon);\r\n                    }\r\n\r\n                    continue;\r\n                }\r\n\r\n                this._nodeRemoveListItem(item);\r\n            }\r\n\r\n            const endUl = util.getParentElement(endCon, 'ul');\r\n            const startLi = util.getParentElement(startCon, 'li');\r\n            if (endUl && startLi && startLi.contains(endUl)) {\r\n                container = endUl.previousSibling;\r\n                offset = container.textContent.length;\r\n            } else {\r\n                container = endCon && endCon.parentNode ? endCon : startCon && startCon.parentNode ? startCon : (range.endContainer || range.startContainer);\r\n                offset = (!isStartEdge && !isEndEdge) ? offset : isEndEdge ? container.textContent.length : 0;\r\n            }\r\n            \r\n            if (!util.isWysiwygDiv(container) && container.childNodes.length === 0) {\r\n                const rc = util.removeItemAllParents(container, null, null);\r\n                if (rc) container = rc.sc || rc.ec || context.element.wysiwyg;\r\n            }\r\n\r\n            if (!util.getFormatElement(container) && !(startCon && startCon.parentNode)) {\r\n                if (endNextEl) {\r\n                    container = endNextEl;\r\n                    offset = 0;\r\n                } else if (startPrevEl) {\r\n                    container = startPrevEl;\r\n                    offset = 1;\r\n                }\r\n            }\r\n\r\n            // set range\r\n            this.setRange(container, offset, container, offset);\r\n            // history stack\r\n            this.history.push(true);\r\n\r\n            return {\r\n                container: container,\r\n                offset: offset,\r\n                prevContainer: prevContainer\r\n            };\r\n        },\r\n\r\n        _nodeRemoveListItem: function (item) {\r\n            const format = util.getFormatElement(item, null);\r\n            util.removeItem(item);\r\n\r\n            if(!util.isListCell(format)) return;\r\n            \r\n            util.removeItemAllParents(format, null, null);\r\n\r\n            if (format && util.isList(format.firstChild)) {\r\n                format.insertBefore(util.createTextNode(util.zeroWidthSpace), format.firstChild);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Appended all selected format Element to the argument element and insert\r\n         * @param {Element} rangeElement Element of wrap the arguments (BLOCKQUOTE...)\r\n         */\r\n        applyRangeFormatElement: function (rangeElement) {\r\n            this.getRange_addLine(this.getRange(), null);\r\n            const rangeLines = this.getSelectedElementsAndComponents(false);\r\n            if (!rangeLines || rangeLines.length === 0) return;\r\n\r\n            linesLoop:\r\n            for (let i = 0, len = rangeLines.length, line, nested, fEl, lEl, f, l; i < len; i++) {\r\n                line = rangeLines[i];\r\n                if (!util.isListCell(line)) continue;\r\n\r\n                nested = line.lastElementChild;\r\n                if (nested && util.isListCell(line.nextElementSibling) && rangeLines.indexOf(line.nextElementSibling) > -1) {\r\n                    lEl = nested.lastElementChild;\r\n                    if (rangeLines.indexOf(lEl) > -1) {\r\n                        let list = null;\r\n                        while ((list = lEl.lastElementChild)) {\r\n                            if (util.isList(list)) {\r\n                                if (rangeLines.indexOf(list.lastElementChild) > -1) {\r\n                                    lEl = list.lastElementChild;\r\n                                } else {\r\n                                    continue linesLoop;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        fEl = nested.firstElementChild;\r\n                        f = rangeLines.indexOf(fEl);\r\n                        l = rangeLines.indexOf(lEl);\r\n                        rangeLines.splice(f, (l - f) + 1);\r\n                        len = rangeLines.length;\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n\r\n            let last  = rangeLines[rangeLines.length - 1];\r\n            let standTag, beforeTag, pElement;\r\n\r\n            if (util.isRangeFormatElement(last) || util.isFormatElement(last)) {\r\n                standTag = last;\r\n            } else {\r\n                standTag = util.getRangeFormatElement(last, null) || util.getFormatElement(last, null);\r\n            }\r\n\r\n            if (util.isCell(standTag)) {\r\n                beforeTag = null;\r\n                pElement = standTag;\r\n            } else {\r\n                beforeTag = standTag.nextSibling;\r\n                pElement = standTag.parentNode;\r\n            }\r\n            \r\n            let parentDepth = util.getElementDepth(standTag);\r\n            let listParent = null;\r\n            const lineArr = [];\r\n            const removeItems = function (parent, origin, before) {\r\n                let cc = null;\r\n                if (parent !== origin && !util.isTable(origin)) {\r\n                    if (origin && util.getElementDepth(parent) === util.getElementDepth(origin)) return before;\r\n                    cc = util.removeItemAllParents(origin, null, parent);\r\n                }\r\n\r\n                return cc ? cc.ec : before;\r\n            };\r\n            \r\n            for (let i = 0, len = rangeLines.length, line, originParent, depth, before, nextLine, nextList, nested; i < len; i++) {\r\n                line = rangeLines[i];\r\n                originParent = line.parentNode;\r\n                if (!originParent || rangeElement.contains(originParent)) continue;\r\n\r\n                depth = util.getElementDepth(line);\r\n\r\n                if (util.isList(originParent)) {\r\n                    if (listParent === null) {\r\n                        if (nextList) {\r\n                            listParent = nextList;\r\n                            nested = true;\r\n                            nextList = null;\r\n                        } else {\r\n                            listParent = originParent.cloneNode(false);\r\n                        }\r\n                    }\r\n\r\n                    lineArr.push(line);\r\n                    nextLine = rangeLines[i + 1];\r\n\r\n                    if (i === len - 1 || (nextLine && nextLine.parentNode !== originParent)) {\r\n                        // nested list\r\n                        if (nextLine && line.contains(nextLine.parentNode)) {\r\n                            nextList = nextLine.parentNode.cloneNode(false);\r\n                        }\r\n\r\n                        let list = originParent.parentNode, p;\r\n                        while (util.isList(list)) {\r\n                            p = util.createElement(list.nodeName);\r\n                            p.appendChild(listParent);\r\n                            listParent = p;\r\n                            list = list.parentNode;\r\n                        }\r\n\r\n                        const edge = this.detachRangeFormatElement(originParent, lineArr, null, true, true);\r\n\r\n                        if (parentDepth >= depth) {\r\n                            parentDepth = depth;\r\n                            pElement = edge.cc;\r\n                            beforeTag = removeItems(pElement, originParent, edge.ec);\r\n                            if (beforeTag) pElement = beforeTag.parentNode;\r\n                        } else if (pElement === edge.cc) {\r\n                            beforeTag = edge.ec;\r\n                        }\r\n\r\n                        if (pElement !== edge.cc) {\r\n                            before = removeItems(pElement, edge.cc, before);\r\n                            if (before !== undefined) beforeTag = before;\r\n                            else beforeTag = edge.cc;\r\n                        }\r\n\r\n                        for (let c = 0, cLen = edge.removeArray.length; c < cLen; c++) {\r\n                            listParent.appendChild(edge.removeArray[c]);\r\n                        }\r\n\r\n                        if (!nested) rangeElement.appendChild(listParent);\r\n                        if (nextList) edge.removeArray[edge.removeArray.length - 1].appendChild(nextList);\r\n                        listParent = null;\r\n                        nested = false;\r\n                    }\r\n                } else {\r\n                    if (parentDepth >= depth) {\r\n                        parentDepth = depth;\r\n                        pElement = originParent;\r\n                        beforeTag = line.nextSibling;\r\n                    }\r\n                    \r\n                    rangeElement.appendChild(line);\r\n\r\n                    if (pElement !== originParent) {\r\n                        before = removeItems(pElement, originParent);\r\n                        if (before !== undefined) beforeTag = before;\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.effectNode = null;\r\n            util.mergeSameTags(rangeElement, null, false);\r\n            util.mergeNestedTags(rangeElement, function (current) { return this.isList(current); }.bind(util));\r\n\r\n            // Nested list\r\n            if (beforeTag && util.getElementDepth(beforeTag) > 0 && (util.isList(beforeTag.parentNode) || util.isList(beforeTag.parentNode.parentNode))) {\r\n                const depthFormat = util.getParentElement(beforeTag, function (current) { return this.isRangeFormatElement(current) && !this.isList(current); }.bind(util));\r\n                const splitRange = util.splitElement(beforeTag, null, !depthFormat ? 0 : util.getElementDepth(depthFormat) + 1);\r\n                splitRange.parentNode.insertBefore(rangeElement, splitRange);\r\n            } else { // basic\r\n                pElement.insertBefore(rangeElement, beforeTag);\r\n                removeItems(rangeElement, beforeTag);\r\n            }\r\n\r\n            const edge = util.getEdgeChildNodes(rangeElement.firstElementChild, rangeElement.lastElementChild);\r\n            if (rangeLines.length > 1) {\r\n                this.setRange(edge.sc, 0, edge.ec, edge.ec.textContent.length);\r\n            } else {\r\n                this.setRange(edge.ec, edge.ec.textContent.length, edge.ec, edge.ec.textContent.length);\r\n            }\r\n\r\n            // history stack\r\n            this.history.push(false);\r\n        },\r\n\r\n        /**\r\n         * @description The elements of the \"selectedFormats\" array are detached from the \"rangeElement\" element. (\"LI\" tags are converted to \"P\" tags)\r\n         * When \"selectedFormats\" is null, all elements are detached and return {cc: parentNode, sc: nextSibling, ec: previousSibling, removeArray: [Array of removed elements]}.\r\n         * @param {Element} rangeElement Range format element (PRE, BLOCKQUOTE, OL, UL...)\r\n         * @param {Array|null} selectedFormats Array of format elements (P, DIV, LI...) to remove.\r\n         * If null, Applies to all elements and return {cc: parentNode, sc: nextSibling, ec: previousSibling}\r\n         * @param {Element|null} newRangeElement The node(rangeElement) to replace the currently wrapped node.\r\n         * @param {Boolean} remove If true, deleted without detached.\r\n         * @param {Boolean} notHistoryPush When true, it does not update the history stack and the selection object and return EdgeNodes (util.getEdgeChildNodes)\r\n         * @returns {Object}\r\n         */\r\n        detachRangeFormatElement: function (rangeElement, selectedFormats, newRangeElement, remove, notHistoryPush) {\r\n            const range = this.getRange();\r\n            let so = range.startOffset;\r\n            let eo = range.endOffset;\r\n\r\n            let children = util.getListChildNodes(rangeElement, function (current) { return current.parentNode === rangeElement; });\r\n            let parent = rangeElement.parentNode;\r\n            let firstNode = null;\r\n            let lastNode = null;\r\n            let rangeEl = rangeElement.cloneNode(false);\r\n            \r\n            const removeArray = [];\r\n            const newList = util.isList(newRangeElement);\r\n            let insertedNew = false;\r\n            let reset = false;\r\n            let moveComplete = false;\r\n\r\n            function appendNode (parent, insNode, sibling, originNode) {\r\n                if (util.onlyZeroWidthSpace(insNode)) {\r\n                    insNode.innerHTML = util.zeroWidthSpace;\r\n                    so = eo = 1;\r\n                }\r\n\r\n                if (insNode.nodeType === 3) {\r\n                    parent.insertBefore(insNode, sibling);\r\n                    return insNode;\r\n                }\r\n                \r\n                const insChildren = (moveComplete ? insNode : originNode).childNodes;\r\n                let format = insNode.cloneNode(false);\r\n                let first = null;\r\n                let c = null;\r\n\r\n                while (insChildren[0]) {\r\n                    c = insChildren[0];\r\n                    if (util._notTextNode(c) && !util.isBreak(c) && !util.isListCell(format)) {\r\n                        if (format.childNodes.length > 0) {\r\n                            if (!first) first = format;\r\n                            parent.insertBefore(format, sibling);\r\n                            format = insNode.cloneNode(false);\r\n                        }\r\n                        parent.insertBefore(c, sibling);\r\n                        if (!first) first = c;\r\n                    } else {\r\n                        format.appendChild(c);\r\n                    }\r\n                }\r\n\r\n                if (format.childNodes.length > 0) {\r\n                    if (util.isListCell(parent) && util.isListCell(format) && util.isList(sibling)) {\r\n                        if (newList) {\r\n                            first = sibling;\r\n                            while(sibling) {\r\n                                format.appendChild(sibling);\r\n                                sibling = sibling.nextSibling;\r\n                            }\r\n                            parent.parentNode.insertBefore(format, parent.nextElementSibling);\r\n                        } else {\r\n                            const originNext = originNode.nextElementSibling;\r\n                            const detachRange = util.detachNestedList(originNode, false);\r\n                            if ((rangeElement !== detachRange) || (originNext !== originNode.nextElementSibling)) {\r\n                                const fChildren = format.childNodes;\r\n                                while (fChildren[0]) {\r\n                                    originNode.appendChild(fChildren[0]);\r\n                                }\r\n\r\n                                rangeElement = detachRange;\r\n                                reset = true;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        parent.insertBefore(format, sibling);\r\n                    }\r\n\r\n                    if (!first) first = format;\r\n                }\r\n\r\n                return first;\r\n            }\r\n\r\n            // detach loop\r\n            for (let i = 0, len = children.length, insNode, lineIndex, next; i < len; i++) {\r\n                insNode = children[i];\r\n                if (insNode.nodeType === 3 && util.isList(rangeEl)) continue;\r\n                \r\n                moveComplete = false;\r\n                if (remove && i === 0) {\r\n                    if (!selectedFormats || selectedFormats.length === len || selectedFormats[0] === insNode) {\r\n                        firstNode = rangeElement.previousSibling;\r\n                    } else {\r\n                        firstNode = rangeEl;\r\n                    }\r\n                }\r\n\r\n                if (selectedFormats) lineIndex = selectedFormats.indexOf(insNode);\r\n                if (selectedFormats && lineIndex === -1) {\r\n                    if (!rangeEl) rangeEl = rangeElement.cloneNode(false);\r\n                    rangeEl.appendChild(insNode);\r\n                } else {\r\n                    if (selectedFormats) next = selectedFormats[lineIndex + 1];\r\n                    if (rangeEl && rangeEl.children.length > 0) {\r\n                        parent.insertBefore(rangeEl, rangeElement);\r\n                        rangeEl = null;\r\n                    }\r\n\r\n                    if (!newList && util.isListCell(insNode)) {\r\n                        if (next && util.getElementDepth(insNode) !== util.getElementDepth(next) && (util.isListCell(parent) || util.getArrayItem(insNode.children, util.isList, false))) {\r\n                            const insNext = insNode.nextElementSibling;\r\n                            const detachRange = util.detachNestedList(insNode, false);\r\n                            if ((rangeElement !== detachRange) || insNext !== insNode.nextElementSibling) {\r\n                                rangeElement = detachRange;\r\n                                reset = true;\r\n                            }\r\n                        } else {\r\n                            const inner = insNode;\r\n                            insNode = util.createElement(remove ? inner.nodeName : (util.isList(rangeElement.parentNode) || util.isListCell(rangeElement.parentNode)) ? 'LI' : util.isCell(rangeElement.parentNode) ? 'DIV' : options.defaultTag);\r\n                            const isCell = util.isListCell(insNode);\r\n                            const innerChildren = inner.childNodes;\r\n                            while (innerChildren[0]) {\r\n                                if (util.isList(innerChildren[0]) && !isCell) break;\r\n                                insNode.appendChild(innerChildren[0]);\r\n                            }\r\n                            util.copyFormatAttributes(insNode, inner);\r\n                            moveComplete = true;\r\n                        }\r\n                    } else {\r\n                        insNode = insNode.cloneNode(false);\r\n                    }\r\n\r\n                    if (!reset) {\r\n                        if (!remove) {\r\n                            if (newRangeElement) {\r\n                                if (!insertedNew) {\r\n                                    parent.insertBefore(newRangeElement, rangeElement);\r\n                                    insertedNew = true;\r\n                                }\r\n                                insNode = appendNode(newRangeElement, insNode, null, children[i]);\r\n                            } else {\r\n                                insNode = appendNode(parent, insNode, rangeElement, children[i]);\r\n                            }\r\n    \r\n                            if (!reset) {\r\n                                if (selectedFormats) {\r\n                                    lastNode = insNode;\r\n                                    if (!firstNode) {\r\n                                        firstNode = insNode;\r\n                                    }\r\n                                } else if (!firstNode) {\r\n                                    firstNode = lastNode = insNode;\r\n                                }\r\n                            }\r\n                        } else {\r\n                            removeArray.push(insNode);\r\n                            util.removeItem(children[i]);\r\n                        }\r\n\r\n                        if (reset) {\r\n                            reset = moveComplete = false;\r\n                            children = util.getListChildNodes(rangeElement, function (current) { return current.parentNode === rangeElement; });\r\n                            rangeEl = rangeElement.cloneNode(false);\r\n                            parent = rangeElement.parentNode;\r\n                            i = -1;\r\n                            len = children.length;\r\n                            continue;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            const rangeParent = rangeElement.parentNode;\r\n            let rangeRight = rangeElement.nextSibling;\r\n            if (rangeEl && rangeEl.children.length > 0) {\r\n                rangeParent.insertBefore(rangeEl, rangeRight);\r\n            }\r\n            \r\n            if (newRangeElement) firstNode = newRangeElement.previousSibling;\r\n            else if (!firstNode) firstNode = rangeElement.previousSibling;\r\n            rangeRight = rangeElement.nextSibling !== rangeEl ? rangeElement.nextSibling : rangeEl ? rangeEl.nextSibling : null;\r\n\r\n            if (rangeElement.children.length === 0 || rangeElement.textContent.length === 0) {\r\n                util.removeItem(rangeElement);\r\n            } else {\r\n                util.removeEmptyNode(rangeElement, null, false);\r\n            }\r\n\r\n            let edge = null;\r\n            if (remove) {\r\n                edge = {\r\n                    cc: rangeParent,\r\n                    sc: firstNode,\r\n                    so: so,\r\n                    ec: rangeRight,\r\n                    eo: eo,\r\n                    removeArray: removeArray\r\n                };\r\n            } else {\r\n                if (!firstNode) firstNode = lastNode;\r\n                if (!lastNode) lastNode = firstNode;\r\n                const childEdge = util.getEdgeChildNodes(firstNode, (lastNode.parentNode ? firstNode : lastNode));\r\n                edge = {\r\n                    cc: (childEdge.sc || childEdge.ec).parentNode,\r\n                    sc: childEdge.sc,\r\n                    so: so,\r\n                    ec: childEdge.ec,\r\n                    eo: eo,\r\n                    removeArray: null\r\n                };\r\n            }\r\n\r\n            this.effectNode = null;\r\n            if (notHistoryPush) return edge;\r\n            \r\n            if (!remove && edge) {\r\n                if (!selectedFormats) {\r\n                    this.setRange(edge.sc, 0, edge.sc, 0);\r\n                } else {\r\n                    this.setRange(edge.sc, so, edge.ec, eo);\r\n                }\r\n            }\r\n\r\n            // history stack\r\n            this.history.push(false);\r\n        },\r\n\r\n        /**\r\n         * @description \"selectedFormats\" array are detached from the list element.\r\n         * The return value is applied when the first and last lines of \"selectedFormats\" are \"LI\" respectively.\r\n         * @param {Array} selectedFormats Array of format elements (LI, P...) to remove.\r\n         * @param {Boolean} remove If true, deleted without detached.\r\n         * @returns {Object} {sc: <LI>, ec: <LI>}.\r\n         */\r\n        detachList: function (selectedFormats, remove) {\r\n            let rangeArr = {};\r\n            let listFirst = false;\r\n            let listLast = false;\r\n            let first = null;\r\n            let last = null;\r\n            const passComponent = function (current) { return !this.isComponent(current); }.bind(util);\r\n\r\n            for (let i = 0, len = selectedFormats.length, r, o, lastIndex, isList; i < len; i++) {\r\n                lastIndex = i === len - 1;\r\n                o = util.getRangeFormatElement(selectedFormats[i], passComponent);\r\n                isList = util.isList(o);\r\n                if (!r && isList) {\r\n                    r = o;\r\n                    rangeArr = {r: r, f: [util.getParentElement(selectedFormats[i], 'LI')]};\r\n                    if (i === 0) listFirst = true;\r\n                } else if (r && isList) {\r\n                    if (r !== o) {\r\n                        const edge = this.detachRangeFormatElement(rangeArr.f[0].parentNode, rangeArr.f, null, remove, true);\r\n                        o = selectedFormats[i].parentNode;\r\n                        if (listFirst) {\r\n                            first = edge.sc;\r\n                            listFirst = false;\r\n                        }\r\n                        if (lastIndex) last = edge.ec;\r\n\r\n                        if (isList) {\r\n                            r = o;\r\n                            rangeArr = {r: r, f: [util.getParentElement(selectedFormats[i], 'LI')]};\r\n                            if (lastIndex) listLast = true;\r\n                        } else {\r\n                            r = null;\r\n                        }\r\n                    } else {\r\n                        rangeArr.f.push(util.getParentElement(selectedFormats[i], 'LI'));\r\n                        if (lastIndex) listLast = true;\r\n                    }\r\n                }\r\n\r\n                if (lastIndex && util.isList(r)) {\r\n                    const edge = this.detachRangeFormatElement(rangeArr.f[0].parentNode, rangeArr.f, null, remove, true);\r\n                    if (listLast || len === 1) last = edge.ec;\r\n                    if (listFirst) first = edge.sc || last;\r\n                }\r\n            }\r\n\r\n            return {\r\n                sc: first,\r\n                ec: last\r\n            };\r\n        },\r\n\r\n        /**\r\n         * @description Add, update, and delete nodes from selected text.\r\n         * 1. If there is a node in the \"appendNode\" argument, a node with the same tags and attributes as \"appendNode\" is added to the selection text.\r\n         * 2. If it is in the same tag, only the tag's attributes are changed without adding a tag.\r\n         * 3. If the \"appendNode\" argument is null, the node of the selection is update or remove without adding a new node.\r\n         * 4. The same style as the style attribute of the \"styleArray\" argument is deleted.\r\n         *    (Styles should be put with attribute names from css. [\"background-color\"])\r\n         * 5. The same class name as the class attribute of the \"styleArray\" argument is deleted.\r\n         *    (The class name is preceded by \".\" [\".className\"])\r\n         * 6. Use a list of styles and classes of \"appendNode\" in \"styleArray\" to avoid duplicate property values.\r\n         * 7. If a node with all styles and classes removed has the same tag name as \"appendNode\" or \"removeNodeArray\", or \"appendNode\" is null, that node is deleted.\r\n         * 8. Regardless of the style and class of the node, the tag with the same name as the \"removeNodeArray\" argument value is deleted.\r\n         * 9. If the \"strictRemove\" argument is true, only nodes with all styles and classes removed from the nodes of \"removeNodeArray\" are removed.\r\n         *10. It won't work if the parent node has the same class and same value style.\r\n         *    However, if there is a value in \"removeNodeArray\", it works and the text node is separated even if there is no node to replace.\r\n         * @param {Element|null} appendNode The element to be added to the selection. If it is null, only delete the node.\r\n         * @param {Array|null} styleArray The style or className attribute name Array to check (['font-size'], ['.className'], ['font-family', 'color', '.className']...])\r\n         * @param {Array|null} removeNodeArray An array of node names to remove types from, remove all formats when \"appendNode\" is null and there is an empty array or null value. (['span'], ['strong', 'em'] ...])\r\n         * @param {Boolean|null} strictRemove If true, only nodes with all styles and classes removed from the nodes of \"removeNodeArray\" are removed.\r\n         */\r\n        nodeChange: function (appendNode, styleArray, removeNodeArray, strictRemove) {\r\n            this._resetRangeToTextNode();\r\n            let range = this.getRange_addLine(this.getRange(), null);\r\n            styleArray = styleArray && styleArray.length > 0 ? styleArray : false;\r\n            removeNodeArray = removeNodeArray && removeNodeArray.length > 0 ? removeNodeArray : false;\r\n            \r\n            const isRemoveNode = !appendNode;\r\n            const isRemoveFormat = isRemoveNode && !removeNodeArray && !styleArray;\r\n            let startCon = range.startContainer;\r\n            let startOff = range.startOffset;\r\n            let endCon = range.endContainer;\r\n            let endOff = range.endOffset;\r\n\r\n            if ((isRemoveFormat && range.collapsed && util.isFormatElement(startCon.parentNode)) || (startCon === endCon && startCon.nodeType === 1 && util.isNonEditable(startCon))) {\r\n                const format = startCon.parentNode;\r\n                if (!util.isListCell(format) || !util.getValues(format.style).some(function(k) { return this._listKebab.indexOf(k) > -1; }.bind(this))) return;\r\n            }\r\n\r\n            if (range.collapsed && !isRemoveFormat) {\r\n                if (startCon.nodeType === 1 && !util.isBreak(startCon) && !util.isComponent(startCon)) {\r\n                    let afterNode = null;\r\n                    const focusNode = startCon.childNodes[startOff];\r\n\r\n                    if (focusNode) {\r\n                        if (!focusNode.nextSibling) {\r\n                            afterNode = null;\r\n                        } else {\r\n                            afterNode = util.isBreak(focusNode) ? focusNode : focusNode.nextSibling;\r\n                        }\r\n                    }\r\n\r\n                    const zeroWidth = util.createTextNode(util.zeroWidthSpace);\r\n                    startCon.insertBefore(zeroWidth, afterNode);\r\n                    this.setRange(zeroWidth, 1, zeroWidth, 1);\r\n\r\n                    range = this.getRange();\r\n                    startCon = range.startContainer;\r\n                    startOff = range.startOffset;\r\n                    endCon = range.endContainer;\r\n                    endOff = range.endOffset;\r\n                }\r\n            }\r\n\r\n            if (util.isFormatElement(startCon)) {\r\n                startCon = startCon.childNodes[startOff] || startCon.firstChild;\r\n                startOff = 0;\r\n            }\r\n            if (util.isFormatElement(endCon)) {\r\n                endCon = endCon.childNodes[endOff] || endCon.lastChild;\r\n                endOff = endCon.textContent.length;\r\n            }\r\n\r\n            if (isRemoveNode) {\r\n                appendNode = util.createElement('DIV');\r\n            }\r\n\r\n            const wRegExp = _w.RegExp;\r\n            const newNodeName = appendNode.nodeName;\r\n\r\n            /* checked same style property */\r\n            if (!isRemoveFormat && startCon === endCon && !removeNodeArray && appendNode) {\r\n                let sNode = startCon;\r\n                let checkCnt = 0;\r\n                const checkAttrs = [];\r\n                \r\n                const checkStyles = appendNode.style;\r\n                for (let i = 0, len = checkStyles.length; i < len; i++) {\r\n                    checkAttrs.push(checkStyles[i]);\r\n                }\r\n\r\n                const ckeckClasses = appendNode.classList;\r\n                for (let i = 0, len = ckeckClasses.length; i < len; i++) {\r\n                    checkAttrs.push('.' + ckeckClasses[i]);\r\n                }\r\n\r\n                if (checkAttrs.length > 0) {\r\n                    while(!util.isFormatElement(sNode) && !util.isWysiwygDiv(sNode)) {\r\n                        for (let i = 0; i < checkAttrs.length; i++) {\r\n                            if (sNode.nodeType === 1) {\r\n                                const s = checkAttrs[i];\r\n                                const classReg = /^\\./.test(s) ? new wRegExp('\\\\s*' + s.replace(/^\\./, '') + '(\\\\s+|$)', 'ig') : false;\r\n    \r\n                                const styleCheck = isRemoveNode ? !!sNode.style[s] : (!!sNode.style[s] && !!appendNode.style[s] && sNode.style[s] === appendNode.style[s]);\r\n                                const classCheck = classReg === false ? false : isRemoveNode ? !!sNode.className.match(classReg) : !!sNode.className.match(classReg) && !!appendNode.className.match(classReg);\r\n                                if (styleCheck || classCheck) {\r\n                                    checkCnt++;\r\n                                }\r\n                            }\r\n                        }\r\n                        sNode = sNode.parentNode;\r\n                    }\r\n    \r\n                    if (checkCnt >= checkAttrs.length) return;\r\n                }\r\n            }\r\n\r\n            let start = {}, end = {};\r\n            let newNode, styleRegExp = '', classRegExp = '', removeNodeRegExp = '';\r\n\r\n            if (styleArray) {\r\n                for (let i = 0, len = styleArray.length, s; i < len; i++) {\r\n                    s = styleArray[i];\r\n                    if (/^\\./.test(s)) {\r\n                        classRegExp += (classRegExp ? '|' : '\\\\s*(?:') + s.replace(/^\\./, '');\r\n                    } else {\r\n                        styleRegExp += (styleRegExp ? '|' : '(?:;|^|\\\\s)(?:') + s;\r\n                    }\r\n                }\r\n\r\n                if (styleRegExp) {\r\n                    styleRegExp += ')\\\\s*:[^;]*\\\\s*(?:;|$)';\r\n                    styleRegExp = new wRegExp(styleRegExp, 'ig');\r\n                }\r\n\r\n                if (classRegExp) {\r\n                    classRegExp += ')(?=\\\\s+|$)';\r\n                    classRegExp = new wRegExp(classRegExp, 'ig');\r\n                }\r\n            }\r\n\r\n            if (removeNodeArray) {\r\n                removeNodeRegExp = '^(?:' + removeNodeArray[0];\r\n                for (let i = 1; i < removeNodeArray.length; i++) {\r\n                    removeNodeRegExp += '|' + removeNodeArray[i];\r\n                }\r\n                removeNodeRegExp += ')$';\r\n                removeNodeRegExp = new wRegExp(removeNodeRegExp, 'i');\r\n            }\r\n\r\n            /** validation check function*/\r\n            const wBoolean = _w.Boolean;\r\n            const _removeCheck = {v: false};\r\n            const validation = function (checkNode) {\r\n                const vNode = checkNode.cloneNode(false);\r\n\r\n                // all path\r\n                if (vNode.nodeType === 3 || util.isBreak(vNode)) return vNode;\r\n                // all remove\r\n                if (isRemoveFormat) return null;\r\n\r\n                // remove node check\r\n                const tagRemove = (!removeNodeRegExp && isRemoveNode) || (removeNodeRegExp && removeNodeRegExp.test(vNode.nodeName));\r\n\r\n                // tag remove\r\n                if (tagRemove && !strictRemove) {\r\n                    _removeCheck.v = true;\r\n                    return null;\r\n                }\r\n\r\n                // style regexp\r\n                const originStyle = vNode.style.cssText;\r\n                let style = '';\r\n                if (styleRegExp && originStyle.length > 0) {\r\n                    style = originStyle.replace(styleRegExp, '').trim();\r\n                    if (style !== originStyle) _removeCheck.v = true;\r\n                }\r\n\r\n                // class check\r\n                const originClasses = vNode.className;\r\n                let classes = '';\r\n                if (classRegExp && originClasses.length > 0) {\r\n                    classes = originClasses.replace(classRegExp, '').trim();\r\n                    if (classes !== originClasses) _removeCheck.v = true;\r\n                }\r\n\r\n                // remove only\r\n                if (isRemoveNode) {\r\n                    if ((classRegExp || !originClasses) && (styleRegExp || !originStyle) && !style && !classes && tagRemove) {\r\n                        _removeCheck.v = true;\r\n                        return null;\r\n                    }\r\n                }\r\n\r\n                // change\r\n                if (style || classes || vNode.nodeName !== newNodeName || (wBoolean(styleRegExp) !== wBoolean(originStyle)) || (wBoolean(classRegExp) !== wBoolean(originClasses))) {\r\n                    if (styleRegExp && originStyle.length > 0) vNode.style.cssText = style;\r\n                    if (!vNode.style.cssText) {\r\n                        vNode.removeAttribute('style');\r\n                    }\r\n\r\n                    if (classRegExp && originClasses.length > 0) vNode.className = classes.trim();\r\n                    if (!vNode.className.trim()) {\r\n                        vNode.removeAttribute('class');\r\n                    }\r\n\r\n                    if (!vNode.style.cssText && !vNode.className && (vNode.nodeName === newNodeName || tagRemove)) {\r\n                        _removeCheck.v = true;\r\n                        return null;\r\n                    }\r\n\r\n                    return vNode;\r\n                }\r\n\r\n                _removeCheck.v = true;\r\n                return null;\r\n            };\r\n\r\n            // get line nodes\r\n            const lineNodes = this.getSelectedElements(null);\r\n            range = this.getRange();\r\n            startCon = range.startContainer;\r\n            startOff = range.startOffset;\r\n            endCon = range.endContainer;\r\n            endOff = range.endOffset;\r\n\r\n            if (!util.getFormatElement(startCon, null)) {\r\n                startCon = util.getChildElement(lineNodes[0], function (current) { return current.nodeType === 3; }, false);\r\n                startOff = 0;\r\n            }\r\n\r\n            if (!util.getFormatElement(endCon, null)) {\r\n                endCon = util.getChildElement(lineNodes[lineNodes.length - 1], function (current) { return current.nodeType === 3; }, false);\r\n                endOff = endCon.textContent.length;\r\n            }\r\n\r\n            \r\n            const oneLine = util.getFormatElement(startCon, null) === util.getFormatElement(endCon, null);\r\n            const endLength = lineNodes.length - (oneLine ? 0 : 1);\r\n\r\n            // node Changes\r\n            newNode = appendNode.cloneNode(false);\r\n\r\n            const isRemoveAnchor = isRemoveFormat || (isRemoveNode && (function (arr) {\r\n                for (let n = 0, len = arr.length; n < len; n++) {\r\n                    if (util._isMaintainedNode(arr[n]) || util._isSizeNode(arr[n])) return true;\r\n                }\r\n                return false;\r\n            })(removeNodeArray));\r\n\r\n            const isSizeNode = isRemoveNode || util._isSizeNode(newNode);\r\n            const _getMaintainedNode = this._util_getMaintainedNode.bind(util, isRemoveAnchor, isSizeNode);\r\n            const _isMaintainedNode = this._util_isMaintainedNode.bind(util, isRemoveAnchor, isSizeNode);\r\n\r\n            // one line\r\n            if (oneLine) {\r\n                if (this._resetCommonListCell(lineNodes[0], styleArray)) range = this.setRange(startCon, startOff, endCon, endOff);\r\n\r\n                const newRange = this._nodeChange_oneLine(lineNodes[0], newNode, validation, startCon, startOff, endCon, endOff, isRemoveFormat, isRemoveNode, range.collapsed, _removeCheck, _getMaintainedNode, _isMaintainedNode);\r\n                start.container = newRange.startContainer;\r\n                start.offset = newRange.startOffset;\r\n                end.container = newRange.endContainer;\r\n                end.offset = newRange.endOffset;\r\n                \r\n                if (start.container === end.container && util.onlyZeroWidthSpace(start.container)) {\r\n                    start.offset = end.offset = 1;\r\n                }\r\n                this._setCommonListStyle(newRange.ancestor, null);\r\n            } else { // multi line \r\n                let appliedCommonList = false;\r\n                if (endLength > 0 && this._resetCommonListCell(lineNodes[endLength], styleArray)) appliedCommonList = true;\r\n                if (this._resetCommonListCell(lineNodes[0], styleArray)) appliedCommonList = true;\r\n                if (appliedCommonList) this.setRange(startCon, startOff, endCon, endOff);\r\n\r\n                // end\r\n                if (endLength > 0) {\r\n                    newNode = appendNode.cloneNode(false);\r\n                    end = this._nodeChange_endLine(lineNodes[endLength], newNode, validation, endCon, endOff, isRemoveFormat, isRemoveNode, _removeCheck, _getMaintainedNode, _isMaintainedNode);\r\n                }\r\n\r\n                // mid\r\n                for (let i = endLength - 1, newRange; i > 0; i--) {\r\n                    this._resetCommonListCell(lineNodes[i], styleArray);\r\n                    newNode = appendNode.cloneNode(false);\r\n                    newRange = this._nodeChange_middleLine(lineNodes[i], newNode, validation, isRemoveFormat, isRemoveNode, _removeCheck, end.container);\r\n                    if (newRange.endContainer && newRange.ancestor.contains(newRange.endContainer)) {\r\n                        end.ancestor = null;\r\n                        end.container = newRange.endContainer;\r\n                    }\r\n                    this._setCommonListStyle(newRange.ancestor, null);\r\n                }\r\n\r\n                // start\r\n                newNode = appendNode.cloneNode(false);\r\n                start = this._nodeChange_startLine(lineNodes[0], newNode, validation, startCon, startOff, isRemoveFormat, isRemoveNode, _removeCheck, _getMaintainedNode, _isMaintainedNode, end.container);\r\n\r\n                if (start.endContainer) {\r\n                    end.ancestor = null;\r\n                    end.container = start.endContainer;\r\n                }\r\n\r\n                if (endLength <= 0) {\r\n                    end = start;\r\n                } else if (!end.container) {\r\n                    end.ancestor = null;\r\n                    end.container = start.container;\r\n                    end.offset = start.container.textContent.length;\r\n                }\r\n\r\n                this._setCommonListStyle(start.ancestor, null);\r\n                this._setCommonListStyle(end.ancestor || util.getFormatElement(end.container), null);\r\n            }\r\n\r\n            // set range\r\n            this.controllersOff();\r\n            this.setRange(start.container, start.offset, end.container, end.offset);\r\n\r\n            // history stack\r\n            this.history.push(false);\r\n        },\r\n\r\n        /**\r\n         * @description Reset common style of list cell\r\n         * @param {Element} el List cell element. <li>\r\n         * @param {Array|null} styleArray Style array\r\n         * @private\r\n         */\r\n        _resetCommonListCell: function (el, styleArray) {\r\n            if (!util.isListCell(el)) return;\r\n            if (!styleArray) styleArray = this._listKebab;\r\n\r\n            const children = util.getArrayItem((el).childNodes, function (current) { return !util.isBreak(current); }, true);\r\n            const elStyles = el.style;\r\n            \r\n            const ec = [], ek = [], elKeys = util.getValues(elStyles);\r\n            for (let i = 0, len = this._listKebab.length; i < len; i++) {\r\n                if (elKeys.indexOf(this._listKebab[i]) > -1 && styleArray.indexOf(this._listKebab[i]) > -1) {\r\n                    ec.push(this._listCamel[i]);\r\n                    ek.push(this._listKebab[i]);\r\n                }\r\n            }\r\n\r\n            if (!ec.length) return;\r\n\r\n            // reset cell style---\r\n            const refer = util.createElement('SPAN');\r\n            for (let i = 0, len = ec.length; i < len; i++) {\r\n                refer.style[ec[i]] = elStyles[ek[i]];\r\n                elStyles.removeProperty(ek[i]);\r\n            }\r\n\r\n            let sel = refer.cloneNode(false);\r\n            let r = null, appliedEl = false;\r\n            for (let i = 0, len = children.length, c, s; i < len; i++) {\r\n                c = children[i];\r\n                if (options._textTagsMap[c.nodeName.toLowerCase()]) continue;\r\n\r\n                s = util.getValues(c.style);\r\n                if (s.length === 0 || (ec.some(function (k) {return s.indexOf(k) === -1;}) && s.some(function(k) {ec.indexOf(k) > -1;}))) {\r\n                    r = c.nextSibling;\r\n                    sel.appendChild(c);\r\n                } else if (sel.childNodes.length > 0) {\r\n                    el.insertBefore(sel, r);\r\n                    sel = refer.cloneNode(false);\r\n                    r = null;\r\n                    appliedEl = true;\r\n                }\r\n            }\r\n            \r\n            if (sel.childNodes.length > 0) {\r\n                el.insertBefore(sel, r);\r\n                appliedEl = true;\r\n            }\r\n            if (!elStyles.length) {\r\n                el.removeAttribute('style');\r\n            }\r\n\r\n            return appliedEl;\r\n        },\r\n\r\n        /**\r\n         * @description If certain styles are applied to all child nodes of the list cell, the style of the list cell is also changed. (bold, color, size)\r\n         * @param {Element} el List cell element. <li>\r\n         * @param {Element|null} child Variable for recursive call. (\"null\" on the first call)\r\n         * @private\r\n         */\r\n        _setCommonListStyle: function (el, child) {\r\n            if (!util.isListCell(el)) return;\r\n            \r\n            const children = util.getArrayItem((child || el).childNodes, function (current) { return !util.isBreak(current); }, true);\r\n            child = children[0];\r\n            \r\n            if (!child || children.length > 1 || child.nodeType !== 1) return;\r\n            \r\n            // set cell style---\r\n            const childStyle = child.style;\r\n            const elStyle = el.style;\r\n            const nodeName = child.nodeName.toLowerCase();\r\n            let appliedEl = false;\r\n\r\n            // bold, italic\r\n            if (options._textTagsMap[nodeName] === options._defaultCommand.bold.toLowerCase()) elStyle.fontWeight = 'bold';\r\n            if (options._textTagsMap[nodeName] === options._defaultCommand.italic.toLowerCase()) elStyle.fontStyle = 'italic';\r\n\r\n            // styles\r\n            const cKeys = util.getValues(childStyle);\r\n            if (cKeys.length > 0) {\r\n                for (let i = 0, len = this._listCamel.length; i < len; i++) {\r\n                    if (cKeys.indexOf(this._listKebab[i]) > -1) {\r\n                        elStyle[this._listCamel[i]] = childStyle[this._listCamel[i]];\r\n                        childStyle.removeProperty(this._listKebab[i]);\r\n                        appliedEl = true;\r\n                    }\r\n                }\r\n            }\r\n\r\n            this._setCommonListStyle(el, child);\r\n            if (!appliedEl) return;\r\n\r\n            // common style\r\n            if (!childStyle.length) {\r\n                const ch = child.childNodes;\r\n                const p = child.parentNode;\r\n                const n = child.nextSibling;\r\n                while (ch.length > 0) {\r\n                    p.insertBefore(ch[0], n);\r\n                }\r\n                util.removeItem(child);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Strip remove node\r\n         * @param {Node} removeNode The remove node\r\n         * @private\r\n         */\r\n        _stripRemoveNode: function (removeNode) {\r\n            const element = removeNode.parentNode;\r\n            if (!removeNode || removeNode.nodeType === 3 || !element) return;\r\n            \r\n            const children = removeNode.childNodes;\r\n            while (children[0]) {\r\n                element.insertBefore(children[0], removeNode);\r\n            }\r\n\r\n            element.removeChild(removeNode);\r\n        },\r\n\r\n        /**\r\n         * @description Return the parent maintained tag. (bind and use a util object)\r\n         * @param {Element} element Element\r\n         * @returns {Element}\r\n         * @private\r\n         */\r\n        _util_getMaintainedNode: function (_isRemove, _isSizeNode, element) {\r\n            if (!element || _isRemove) return null;\r\n            return this.getParentElement(element, this._isMaintainedNode.bind(this)) || (!_isSizeNode ? this.getParentElement(element, this._isSizeNode.bind(this)) : null);\r\n        },\r\n\r\n        /**\r\n         * @description Check if element is a tag that should be persisted. (bind and use a util object)\r\n         * @param {Element} element Element\r\n         * @returns {Element}\r\n         * @private\r\n         */\r\n        _util_isMaintainedNode: function (_isRemove, _isSizeNode, element) {\r\n            if (!element || _isRemove || element.nodeType !== 1) return false;\r\n            const anchor = this._isMaintainedNode(element);\r\n            return this.getParentElement(element, this._isMaintainedNode.bind(this)) ? anchor : (anchor || (!_isSizeNode ? this._isSizeNode(element) : false));\r\n        },\r\n\r\n        /**\r\n         * @description wraps text nodes of line selected text.\r\n         * @param {Element} element The node of the line that contains the selected text node.\r\n         * @param {Element} newInnerNode The dom that will wrap the selected text area\r\n         * @param {Function} validation Check if the node should be stripped.\r\n         * @param {Node} startCon The startContainer property of the selection object.\r\n         * @param {Number} startOff The startOffset property of the selection object.\r\n         * @param {Node} endCon The endContainer property of the selection object.\r\n         * @param {Number} endOff The endOffset property of the selection object.\r\n         * @param {Boolean} isRemoveFormat Is the remove all formats command?\r\n         * @param {Boolean} isRemoveNode \"newInnerNode\" is remove node?\r\n         * @param {Boolean} collapsed range.collapsed\r\n         * @returns {{ancestor: *, startContainer: *, startOffset: *, endContainer: *, endOffset: *}}\r\n         * @private\r\n         */\r\n        _nodeChange_oneLine: function (element, newInnerNode, validation, startCon, startOff, endCon, endOff, isRemoveFormat, isRemoveNode, collapsed, _removeCheck, _getMaintainedNode, _isMaintainedNode) {\r\n            // not add tag\r\n            let parentCon = startCon.parentNode;\r\n            while (!parentCon.nextSibling && !parentCon.previousSibling && !util.isFormatElement(parentCon.parentNode) && !util.isWysiwygDiv(parentCon.parentNode)) {\r\n                if (parentCon.nodeName === newInnerNode.nodeName) break;\r\n                parentCon = parentCon.parentNode;\r\n            }\r\n\r\n            if (!isRemoveNode && parentCon === endCon.parentNode && parentCon.nodeName === newInnerNode.nodeName) {\r\n                if (util.onlyZeroWidthSpace(startCon.textContent.slice(0, startOff)) && util.onlyZeroWidthSpace(endCon.textContent.slice(endOff))) {\r\n                    const children = parentCon.childNodes;\r\n                    let sameTag = true;\r\n    \r\n                    for (let i = 0, len = children.length, c, s, e, z; i < len; i++) {\r\n                        c = children[i];\r\n                        z = !util.onlyZeroWidthSpace(c);\r\n                        if (c === startCon) {\r\n                            s = true;\r\n                            continue;\r\n                        }\r\n                        if (c === endCon) {\r\n                            e = true;\r\n                            continue;\r\n                        }\r\n                        if ((!s && z) || (s && e && z)) {\r\n                            sameTag = false;\r\n                            break;\r\n                        }\r\n                    }\r\n    \r\n                    if (sameTag) {\r\n                        util.copyTagAttributes(parentCon, newInnerNode);\r\n        \r\n                        return {\r\n                            ancestor: element,\r\n                            startContainer: startCon,\r\n                            startOffset: startOff,\r\n                            endContainer: endCon,\r\n                            endOffset: endOff\r\n                        };\r\n                    }\r\n                }\r\n            }\r\n\r\n            // add tag\r\n            _removeCheck.v = false;\r\n            const el = element;\r\n            const nNodeArray = [newInnerNode];\r\n            const pNode = element.cloneNode(false);\r\n            const isSameNode = startCon === endCon;\r\n            let startContainer = startCon;\r\n            let startOffset = startOff;\r\n            let endContainer = endCon;\r\n            let endOffset = endOff;\r\n            let startPass = false;\r\n            let endPass = false;\r\n            let pCurrent, newNode, appendNode, cssText, anchorNode;\r\n\r\n            const wRegExp = _w.RegExp;\r\n            function checkCss (vNode) {\r\n                const regExp = new wRegExp('(?:;|^|\\\\s)(?:' + cssText + 'null)\\\\s*:[^;]*\\\\s*(?:;|$)', 'ig');\r\n                let style = '';\r\n\r\n                if (regExp && vNode.style.cssText.length > 0) {\r\n                    style = regExp.test(vNode.style.cssText);\r\n                }\r\n            \r\n                return !style;\r\n            }\r\n\r\n            (function recursionFunc(current, ancestor) {\r\n                const childNodes = current.childNodes;\r\n\r\n                for (let i = 0, len = childNodes.length, vNode; i < len; i++) {\r\n                    let child = childNodes[i];\r\n                    if (!child) continue;\r\n                    let coverNode = ancestor;\r\n                    let cloneNode;\r\n\r\n                    // startContainer\r\n                    if (!startPass && child === startContainer) {\r\n                        let line = pNode;\r\n                        anchorNode = _getMaintainedNode(child);\r\n                        const prevNode = util.createTextNode(startContainer.nodeType === 1 ? '' : startContainer.substringData(0, startOffset));\r\n                        const textNode = util.createTextNode(startContainer.nodeType === 1 ? '' : startContainer.substringData(startOffset, \r\n                                isSameNode ? \r\n                                (endOffset >= startOffset ? endOffset - startOffset : startContainer.data.length - startOffset) : \r\n                                startContainer.data.length - startOffset)\r\n                            );\r\n\r\n                        if (anchorNode) {\r\n                            const a = _getMaintainedNode(ancestor);\r\n                            if (a && a.parentNode !== line) {\r\n                                let m = a;\r\n                                let p = null;\r\n                                while (m.parentNode !== line) {\r\n                                    ancestor = p = m.parentNode.cloneNode(false);\r\n                                    while(m.childNodes[0]) {\r\n                                        p.appendChild(m.childNodes[0]);\r\n                                    }\r\n                                    m.appendChild(p);\r\n                                    m = m.parentNode;\r\n                                }\r\n                                m.parentNode.appendChild(a);\r\n                            }\r\n                            anchorNode = anchorNode.cloneNode(false);\r\n                        }\r\n                        \r\n                        if (!util.onlyZeroWidthSpace(prevNode)) {\r\n                            ancestor.appendChild(prevNode);\r\n                        }\r\n\r\n                        const prevAnchorNode = _getMaintainedNode(ancestor);\r\n                        if (!!prevAnchorNode) anchorNode = prevAnchorNode;\r\n                        if (anchorNode) line = anchorNode;\r\n\r\n                        newNode = child;\r\n                        pCurrent = [];\r\n                        cssText = '';\r\n                        while (newNode !== line && newNode !== el && newNode !== null) {\r\n                            vNode = _isMaintainedNode(newNode) ? null : validation(newNode);\r\n                            if (vNode && newNode.nodeType === 1 && checkCss(newNode)) {\r\n                                pCurrent.push(vNode);\r\n                                cssText += newNode.style.cssText.substr(0, newNode.style.cssText.indexOf(':')) + '|';\r\n                            }\r\n                            newNode = newNode.parentNode;\r\n                        }\r\n\r\n                        const childNode = pCurrent.pop() || textNode;\r\n                        appendNode = newNode = childNode;\r\n                        while (pCurrent.length > 0) {\r\n                            newNode = pCurrent.pop();\r\n                            appendNode.appendChild(newNode);\r\n                            appendNode = newNode;\r\n                        }\r\n\r\n                        newInnerNode.appendChild(childNode);\r\n                        line.appendChild(newInnerNode);\r\n\r\n                        if (anchorNode && !_getMaintainedNode(endContainer)) {\r\n                            newInnerNode = newInnerNode.cloneNode(false);\r\n                            pNode.appendChild(newInnerNode);\r\n                            nNodeArray.push(newInnerNode);\r\n                        }\r\n\r\n                        startContainer = textNode;\r\n                        startOffset = 0;\r\n                        startPass = true;\r\n\r\n                        if (newNode !== textNode) newNode.appendChild(startContainer);\r\n                        if (!isSameNode) continue;\r\n                    }\r\n\r\n                    // endContainer\r\n                    if (!endPass && child === endContainer) {\r\n                        anchorNode = _getMaintainedNode(child);\r\n                        const afterNode = util.createTextNode(endContainer.nodeType === 1 ? '' : endContainer.substringData(endOffset, (endContainer.length - endOffset)));\r\n                        const textNode = util.createTextNode(isSameNode || endContainer.nodeType === 1 ? '' : endContainer.substringData(0, endOffset));\r\n\r\n                        if (anchorNode) {\r\n                            anchorNode = anchorNode.cloneNode(false);\r\n                        } else if (_isMaintainedNode(newInnerNode.parentNode) && !anchorNode) {\r\n                            newInnerNode = newInnerNode.cloneNode(false);\r\n                            pNode.appendChild(newInnerNode);\r\n                            nNodeArray.push(newInnerNode);\r\n                        }\r\n\r\n                        if (!util.onlyZeroWidthSpace(afterNode)) {\r\n                            newNode = child;\r\n                            cssText = '';\r\n                            pCurrent = [];\r\n                            const anchors = [];\r\n                            while (newNode !== pNode && newNode !== el && newNode !== null) {\r\n                                if (newNode.nodeType === 1 && checkCss(newNode)) {\r\n                                    if (_isMaintainedNode(newNode)) anchors.push(newNode.cloneNode(false));\r\n                                    else pCurrent.push(newNode.cloneNode(false));\r\n                                    cssText += newNode.style.cssText.substr(0, newNode.style.cssText.indexOf(':')) + '|';\r\n                                }\r\n                                newNode = newNode.parentNode;\r\n                            }\r\n                            pCurrent = pCurrent.concat(anchors);\r\n\r\n                            cloneNode = appendNode = newNode = pCurrent.pop() || afterNode;\r\n                            while (pCurrent.length > 0) {\r\n                                newNode = pCurrent.pop();\r\n                                appendNode.appendChild(newNode);\r\n                                appendNode = newNode;\r\n                            }\r\n\r\n                            pNode.appendChild(cloneNode);\r\n                            newNode.textContent = afterNode.data;\r\n                        }\r\n\r\n                        if (anchorNode && cloneNode) {\r\n                            const afterAnchorNode = _getMaintainedNode(cloneNode);\r\n                            if (afterAnchorNode) {\r\n                                anchorNode = afterAnchorNode;\r\n                            }\r\n                        }\r\n\r\n                        newNode = child;\r\n                        pCurrent = [];\r\n                        cssText = '';\r\n                        while (newNode !== pNode && newNode !== el && newNode !== null) {\r\n                            vNode = _isMaintainedNode(newNode) ? null : validation(newNode);\r\n                            if (vNode && newNode.nodeType === 1 && checkCss(newNode)) {\r\n                                pCurrent.push(vNode);\r\n                                cssText += newNode.style.cssText.substr(0, newNode.style.cssText.indexOf(':')) + '|';\r\n                            }\r\n                            newNode = newNode.parentNode;\r\n                        }\r\n\r\n                        const childNode = pCurrent.pop() || textNode;\r\n                        appendNode = newNode = childNode;\r\n                        while (pCurrent.length > 0) {\r\n                            newNode = pCurrent.pop();\r\n                            appendNode.appendChild(newNode);\r\n                            appendNode = newNode;\r\n                        }\r\n\r\n                        if (anchorNode) {\r\n                            newInnerNode = newInnerNode.cloneNode(false);\r\n                            newInnerNode.appendChild(childNode);\r\n                            anchorNode.insertBefore(newInnerNode, anchorNode.firstChild);\r\n                            pNode.appendChild(anchorNode);\r\n                            nNodeArray.push(newInnerNode);\r\n                            anchorNode = null;\r\n                        } else {\r\n                            newInnerNode.appendChild(childNode);\r\n                        }\r\n\r\n                        endContainer = textNode;\r\n                        endOffset = textNode.data.length;\r\n                        endPass = true;\r\n\r\n                        if (!isRemoveFormat && collapsed) {\r\n                            newInnerNode = textNode;\r\n                            textNode.textContent = util.zeroWidthSpace;\r\n                        }\r\n\r\n                        if (newNode !== textNode) newNode.appendChild(endContainer);\r\n                        continue;\r\n                    }\r\n\r\n                    // other\r\n                    if (startPass) {\r\n                        if (child.nodeType === 1 && !util.isBreak(child)) {\r\n                            if (util._isIgnoreNodeChange(child)) {\r\n                                pNode.appendChild(child.cloneNode(true));\r\n                                if (!collapsed) {\r\n                                    newInnerNode = newInnerNode.cloneNode(false);\r\n                                    pNode.appendChild(newInnerNode);\r\n                                    nNodeArray.push(newInnerNode);\r\n                                }\r\n                            } else {\r\n                                recursionFunc(child, child);\r\n                            }\r\n                            continue;\r\n                        }\r\n\r\n                        newNode = child;\r\n                        pCurrent = [];\r\n                        cssText = '';\r\n                        const anchors = [];\r\n                        while (newNode.parentNode !== null && newNode !== el && newNode !== newInnerNode) {\r\n                            vNode = endPass ? newNode.cloneNode(false) : validation(newNode);\r\n                            if (newNode.nodeType === 1 && !util.isBreak(child) && vNode && checkCss(newNode)) {\r\n                                if (_isMaintainedNode(newNode)) {\r\n                                    if (!anchorNode) anchors.push(vNode);\r\n                                } else {\r\n                                    pCurrent.push(vNode);\r\n                                }\r\n                                cssText += newNode.style.cssText.substr(0, newNode.style.cssText.indexOf(':')) + '|';\r\n                            }\r\n                            newNode = newNode.parentNode;\r\n                        }\r\n                        pCurrent = pCurrent.concat(anchors);\r\n\r\n                        const childNode = pCurrent.pop() || child;\r\n                        appendNode = newNode = childNode;\r\n                        while (pCurrent.length > 0) {\r\n                            newNode = pCurrent.pop();\r\n                            appendNode.appendChild(newNode);\r\n                            appendNode = newNode;\r\n                        }\r\n                        \r\n                        if (_isMaintainedNode(newInnerNode.parentNode) && !_isMaintainedNode(childNode) && !util.onlyZeroWidthSpace(newInnerNode)) {\r\n                            newInnerNode = newInnerNode.cloneNode(false);\r\n                            pNode.appendChild(newInnerNode);\r\n                            nNodeArray.push(newInnerNode);\r\n                        }\r\n                        \r\n                        if (!endPass && !anchorNode && _isMaintainedNode(childNode)) {\r\n                            newInnerNode = newInnerNode.cloneNode(false);\r\n                            const aChildren = childNode.childNodes;\r\n                            for (let a = 0, aLen = aChildren.length; a < aLen; a++) {\r\n                                newInnerNode.appendChild(aChildren[a]);\r\n                            }\r\n                            childNode.appendChild(newInnerNode);\r\n                            pNode.appendChild(childNode);\r\n                            nNodeArray.push(newInnerNode);\r\n                            if (newInnerNode.children.length > 0) ancestor = newNode;\r\n                            else ancestor = newInnerNode;\r\n                        } else if (childNode === child) {\r\n                            if (!endPass) ancestor = newInnerNode;\r\n                            else ancestor = pNode;\r\n                        } else if (endPass) {\r\n                            pNode.appendChild(childNode);\r\n                            ancestor = newNode;\r\n                        } else {\r\n                            newInnerNode.appendChild(childNode);\r\n                            ancestor = newNode;\r\n                        }\r\n\r\n                        if (anchorNode && child.nodeType === 3) {\r\n                            if (_getMaintainedNode(child)) {\r\n                                const ancestorAnchorNode = util.getParentElement(ancestor, function (current) {return this._isMaintainedNode(current.parentNode) || current.parentNode === pNode;}.bind(util));\r\n                                anchorNode.appendChild(ancestorAnchorNode);\r\n                                newInnerNode = ancestorAnchorNode.cloneNode(false);\r\n                                nNodeArray.push(newInnerNode);\r\n                                pNode.appendChild(newInnerNode);\r\n                            } else {\r\n                                anchorNode = null;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    cloneNode = child.cloneNode(false);\r\n                    ancestor.appendChild(cloneNode);\r\n                    if (child.nodeType === 1 && !util.isBreak(child)) coverNode = cloneNode;\r\n\r\n                    recursionFunc(child, coverNode);\r\n                }\r\n            })(element, pNode);\r\n\r\n            // not remove tag\r\n            if (isRemoveNode && !isRemoveFormat && !_removeCheck.v) {\r\n                return {\r\n                    ancestor: element,\r\n                    startContainer: startCon,\r\n                    startOffset: startOff,\r\n                    endContainer: endCon,\r\n                    endOffset: endOff\r\n                };\r\n            }\r\n\r\n            isRemoveFormat = isRemoveFormat && isRemoveNode;\r\n\r\n            if (isRemoveFormat) {\r\n                for (let i = 0; i < nNodeArray.length; i++) {\r\n                    let removeNode = nNodeArray[i];\r\n                    let textNode, textNode_s, textNode_e;\r\n                    \r\n                    if (collapsed) {\r\n                        textNode = util.createTextNode(util.zeroWidthSpace);\r\n                        pNode.replaceChild(textNode, removeNode);\r\n                    } else {\r\n                        const rChildren = removeNode.childNodes;\r\n                        textNode_s = rChildren[0];\r\n                        while (rChildren[0]) {\r\n                            textNode_e = rChildren[0];\r\n                            pNode.insertBefore(textNode_e, removeNode);\r\n                        }\r\n                        util.removeItem(removeNode);\r\n                    }\r\n\r\n                    if (i === 0) {\r\n                        if (collapsed) {\r\n                            startContainer = endContainer = textNode;\r\n                        } else {\r\n                            startContainer = textNode_s;\r\n                            endContainer = textNode_e;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (isRemoveNode) {\r\n                    for (let i = 0; i < nNodeArray.length; i++) {\r\n                        this._stripRemoveNode(nNodeArray[i]);\r\n                    }\r\n                }\r\n                \r\n                if (collapsed) {\r\n                    startContainer = endContainer = newInnerNode;\r\n                }\r\n            }\r\n\r\n            util.removeEmptyNode(pNode, newInnerNode, false);\r\n\r\n            if (collapsed) {\r\n                startOffset = startContainer.textContent.length;\r\n                endOffset = endContainer.textContent.length;\r\n            }\r\n\r\n            // endContainer reset\r\n            const endConReset = isRemoveFormat || endContainer.textContent.length === 0;\r\n\r\n            if (!util.isBreak(endContainer) && endContainer.textContent.length === 0) {\r\n                util.removeItem(endContainer);\r\n                endContainer = startContainer;\r\n            }\r\n            endOffset = endConReset ? endContainer.textContent.length : endOffset;\r\n\r\n            // node change\r\n            const newStartOffset = {s: 0, e: 0};\r\n            const startPath = util.getNodePath(startContainer, pNode, newStartOffset);\r\n\r\n            const mergeEndCon = !endContainer.parentNode;\r\n            if (mergeEndCon) endContainer = startContainer;\r\n            const newEndOffset = {s: 0, e: 0};\r\n            const endPath = util.getNodePath(endContainer , pNode, (!mergeEndCon && !endConReset) ? newEndOffset : null);\r\n\r\n            startOffset += newStartOffset.s;\r\n            endOffset = (collapsed ? startOffset : mergeEndCon ? startContainer.textContent.length : endConReset ? endOffset + newStartOffset.s : endOffset + newEndOffset.s);\r\n\r\n            // tag merge\r\n            const newOffsets = util.mergeSameTags(pNode, [startPath, endPath], true);\r\n\r\n            element.parentNode.replaceChild(pNode, element);\r\n\r\n            startContainer = util.getNodeFromPath(startPath, pNode);\r\n            endContainer = util.getNodeFromPath(endPath, pNode);\r\n\r\n            return {\r\n                ancestor: pNode,\r\n                startContainer: startContainer,\r\n                startOffset: startOffset + newOffsets[0],\r\n                endContainer: endContainer,\r\n                endOffset: endOffset + newOffsets[1]\r\n            };\r\n        },\r\n\r\n        /**\r\n         * @description wraps first line selected text.\r\n         * @param {Element} element The node of the line that contains the selected text node.\r\n         * @param {Element} newInnerNode The dom that will wrap the selected text area\r\n         * @param {Function} validation Check if the node should be stripped.\r\n         * @param {Node} startCon The startContainer property of the selection object.\r\n         * @param {Number} startOff The startOffset property of the selection object.\r\n         * @param {Boolean} isRemoveFormat Is the remove all formats command?\r\n         * @param {Boolean} isRemoveNode \"newInnerNode\" is remove node?\r\n         * @returns {null|Node} If end container is renewed, returned renewed node\r\n         * @returns {Object} { ancestor, container, offset, endContainer }\r\n         * @private\r\n         */\r\n        _nodeChange_startLine: function (element, newInnerNode, validation, startCon, startOff, isRemoveFormat, isRemoveNode, _removeCheck, _getMaintainedNode, _isMaintainedNode, _endContainer) {\r\n            // not add tag\r\n            let parentCon = startCon.parentNode;\r\n            while (!parentCon.nextSibling && !parentCon.previousSibling && !util.isFormatElement(parentCon.parentNode) && !util.isWysiwygDiv(parentCon.parentNode)) {\r\n                if (parentCon.nodeName === newInnerNode.nodeName) break;\r\n                parentCon = parentCon.parentNode;\r\n            }\r\n\r\n            if (!isRemoveNode && parentCon.nodeName === newInnerNode.nodeName && !util.isFormatElement(parentCon) && !parentCon.nextSibling && util.onlyZeroWidthSpace(startCon.textContent.slice(0, startOff))) {\r\n                let sameTag = true;\r\n                let s = startCon.previousSibling;\r\n                while (s) {\r\n                    if (!util.onlyZeroWidthSpace(s)) {\r\n                        sameTag = false;\r\n                        break;\r\n                    }\r\n                    s = s.previousSibling;\r\n                }\r\n\r\n                if (sameTag) {\r\n                    util.copyTagAttributes(parentCon, newInnerNode);\r\n    \r\n                    return {\r\n                        ancestor: element,\r\n                        container: startCon,\r\n                        offset: startOff\r\n                    };\r\n                }\r\n            }\r\n\r\n            // add tag\r\n            _removeCheck.v = false;\r\n            const el = element;\r\n            const nNodeArray = [newInnerNode];\r\n            const pNode = element.cloneNode(false);\r\n\r\n            let container = startCon;\r\n            let offset = startOff;\r\n            let passNode = false;\r\n            let pCurrent, newNode, appendNode, anchorNode;\r\n\r\n            (function recursionFunc(current, ancestor) {\r\n                const childNodes = current.childNodes;\r\n\r\n                for (let i = 0, len = childNodes.length, vNode, cloneChild; i < len; i++) {\r\n                    const child = childNodes[i];\r\n                    if (!child) continue;\r\n                    let coverNode = ancestor;\r\n\r\n                    if (passNode && !util.isBreak(child)) {\r\n                        if (child.nodeType === 1) {\r\n                            if (util._isIgnoreNodeChange(child)) {\r\n                                newInnerNode = newInnerNode.cloneNode(false);\r\n                                cloneChild = child.cloneNode(true);\r\n                                pNode.appendChild(cloneChild);\r\n                                pNode.appendChild(newInnerNode);\r\n                                nNodeArray.push(newInnerNode);\r\n\r\n                                // end container\r\n                                if (_endContainer && child.contains(_endContainer)) {\r\n                                    const endPath = util.getNodePath(_endContainer, child);\r\n                                    _endContainer = util.getNodeFromPath(endPath, cloneChild);\r\n                                }\r\n                            } else {\r\n                                recursionFunc(child, child);\r\n                            }\r\n                            continue;\r\n                        }\r\n\r\n                        newNode = child;\r\n                        pCurrent = [];\r\n                        const anchors = [];\r\n                        while (newNode.parentNode !== null && newNode !== el && newNode !== newInnerNode) {\r\n                            vNode = validation(newNode);\r\n                            if (newNode.nodeType === 1 && vNode) {\r\n                                if (_isMaintainedNode(newNode)) {\r\n                                    if (!anchorNode) anchors.push(vNode);\r\n                                } else {\r\n                                    pCurrent.push(vNode);\r\n                                }\r\n                            }\r\n                            newNode = newNode.parentNode;\r\n                        }\r\n                        pCurrent = pCurrent.concat(anchors);\r\n\r\n                        const isTopNode = pCurrent.length > 0;\r\n                        const childNode = pCurrent.pop() || child;\r\n                        appendNode = newNode = childNode;\r\n                        while (pCurrent.length > 0) {\r\n                            newNode = pCurrent.pop();\r\n                            appendNode.appendChild(newNode);\r\n                            appendNode = newNode;\r\n                        }\r\n\r\n                        if (_isMaintainedNode(newInnerNode.parentNode) && !_isMaintainedNode(childNode)) {\r\n                            newInnerNode = newInnerNode.cloneNode(false);\r\n                            pNode.appendChild(newInnerNode);\r\n                            nNodeArray.push(newInnerNode);\r\n                        }\r\n                        \r\n                        if (!anchorNode && _isMaintainedNode(childNode)) {\r\n                            newInnerNode = newInnerNode.cloneNode(false);\r\n                            const aChildren = childNode.childNodes;\r\n                            for (let a = 0, aLen = aChildren.length; a < aLen; a++) {\r\n                                newInnerNode.appendChild(aChildren[a]);\r\n                            }\r\n                            childNode.appendChild(newInnerNode);\r\n                            pNode.appendChild(childNode);\r\n                            ancestor = !_isMaintainedNode(newNode) ? newNode : newInnerNode;\r\n                            nNodeArray.push(newInnerNode);\r\n                        } else if (isTopNode) {\r\n                            newInnerNode.appendChild(childNode);\r\n                            ancestor = newNode;\r\n                        } else {\r\n                            ancestor = newInnerNode;\r\n                        }\r\n\r\n                        if (anchorNode && child.nodeType === 3) {\r\n                            if (_getMaintainedNode(child)) {\r\n                                const ancestorAnchorNode = util.getParentElement(ancestor, function (current) {return this._isMaintainedNode(current.parentNode) || current.parentNode === pNode;}.bind(util));\r\n                                anchorNode.appendChild(ancestorAnchorNode);\r\n                                newInnerNode = ancestorAnchorNode.cloneNode(false);\r\n                                nNodeArray.push(newInnerNode);\r\n                                pNode.appendChild(newInnerNode);\r\n                            } else {\r\n                                anchorNode = null;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // startContainer\r\n                    if (!passNode && child === container) {\r\n                        let line = pNode;\r\n                        anchorNode = _getMaintainedNode(child);\r\n                        const prevNode = util.createTextNode(container.nodeType === 1 ? '' : container.substringData(0, offset));\r\n                        const textNode = util.createTextNode(container.nodeType === 1 ? '' : container.substringData(offset, (container.length - offset)));\r\n\r\n                        if (anchorNode) {\r\n                            const a = _getMaintainedNode(ancestor);\r\n                            if (a && a.parentNode !== line) {\r\n                                let m = a;\r\n                                let p = null;\r\n                                while (m.parentNode !== line) {\r\n                                    ancestor = p = m.parentNode.cloneNode(false);\r\n                                    while(m.childNodes[0]) {\r\n                                        p.appendChild(m.childNodes[0]);\r\n                                    }\r\n                                    m.appendChild(p);\r\n                                    m = m.parentNode;\r\n                                }\r\n                                m.parentNode.appendChild(a);\r\n                            }\r\n                            anchorNode = anchorNode.cloneNode(false);\r\n                        }\r\n\r\n                        if (!util.onlyZeroWidthSpace(prevNode)) {\r\n                            ancestor.appendChild(prevNode);\r\n                        }\r\n\r\n                        const prevAnchorNode = _getMaintainedNode(ancestor);\r\n                        if (!!prevAnchorNode) anchorNode = prevAnchorNode;\r\n                        if (anchorNode) line = anchorNode;\r\n\r\n                        newNode = ancestor;\r\n                        pCurrent = [];\r\n                        while (newNode !== line && newNode !== null) {\r\n                            vNode = validation(newNode);\r\n                            if (newNode.nodeType === 1 && vNode) {\r\n                                pCurrent.push(vNode);\r\n                            }\r\n                            newNode = newNode.parentNode;\r\n                        }\r\n\r\n                        const childNode = pCurrent.pop() || ancestor;\r\n                        appendNode = newNode = childNode;\r\n                        while (pCurrent.length > 0) {\r\n                            newNode = pCurrent.pop();\r\n                            appendNode.appendChild(newNode);\r\n                            appendNode = newNode;\r\n                        }\r\n\r\n                        if (childNode !== ancestor) {\r\n                            newInnerNode.appendChild(childNode);\r\n                            ancestor = newNode;\r\n                        } else {\r\n                            ancestor = newInnerNode;\r\n                        }\r\n\r\n                        if (util.isBreak(child)) newInnerNode.appendChild(child.cloneNode(false));\r\n                        line.appendChild(newInnerNode);\r\n\r\n                        container = textNode;\r\n                        offset = 0;\r\n                        passNode = true;\r\n\r\n                        ancestor.appendChild(container);\r\n                        continue;\r\n                    }\r\n\r\n                    vNode = !passNode ? child.cloneNode(false) : validation(child);\r\n                    if (vNode) {\r\n                        ancestor.appendChild(vNode);\r\n                        if (child.nodeType === 1 && !util.isBreak(child)) coverNode = vNode;\r\n                    }\r\n\r\n                    recursionFunc(child, coverNode);\r\n                }\r\n            })(element, pNode);\r\n\r\n            // not remove tag\r\n            if (isRemoveNode && !isRemoveFormat && !_removeCheck.v) {\r\n                return {\r\n                    ancestor: element,\r\n                    container: startCon,\r\n                    offset: startOff,\r\n                    endContainer: _endContainer\r\n                };\r\n            }\r\n\r\n            isRemoveFormat = isRemoveFormat && isRemoveNode;\r\n\r\n            if (isRemoveFormat) {\r\n                for (let i = 0; i < nNodeArray.length; i++) {\r\n                    let removeNode = nNodeArray[i];\r\n\r\n                    const rChildren = removeNode.childNodes;\r\n                    const textNode = rChildren[0];\r\n                    while (rChildren[0]) {\r\n                        pNode.insertBefore(rChildren[0], removeNode);\r\n                    }\r\n                    util.removeItem(removeNode);\r\n\r\n                    if (i === 0) container = textNode;\r\n                }\r\n            } else if (isRemoveNode) {\r\n                newInnerNode = newInnerNode.firstChild;\r\n                for (let i = 0; i < nNodeArray.length; i++) {\r\n                    this._stripRemoveNode(nNodeArray[i]);\r\n                }\r\n            }\r\n\r\n            if (!isRemoveFormat && pNode.childNodes.length === 0) {\r\n                if (element.childNodes) {\r\n                    container = element.childNodes[0];\r\n                } else {\r\n                    container = util.createTextNode(util.zeroWidthSpace);\r\n                    element.appendChild(container);\r\n                }\r\n            } else {\r\n                util.removeEmptyNode(pNode, newInnerNode, false);\r\n\r\n                if (util.onlyZeroWidthSpace(pNode.textContent)) {\r\n                    container = pNode.firstChild;\r\n                    offset = 0;\r\n                }\r\n\r\n                // node change\r\n                const offsets = {s: 0, e: 0};\r\n                const path = util.getNodePath(container, pNode, offsets);\r\n                offset += offsets.s;\r\n\r\n                // tag merge\r\n                const newOffsets = util.mergeSameTags(pNode, [path], true);\r\n\r\n                element.parentNode.replaceChild(pNode, element);\r\n\r\n                container = util.getNodeFromPath(path, pNode);\r\n                offset += newOffsets[0];\r\n            }\r\n\r\n            return {\r\n                ancestor: pNode,\r\n                container: container,\r\n                offset: offset,\r\n                endContainer: _endContainer\r\n            };\r\n        },\r\n\r\n        /**\r\n         * @description wraps mid lines selected text.\r\n         * @param {Element} element The node of the line that contains the selected text node.\r\n         * @param {Element} newInnerNode The dom that will wrap the selected text area\r\n         * @param {Function} validation Check if the node should be stripped.\r\n         * @param {Boolean} isRemoveFormat Is the remove all formats command?\r\n         * @param {Boolean} isRemoveNode \"newInnerNode\" is remove node?\r\n         * @param {Node} _endContainer Offset node of last line already modified (end.container)\r\n         * @returns {Object} { ancestor, endContainer: \"If end container is renewed, returned renewed node\" }\r\n         * @private\r\n         */\r\n        _nodeChange_middleLine: function (element, newInnerNode, validation, isRemoveFormat, isRemoveNode, _removeCheck, _endContainer) {\r\n            // not add tag\r\n            if (!isRemoveNode) {\r\n                // end container path\r\n                let endPath = null;\r\n                if (_endContainer && element.contains(_endContainer)) endPath = util.getNodePath(_endContainer, element);\r\n\r\n                const tempNode = element.cloneNode(true);\r\n                const newNodeName = newInnerNode.nodeName;\r\n                const newCssText = newInnerNode.style.cssText;\r\n                const newClass = newInnerNode.className;\r\n\r\n                let children = tempNode.childNodes;\r\n                let i = 0, len = children.length;\r\n                for (let child; i < len; i++) {\r\n                    child = children[i];\r\n                    if (child.nodeType === 3) break;\r\n                    if (child.nodeName === newNodeName) {\r\n                        child.style.cssText += newCssText;\r\n                        util.addClass(child, newClass);\r\n                    } else if (!util.isBreak(child) && util._isIgnoreNodeChange(child)) {\r\n                        continue;\r\n                    } else if (len === 1) {\r\n                        children = child.childNodes;\r\n                        len = children.length;\r\n                        i = -1;\r\n                        continue;\r\n                    } else {\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (len > 0 && i === len) {\r\n                    element.innerHTML = tempNode.innerHTML;\r\n                    return {\r\n                        ancestor: element,\r\n                        endContainer: endPath ? util.getNodeFromPath(endPath, element) : null\r\n                    };\r\n                }\r\n            }\r\n\r\n            // add tag\r\n            _removeCheck.v = false;\r\n            const pNode = element.cloneNode(false);\r\n            const nNodeArray = [newInnerNode];\r\n            let noneChange = true;\r\n\r\n            (function recursionFunc(current, ancestor) {\r\n                const childNodes = current.childNodes;\r\n\r\n                for (let i = 0, len = childNodes.length, vNode, cloneChild; i < len; i++) {\r\n                    let child = childNodes[i];\r\n                    if (!child) continue;\r\n                    let coverNode = ancestor;\r\n\r\n                    if (!util.isBreak(child) && util._isIgnoreNodeChange(child)) {\r\n                        if (newInnerNode.childNodes.length > 0) {\r\n                            pNode.appendChild(newInnerNode);\r\n                            newInnerNode = newInnerNode.cloneNode(false);\r\n                        }\r\n                        \r\n                        cloneChild = child.cloneNode(true);\r\n                        pNode.appendChild(cloneChild);\r\n                        pNode.appendChild(newInnerNode);\r\n                        nNodeArray.push(newInnerNode);\r\n                        ancestor = newInnerNode;\r\n\r\n                        // end container\r\n                        if (_endContainer && child.contains(_endContainer)) {\r\n                            const endPath = util.getNodePath(_endContainer, child);\r\n                            _endContainer = util.getNodeFromPath(endPath, cloneChild);\r\n                        }\r\n\r\n                        continue;\r\n                    } else {\r\n                        vNode = validation(child);\r\n                        if (vNode) {\r\n                            noneChange = false;\r\n                            ancestor.appendChild(vNode);\r\n                            if (child.nodeType === 1) coverNode = vNode;\r\n                        }\r\n                    }\r\n\r\n                    if (!util.isBreak(child)) recursionFunc(child, coverNode);\r\n                }\r\n            })(element, newInnerNode);\r\n\r\n            // not remove tag\r\n            if (noneChange || (isRemoveNode && !isRemoveFormat && !_removeCheck.v)) return { ancestor: element, endContainer: _endContainer };\r\n\r\n            pNode.appendChild(newInnerNode);\r\n\r\n            if (isRemoveFormat && isRemoveNode) {\r\n                for (let i = 0; i < nNodeArray.length; i++) {\r\n                    let removeNode = nNodeArray[i];\r\n                    \r\n                    const rChildren = removeNode.childNodes;\r\n                    while (rChildren[0]) {\r\n                        pNode.insertBefore(rChildren[0], removeNode);\r\n                    }\r\n                    util.removeItem(removeNode);\r\n                }\r\n            } else if (isRemoveNode) {\r\n                newInnerNode = newInnerNode.firstChild;\r\n                for (let i = 0; i < nNodeArray.length; i++) {\r\n                    this._stripRemoveNode(nNodeArray[i]);\r\n                }\r\n            }\r\n\r\n            util.removeEmptyNode(pNode, newInnerNode, false);\r\n            util.mergeSameTags(pNode, null, true);\r\n\r\n            // node change\r\n            element.parentNode.replaceChild(pNode, element);\r\n            return { ancestor: pNode, endContainer: _endContainer };\r\n        },\r\n\r\n        /**\r\n         * @description wraps last line selected text.\r\n         * @param {Element} element The node of the line that contains the selected text node.\r\n         * @param {Element} newInnerNode The dom that will wrap the selected text area\r\n         * @param {Function} validation Check if the node should be stripped.\r\n         * @param {Node} endCon The endContainer property of the selection object.\r\n         * @param {Number} endOff The endOffset property of the selection object.\r\n         * @param {Boolean} isRemoveFormat Is the remove all formats command?\r\n         * @param {Boolean} isRemoveNode \"newInnerNode\" is remove node?\r\n         * @returns {Object} { ancestor, container, offset }\r\n         * @private\r\n         */\r\n        _nodeChange_endLine: function (element, newInnerNode, validation, endCon, endOff, isRemoveFormat, isRemoveNode, _removeCheck, _getMaintainedNode, _isMaintainedNode) {\r\n            // not add tag\r\n            let parentCon = endCon.parentNode;\r\n            while (!parentCon.nextSibling && !parentCon.previousSibling && !util.isFormatElement(parentCon.parentNode) && !util.isWysiwygDiv(parentCon.parentNode)) {\r\n                if (parentCon.nodeName === newInnerNode.nodeName) break;\r\n                parentCon = parentCon.parentNode;\r\n            }\r\n            \r\n            if (!isRemoveNode && parentCon.nodeName === newInnerNode.nodeName && !util.isFormatElement(parentCon) && !parentCon.previousSibling && util.onlyZeroWidthSpace(endCon.textContent.slice(endOff))) {\r\n                let sameTag = true;\r\n                let e = endCon.nextSibling;\r\n                while (e) {\r\n                    if (!util.onlyZeroWidthSpace(e)) {\r\n                        sameTag = false;\r\n                        break;\r\n                    }\r\n                    e = e.nextSibling;\r\n                }\r\n\r\n                if (sameTag) {\r\n                    util.copyTagAttributes(parentCon, newInnerNode);\r\n    \r\n                    return {\r\n                        ancestor: element,\r\n                        container: endCon,\r\n                        offset: endOff\r\n                    };\r\n                }\r\n            }\r\n\r\n            // add tag\r\n            _removeCheck.v = false;\r\n            const el = element;\r\n            const nNodeArray = [newInnerNode];\r\n            const pNode = element.cloneNode(false);\r\n\r\n            let container = endCon;\r\n            let offset = endOff;\r\n            let passNode = false;\r\n            let pCurrent, newNode, appendNode, anchorNode;\r\n\r\n            (function recursionFunc(current, ancestor) {\r\n                const childNodes = current.childNodes;\r\n\r\n                for (let i = childNodes.length - 1, vNode; 0 <= i; i--) {\r\n                    const child = childNodes[i];\r\n                    if (!child) continue;\r\n                    let coverNode = ancestor;\r\n\r\n                    if (passNode && !util.isBreak(child)) {\r\n                        if (child.nodeType === 1) {\r\n                            if (util._isIgnoreNodeChange(child)) {\r\n                                newInnerNode = newInnerNode.cloneNode(false);\r\n                                const cloneChild = child.cloneNode(true);\r\n                                pNode.insertBefore(cloneChild, ancestor);\r\n                                pNode.insertBefore(newInnerNode, cloneChild);\r\n                                nNodeArray.push(newInnerNode);\r\n                            } else {\r\n                                recursionFunc(child, child);\r\n                            }\r\n                            continue;\r\n                        }\r\n\r\n                        newNode = child;\r\n                        pCurrent = [];\r\n                        const anchors = [];\r\n                        while (newNode.parentNode !== null && newNode !== el && newNode !== newInnerNode) {\r\n                            vNode = validation(newNode);\r\n                            if (vNode && newNode.nodeType === 1) {\r\n                                if (_isMaintainedNode(newNode)) {\r\n                                    if (!anchorNode) anchors.push(vNode);\r\n                                } else {\r\n                                    pCurrent.push(vNode);\r\n                                }\r\n                            }\r\n                            newNode = newNode.parentNode;\r\n                        }\r\n                        pCurrent = pCurrent.concat(anchors);\r\n\r\n                        const isTopNode = pCurrent.length > 0;\r\n                        const childNode = pCurrent.pop() || child;\r\n                        appendNode = newNode = childNode;\r\n                        while (pCurrent.length > 0) {\r\n                            newNode = pCurrent.pop();\r\n                            appendNode.appendChild(newNode);\r\n                            appendNode = newNode;\r\n                        }\r\n\r\n                        if (_isMaintainedNode(newInnerNode.parentNode) && !_isMaintainedNode(childNode)) {\r\n                            newInnerNode = newInnerNode.cloneNode(false);\r\n                            pNode.insertBefore(newInnerNode, pNode.firstChild);\r\n                            nNodeArray.push(newInnerNode);\r\n                        }\r\n\r\n                        if (!anchorNode && _isMaintainedNode(childNode)) {\r\n                            newInnerNode = newInnerNode.cloneNode(false);\r\n                            const aChildren = childNode.childNodes;\r\n                            for (let a = 0, aLen = aChildren.length; a < aLen; a++) {\r\n                                newInnerNode.appendChild(aChildren[a]);\r\n                            }\r\n                            childNode.appendChild(newInnerNode);\r\n                            pNode.insertBefore(childNode, pNode.firstChild);\r\n                            nNodeArray.push(newInnerNode);\r\n                            if (newInnerNode.children.length > 0) ancestor = newNode;\r\n                            else ancestor = newInnerNode;\r\n                        } else if (isTopNode) {\r\n                            newInnerNode.insertBefore(childNode, newInnerNode.firstChild);\r\n                            ancestor = newNode;\r\n                        } else {\r\n                            ancestor = newInnerNode;\r\n                        }\r\n\r\n                        if (anchorNode && child.nodeType === 3) {\r\n                            if (_getMaintainedNode(child)) {\r\n                                const ancestorAnchorNode = util.getParentElement(ancestor, function (current) {return this._isMaintainedNode(current.parentNode) || current.parentNode === pNode;}.bind(util));\r\n                                anchorNode.appendChild(ancestorAnchorNode);\r\n                                newInnerNode = ancestorAnchorNode.cloneNode(false);\r\n                                nNodeArray.push(newInnerNode);\r\n                                pNode.insertBefore(newInnerNode, pNode.firstChild);\r\n                            } else {\r\n                                anchorNode = null;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // endContainer\r\n                    if (!passNode && child === container) {\r\n                        anchorNode = _getMaintainedNode(child);\r\n                        const afterNode = util.createTextNode(container.nodeType === 1 ? '' : container.substringData(offset, (container.length - offset)));\r\n                        const textNode = util.createTextNode(container.nodeType === 1 ? '' : container.substringData(0, offset));\r\n\r\n                        if (anchorNode) {\r\n                            anchorNode = anchorNode.cloneNode(false);\r\n                            const a = _getMaintainedNode(ancestor);\r\n                            if (a && a.parentNode !== pNode) {\r\n                                let m = a;\r\n                                let p = null;\r\n                                while (m.parentNode !== pNode) {\r\n                                    ancestor = p = m.parentNode.cloneNode(false);\r\n                                    while(m.childNodes[0]) {\r\n                                        p.appendChild(m.childNodes[0]);\r\n                                    }\r\n                                    m.appendChild(p);\r\n                                    m = m.parentNode;\r\n                                }\r\n                                m.parentNode.insertBefore(a, m.parentNode.firstChild);\r\n                            }\r\n                            anchorNode = anchorNode.cloneNode(false);\r\n                        } else if (_isMaintainedNode(newInnerNode.parentNode) && !anchorNode) {\r\n                            newInnerNode = newInnerNode.cloneNode(false);\r\n                            pNode.appendChild(newInnerNode);\r\n                            nNodeArray.push(newInnerNode);\r\n                        }\r\n\r\n                        if (!util.onlyZeroWidthSpace(afterNode)) {\r\n                            ancestor.insertBefore(afterNode, ancestor.firstChild);\r\n                        }\r\n\r\n                        newNode = ancestor;\r\n                        pCurrent = [];\r\n                        while (newNode !== pNode && newNode !== null) {\r\n                            vNode = _isMaintainedNode(newNode) ? null : validation(newNode);\r\n                            if (vNode && newNode.nodeType === 1) {\r\n                                pCurrent.push(vNode);\r\n                            }\r\n                            newNode = newNode.parentNode;\r\n                        }\r\n\r\n                        const childNode = pCurrent.pop() || ancestor;\r\n                        appendNode = newNode = childNode;\r\n                        while (pCurrent.length > 0) {\r\n                            newNode = pCurrent.pop();\r\n                            appendNode.appendChild(newNode);\r\n                            appendNode = newNode;\r\n                        }\r\n\r\n                        if (childNode !== ancestor) {\r\n                            newInnerNode.insertBefore(childNode, newInnerNode.firstChild);\r\n                            ancestor = newNode;\r\n                        } else {\r\n                            ancestor = newInnerNode;\r\n                        }\r\n\r\n                        if (util.isBreak(child)) newInnerNode.appendChild(child.cloneNode(false));\r\n                        \r\n                        if (anchorNode) {\r\n                            anchorNode.insertBefore(newInnerNode, anchorNode.firstChild);\r\n                            pNode.insertBefore(anchorNode, pNode.firstChild);\r\n                            anchorNode = null;\r\n                        } else {\r\n                            pNode.insertBefore(newInnerNode, pNode.firstChild);\r\n                        }\r\n\r\n                        container = textNode;\r\n                        offset = textNode.data.length;\r\n                        passNode = true;\r\n\r\n                        ancestor.insertBefore(container, ancestor.firstChild);\r\n                        continue;\r\n                    }\r\n\r\n                    vNode = !passNode ? child.cloneNode(false) : validation(child);\r\n                    if (vNode) {\r\n                        ancestor.insertBefore(vNode, ancestor.firstChild);\r\n                        if (child.nodeType === 1 && !util.isBreak(child)) coverNode = vNode;\r\n                    }\r\n\r\n                    recursionFunc(child, coverNode);\r\n                }\r\n            })(element, pNode);\r\n\r\n            // not remove tag\r\n            if (isRemoveNode && !isRemoveFormat && !_removeCheck.v) {\r\n                return {\r\n                    ancestor: element,\r\n                    container: endCon,\r\n                    offset: endOff\r\n                };\r\n            }\r\n\r\n            isRemoveFormat = isRemoveFormat && isRemoveNode;\r\n\r\n            if (isRemoveFormat) {\r\n                for (let i = 0; i < nNodeArray.length; i++) {\r\n                    let removeNode = nNodeArray[i];\r\n                    \r\n                    const rChildren = removeNode.childNodes;\r\n                    let textNode = null;\r\n                    while (rChildren[0]) {\r\n                        textNode = rChildren[0];\r\n                        pNode.insertBefore(textNode, removeNode);\r\n                    }\r\n                    util.removeItem(removeNode);\r\n\r\n                    if (i === nNodeArray.length - 1) {\r\n                        container = textNode;\r\n                        offset = textNode.textContent.length;\r\n                    }\r\n                }\r\n            } else if (isRemoveNode) {\r\n                newInnerNode = newInnerNode.firstChild;\r\n                for (let i = 0; i < nNodeArray.length; i++) {\r\n                    this._stripRemoveNode(nNodeArray[i]);\r\n                }\r\n            }\r\n\r\n            if (!isRemoveFormat && pNode.childNodes.length === 0) {\r\n                if (element.childNodes) {\r\n                    container = element.childNodes[0];\r\n                } else {\r\n                    container = util.createTextNode(util.zeroWidthSpace);\r\n                    element.appendChild(container);\r\n                }\r\n            } else {\r\n                if (!isRemoveNode && newInnerNode.textContent.length === 0) {\r\n                    util.removeEmptyNode(pNode, null, false);\r\n                    return {\r\n                        ancestor: null,\r\n                        container: null,\r\n                        offset: 0\r\n                    };\r\n                }\r\n\r\n                util.removeEmptyNode(pNode, newInnerNode, false);\r\n\r\n                if (util.onlyZeroWidthSpace(pNode.textContent)) {\r\n                    container = pNode.firstChild;\r\n                    offset = container.textContent.length;\r\n                } else if (util.onlyZeroWidthSpace(container)) {\r\n                    container = newInnerNode;\r\n                    offset = 1;\r\n                }\r\n                \r\n                // node change\r\n                const offsets = {s: 0, e: 0};\r\n                const path = util.getNodePath(container, pNode, offsets);\r\n                offset += offsets.s;\r\n\r\n                // tag merge\r\n                const newOffsets = util.mergeSameTags(pNode, [path], true);\r\n\r\n                element.parentNode.replaceChild(pNode, element);\r\n\r\n                container = util.getNodeFromPath(path, pNode);\r\n                offset += newOffsets[0];\r\n            }\r\n\r\n            return {\r\n                ancestor: pNode,\r\n                container: container,\r\n                offset: container.nodeType === 1 && offset === 1 ? container.childNodes.length : offset\r\n            };\r\n        },\r\n\r\n        /**\r\n         * @description Run plugin calls and basic commands.\r\n         * @param {String} command Command string\r\n         * @param {String} display Display type string ('command', 'submenu', 'dialog', 'container')\r\n         * @param {Element} target The element of command button\r\n         */\r\n        actionCall: function (command, display, target) {\r\n            // call plugins\r\n            if (display) {\r\n                if (/more/i.test(display)) {\r\n                    if (target !== this._moreLayerActiveButton) {\r\n                        const layer = context.element.toolbar.querySelector('.' + command);\r\n                        if (layer) {\r\n                            if (this._moreLayerActiveButton) this.moreLayerOff();\r\n\r\n                            this._moreLayerActiveButton = target;\r\n                            layer.style.display = 'block';\r\n\r\n                            event._showToolbarBalloon();\r\n                            event._showToolbarInline();\r\n                        }\r\n                        util.addClass(target, 'on');\r\n                    } else {\r\n                        const layer = context.element.toolbar.querySelector('.' + this._moreLayerActiveButton.getAttribute('data-command'));\r\n                        if (layer) {\r\n                            this.moreLayerOff();\r\n\r\n                            event._showToolbarBalloon();\r\n                            event._showToolbarInline();\r\n                        }        \r\n                    }\r\n                    return;\r\n                }\r\n                \r\n                if (/container/.test(display) && (this._menuTray[command] === null || target !== this.containerActiveButton)) {\r\n                    this.callPlugin(command, this.containerOn.bind(this, target), target);\r\n                    return;\r\n                } \r\n                \r\n                if (this.isReadOnly && util.arrayIncludes(this.resizingDisabledButtons, target)) return;\r\n                if (/submenu/.test(display) && (this._menuTray[command] === null || target !== this.submenuActiveButton)) {\r\n                    this.callPlugin(command, this.submenuOn.bind(this, target), target);\r\n                    return;\r\n                } else if (/dialog/.test(display)) {\r\n                    this.callPlugin(command, this.plugins[command].open.bind(this), target);\r\n                    return;\r\n                } else if (/command/.test(display)) {\r\n                    this.callPlugin(command, this.plugins[command].action.bind(this), target);\r\n                } else if (/fileBrowser/.test(display)) {\r\n                    this.callPlugin(command, this.plugins[command].open.bind(this, null), target);\r\n                }\r\n            } // default command\r\n            else if (command) {\r\n                this.commandHandler(target, command);\r\n            }\r\n\r\n            if (/submenu/.test(display)) {\r\n                this.submenuOff();\r\n            } else if (!/command/.test(display)) {\r\n                this.submenuOff();\r\n                this.containerOff();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Execute command of command button(All Buttons except submenu and dialog)\r\n         * (selectAll, codeView, fullScreen, indent, outdent, undo, redo, removeFormat, print, preview, showBlocks, save, bold, underline, italic, strike, subscript, superscript, copy, cut, paste)\r\n         * @param {Element|null} target The element of command button\r\n         * @param {String} command Property of command button (data-value)\r\n         */\r\n        commandHandler: function (target, command) {\r\n            if (core.isReadOnly && !/copy|cut|selectAll|codeView|fullScreen|print|preview|showBlocks/.test(command)) return;\r\n            switch (command) {\r\n                case 'copy':\r\n                case 'cut':\r\n                    this.execCommand(command);\r\n                    break;\r\n                case 'paste':\r\n                    break;\r\n                case 'selectAll':\r\n                    this.containerOff();\r\n                    const wysiwyg = context.element.wysiwyg;\r\n                    let first = util.getChildElement(wysiwyg.firstChild, function (current) { return current.childNodes.length === 0 || current.nodeType === 3; }, false) || wysiwyg.firstChild;\r\n                    let last = util.getChildElement(wysiwyg.lastChild, function (current) { return current.childNodes.length === 0 || current.nodeType === 3; }, true) || wysiwyg.lastChild;\r\n                    if (!first || !last) return;\r\n                    if (util.isMedia(first)) {\r\n                        const info = this.getFileComponent(first);\r\n                        const br = util.createElement('BR');\r\n                        const format = util.createElement(options.defaultTag);\r\n                        format.appendChild(br);\r\n                        first = info ? info.component : first;\r\n                        first.parentNode.insertBefore(format, first);\r\n                        first = br;\r\n                    }\r\n                    if (util.isMedia(last)) {\r\n                        const br = util.createElement('BR');\r\n                        const format = util.createElement(options.defaultTag);\r\n                        format.appendChild(br);\r\n                        wysiwyg.appendChild(format);\r\n                        last = br;\r\n                    }\r\n                    event._showToolbarBalloon(this.setRange(first, 0, last, last.textContent.length));\r\n                    break;\r\n                case 'codeView':\r\n                    this.toggleCodeView();\r\n                    break;\r\n                case 'fullScreen':\r\n                    this.toggleFullScreen(target);\r\n                    break;\r\n                case 'indent':\r\n                case 'outdent':\r\n                    this.indent(command);\r\n                    break;\r\n                case 'undo':\r\n                    this.history.undo();\r\n                    break;\r\n                case 'redo':\r\n                    this.history.redo();\r\n                    break;\r\n                case 'removeFormat':\r\n                    this.removeFormat();\r\n                    this.focus();\r\n                    break;\r\n                case 'print':\r\n                    this.print();\r\n                    break;\r\n                case 'preview':\r\n                    this.preview();\r\n                    break;\r\n                case 'showBlocks':\r\n                    this.toggleDisplayBlocks();\r\n                    break;\r\n                case 'dir':\r\n                    this.setDir(options.rtl ? 'ltr' : 'rtl');\r\n                    break;\r\n                case 'dir_ltr':\r\n                    this.setDir('ltr');\r\n                    break;\r\n                case 'dir_rtl':\r\n                    this.setDir('rtl');\r\n                    break;\r\n                case 'save':\r\n                    if (typeof options.callBackSave === 'function') {\r\n                        options.callBackSave(this.getContents(false), this._variable.isChanged);\r\n                    } else if (this._variable.isChanged && typeof functions.save === 'function') {\r\n                        functions.save();\r\n                    } else {\r\n                        throw Error('[SUNEDITOR.core.commandHandler.fail] Please register call back function in creation option. (callBackSave : Function)');\r\n                    }\r\n\r\n                    this._variable.isChanged = false;\r\n                    if (context.tool.save) context.tool.save.setAttribute('disabled', true);\r\n                    break;\r\n                default : // 'STRONG', 'U', 'EM', 'DEL', 'SUB', 'SUP'..\r\n                    command = options._defaultCommand[command.toLowerCase()] || command;\r\n                    if (!this.commandMap[command]) this.commandMap[command] = target;\r\n\r\n                    const nodesMap = this._variable.currentNodesMap;\r\n                    const cmd = nodesMap.indexOf(command) > -1 ? null : util.createElement(command);\r\n                    let removeNode = command;\r\n\r\n                    if (/^SUB$/i.test(command) && nodesMap.indexOf('SUP') > -1) {\r\n                        removeNode = 'SUP';\r\n                    } else if (/^SUP$/i.test(command) && nodesMap.indexOf('SUB') > -1) {\r\n                        removeNode = 'SUB';\r\n                    }\r\n\r\n                    this.nodeChange(cmd, this._commandMapStyles[command] || null, [removeNode], false);\r\n                    this.focus();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Remove format of the currently selected range\r\n         */\r\n        removeFormat: function () {\r\n            this.nodeChange(null, null, null, null);\r\n        },\r\n\r\n        /**\r\n         * @description This method implements indentation to selected range.\r\n         * Setted \"margin-left\" to \"25px\" in the top \"P\" tag of the parameter node.\r\n         * @param {String} command Separator (\"indent\" or \"outdent\")\r\n         */\r\n        indent: function (command) {\r\n            const range = this.getRange();\r\n            const rangeLines = this.getSelectedElements(null);\r\n            const cells = [];\r\n            const shift = 'indent' !== command;\r\n            const marginDir = options.rtl ? 'marginRight' : 'marginLeft';\r\n            let sc = range.startContainer;\r\n            let ec = range.endContainer;\r\n            let so = range.startOffset;\r\n            let eo = range.endOffset;\r\n\r\n            for (let i = 0, len = rangeLines.length, f, margin; i < len; i++) {\r\n                f = rangeLines[i];\r\n                if (!util.isListCell(f) || !this.plugins.list) {\r\n                    margin = /\\d+/.test(f.style[marginDir]) ? util.getNumber(f.style[marginDir], 0) : 0;\r\n                    if (shift) {\r\n                        margin -= 25;\r\n                    } else {\r\n                        margin += 25;\r\n                    }\r\n                    util.setStyle(f, marginDir, (margin <= 0 ? '' : margin + 'px'));\r\n                } else {\r\n                    if (shift || f.previousElementSibling) {\r\n                        cells.push(f);\r\n                    }\r\n                }\r\n            }\r\n\r\n            // list cells\r\n            if (cells.length > 0) {\r\n                this.plugins.list.editInsideList.call(this, shift, cells);\r\n            }\r\n\r\n            this.effectNode = null;\r\n            this.setRange(sc, so, ec, eo);\r\n\r\n            // history stack\r\n            this.history.push(false);\r\n        },\r\n\r\n        /**\r\n         * @description Add or remove the class name of \"body\" so that the code block is visible\r\n         */\r\n        toggleDisplayBlocks: function () {\r\n            const wysiwyg = context.element.wysiwyg;\r\n            util.toggleClass(wysiwyg, 'se-show-block');\r\n            if (util.hasClass(wysiwyg, 'se-show-block')) {\r\n                util.addClass(this._styleCommandMap.showBlocks, 'active');\r\n            } else {\r\n                util.removeClass(this._styleCommandMap.showBlocks, 'active');\r\n            }\r\n            this._resourcesStateChange();\r\n        },\r\n\r\n        /**\r\n         * @description Changes to code view or wysiwyg view\r\n         */\r\n        toggleCodeView: function () {\r\n            const isCodeView = this._variable.isCodeView;\r\n            this.controllersOff();\r\n            util.setDisabledButtons(!isCodeView, this.codeViewDisabledButtons);\r\n\r\n            if (isCodeView) {\r\n                if (!util.isNonEditable(context.element.wysiwygFrame)) this._setCodeDataToEditor();\r\n                context.element.wysiwygFrame.scrollTop = 0;\r\n                context.element.code.style.display = 'none';\r\n                context.element.wysiwygFrame.style.display = 'block';\r\n\r\n                this._variable._codeOriginCssText = this._variable._codeOriginCssText.replace(/(\\s?display(\\s+)?:(\\s+)?)[a-zA-Z]+(?=;)/, 'display: none');\r\n                this._variable._wysiwygOriginCssText = this._variable._wysiwygOriginCssText.replace(/(\\s?display(\\s+)?:(\\s+)?)[a-zA-Z]+(?=;)/, 'display: block');\r\n\r\n                if (options.height === 'auto' && !options.codeMirrorEditor) context.element.code.style.height = '0px';\r\n                \r\n                this._variable.isCodeView = false;\r\n                \r\n                if (!this._variable.isFullScreen) {\r\n                    this._notHideToolbar = false;\r\n                    if (/balloon|balloon-always/i.test(options.mode)) {\r\n                        context.element._arrow.style.display = '';\r\n                        this._isInline = false;\r\n                        this._isBalloon = true;\r\n                        event._hideToolbar();    \r\n                    }\r\n                }\r\n\r\n                this.nativeFocus();\r\n                util.removeClass(this._styleCommandMap.codeView, 'active');\r\n\r\n                // history stack\r\n                if (!util.isNonEditable(context.element.wysiwygFrame)) {\r\n                    this.history.push(false);\r\n                    this.history._resetCachingButton();\r\n                }\r\n            } else {\r\n                this._setEditorDataToCodeView();\r\n                this._variable._codeOriginCssText = this._variable._codeOriginCssText.replace(/(\\s?display(\\s+)?:(\\s+)?)[a-zA-Z]+(?=;)/, 'display: block');\r\n                this._variable._wysiwygOriginCssText = this._variable._wysiwygOriginCssText.replace(/(\\s?display(\\s+)?:(\\s+)?)[a-zA-Z]+(?=;)/, 'display: none');\r\n\r\n                if (this._variable.isFullScreen) context.element.code.style.height = '100%';\r\n                else if (options.height === 'auto' && !options.codeMirrorEditor) context.element.code.style.height = context.element.code.scrollHeight > 0 ? (context.element.code.scrollHeight + 'px') : 'auto';\r\n                \r\n                if (options.codeMirrorEditor) options.codeMirrorEditor.refresh();\r\n                \r\n                this._variable.isCodeView = true;\r\n\r\n                if (!this._variable.isFullScreen) {\r\n                    this._notHideToolbar = true;\r\n                    if (this._isBalloon) {\r\n                        context.element._arrow.style.display = 'none';\r\n                        context.element.toolbar.style.left = '';\r\n                        this._isInline = true;\r\n                        this._isBalloon = false;\r\n                        event._showToolbarInline();\r\n                    }\r\n                }\r\n                \r\n                this._variable._range = null;\r\n                context.element.code.focus();\r\n                util.addClass(this._styleCommandMap.codeView, 'active');\r\n            }\r\n\r\n            this._checkPlaceholder();\r\n            if (this.isReadOnly) util.setDisabledButtons(true, this.resizingDisabledButtons);\r\n\r\n            // user event\r\n            if (typeof functions.toggleCodeView === 'function') functions.toggleCodeView(this._variable.isCodeView, this);\r\n        },\r\n\r\n        /**\r\n         * @description Convert the data of the code view and put it in the WYSIWYG area.\r\n         * @private\r\n         */\r\n        _setCodeDataToEditor: function () {\r\n            const code_html = this._getCodeView();\r\n\r\n            if (options.fullPage) {\r\n                const parseDocument = this._parser.parseFromString(code_html, 'text/html');\r\n\r\n                if (!this.options.__allowedScriptTag) {\r\n                    const headChildren = parseDocument.head.children;\r\n                    for (let i = 0, len = headChildren.length; i < len; i++) {\r\n                        if (/^script$/i.test(headChildren[i].tagName)) {\r\n                            parseDocument.head.removeChild(headChildren[i]);\r\n                            i--, len--;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                let headers = parseDocument.head.innerHTML;\r\n                if (!parseDocument.head.querySelector('link[rel=\"stylesheet\"]') || (this.options.height === 'auto' && !parseDocument.head.querySelector('style'))) {\r\n                    headers += util._setIframeCssTags(this.options);\r\n                }\r\n\r\n                this._wd.head.innerHTML = headers;\r\n                this._wd.body.innerHTML = this.convertContentsForEditor(parseDocument.body.innerHTML);\r\n\r\n                const attrs = parseDocument.body.attributes;\r\n                for (let i = 0, len = attrs.length; i < len; i++) {\r\n                    if (attrs[i].name === 'contenteditable') continue;\r\n                    this._wd.body.setAttribute(attrs[i].name, attrs[i].value);\r\n                }\r\n                if (!util.hasClass(this._wd.body, 'sun-editor-editable')) {\r\n                    const editableClasses = options._editableClass.split(' ');\r\n                    for (let i = 0; i < editableClasses.length; i++) {\r\n                        util.addClass(this._wd.body, options._editableClass[i]);\r\n                    }\r\n                }\r\n            } else {\r\n                context.element.wysiwyg.innerHTML = code_html.length > 0 ? this.convertContentsForEditor(code_html) : '<' + options.defaultTag + '><br></' + options.defaultTag + '>';\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Convert the data of the WYSIWYG area and put it in the code view area.\r\n         * @private\r\n         */\r\n        _setEditorDataToCodeView: function () {\r\n            const codeContents = this.convertHTMLForCodeView(context.element.wysiwyg, false);\r\n            let codeValue = '';\r\n\r\n            if (options.fullPage) {\r\n                const attrs = util.getAttributesToString(this._wd.body, null);\r\n                codeValue = '<!DOCTYPE html>\\n<html>\\n' + this._wd.head.outerHTML.replace(/>(?!\\n)/g, '>\\n') + '<body ' + attrs + '>\\n' + codeContents + '</body>\\n</html>';\r\n            } else {\r\n                codeValue = codeContents;\r\n            }\r\n\r\n            context.element.code.style.display = 'block';\r\n            context.element.wysiwygFrame.style.display = 'none';\r\n\r\n            this._setCodeView(codeValue);\r\n        },\r\n\r\n        /**\r\n         * @description Changes to full screen or default screen\r\n         * @param {Element|null} element full screen button\r\n         */\r\n        toggleFullScreen: function (element) {\r\n            const topArea = context.element.topArea;\r\n            const toolbar = context.element.toolbar;\r\n            const editorArea = context.element.editorArea;\r\n            const wysiwygFrame = context.element.wysiwygFrame;\r\n            const code = context.element.code;\r\n            const _var = this._variable;\r\n            this.controllersOff();\r\n            \r\n            const wasToolbarHidden = (toolbar.style.display === 'none' || (this._isInline && !this._inlineToolbarAttr.isShow));\r\n\r\n            if (!_var.isFullScreen) {\r\n                _var.isFullScreen = true;\r\n                \r\n                _var._fullScreenAttrs.inline = this._isInline;\r\n                _var._fullScreenAttrs.balloon = this._isBalloon;\r\n\r\n                if (this._isInline || this._isBalloon) {\r\n                    this._isInline = false;\r\n                    this._isBalloon = false;\r\n                }\r\n                \r\n                if (!!options.toolbarContainer) context.element.relative.insertBefore(toolbar, editorArea);\r\n\r\n                topArea.style.position = 'fixed';\r\n                topArea.style.top = '0';\r\n                topArea.style.left = '0';\r\n                topArea.style.width = '100%';\r\n                topArea.style.maxWidth = '100%';\r\n                topArea.style.height = '100%';\r\n                topArea.style.zIndex = '2147483647';\r\n\r\n                if (context.element._stickyDummy.style.display !== ('none' && '')) {\r\n                    _var._fullScreenAttrs.sticky = true;\r\n                    context.element._stickyDummy.style.display = 'none';\r\n                    util.removeClass(toolbar, 'se-toolbar-sticky');\r\n                }\r\n\r\n                _var._bodyOverflow = _d.body.style.overflow;\r\n                _d.body.style.overflow = 'hidden';\r\n\r\n                _var._editorAreaOriginCssText = editorArea.style.cssText;\r\n                _var._wysiwygOriginCssText = wysiwygFrame.style.cssText;\r\n                _var._codeOriginCssText = code.style.cssText;\r\n\r\n                editorArea.style.cssText = toolbar.style.cssText = '';\r\n                wysiwygFrame.style.cssText = (wysiwygFrame.style.cssText.match(/\\s?display(\\s+)?:(\\s+)?[a-zA-Z]+;/) || [''])[0] + options._editorStyles.editor;\r\n                code.style.cssText = (code.style.cssText.match(/\\s?display(\\s+)?:(\\s+)?[a-zA-Z]+;/) || [''])[0];\r\n                toolbar.style.width = wysiwygFrame.style.height = code.style.height = '100%';\r\n                toolbar.style.position = 'relative';\r\n                toolbar.style.display = 'block';\r\n\r\n                _var.innerHeight_fullScreen = (_w.innerHeight - toolbar.offsetHeight);\r\n                editorArea.style.height = (_var.innerHeight_fullScreen - options.fullScreenOffset) + 'px';\r\n\r\n                if (element) util.changeElement(element.firstElementChild, icons.reduction);\r\n\r\n                if (options.iframe && options.height === 'auto') {\r\n                    editorArea.style.overflow = 'auto';\r\n                    this._iframeAutoHeight();\r\n                }\r\n\r\n                context.element.topArea.style.marginTop = options.fullScreenOffset + 'px';\r\n                util.addClass(this._styleCommandMap.fullScreen, 'active');\r\n            } else {\r\n                _var.isFullScreen = false;\r\n\r\n                wysiwygFrame.style.cssText = _var._wysiwygOriginCssText;\r\n                code.style.cssText = _var._codeOriginCssText;\r\n                toolbar.style.cssText = '';\r\n                editorArea.style.cssText = _var._editorAreaOriginCssText;\r\n                topArea.style.cssText = _var._originCssText;\r\n                _d.body.style.overflow = _var._bodyOverflow;\r\n\r\n                if (options.height === 'auto' && !options.codeMirrorEditor) event._codeViewAutoHeight();\r\n\r\n                if (!!options.toolbarContainer) options.toolbarContainer.appendChild(toolbar);\r\n\r\n                if (options.stickyToolbar > -1) {\r\n                    util.removeClass(toolbar, 'se-toolbar-sticky');\r\n                }\r\n\r\n                if (_var._fullScreenAttrs.sticky && !options.toolbarContainer) {\r\n                    _var._fullScreenAttrs.sticky = false;\r\n                    context.element._stickyDummy.style.display = 'block';\r\n                    util.addClass(toolbar, \"se-toolbar-sticky\");\r\n                }\r\n\r\n                this._isInline = _var._fullScreenAttrs.inline;\r\n                this._isBalloon = _var._fullScreenAttrs.balloon;\r\n                if (this._isInline) event._showToolbarInline();\r\n                if (!!options.toolbarContainer) util.removeClass(toolbar, 'se-toolbar-balloon');\r\n\r\n                event.onScroll_window();\r\n                if (element) util.changeElement(element.firstElementChild, icons.expansion);\r\n\r\n                context.element.topArea.style.marginTop = '';\r\n                util.removeClass(this._styleCommandMap.fullScreen, 'active');\r\n            }\r\n\r\n            if (wasToolbarHidden) functions.toolbar.hide();\r\n\r\n            // user event\r\n            if (typeof functions.toggleFullScreen === 'function') functions.toggleFullScreen(this._variable.isFullScreen, this);\r\n        },\r\n\r\n        /**\r\n         * @description Prints the current contents of the editor.\r\n         */\r\n        print: function () {\r\n            const iframe = util.createElement('IFRAME');\r\n            iframe.style.display = 'none';\r\n            _d.body.appendChild(iframe);\r\n\r\n            const contentsHTML = options.printTemplate ? options.printTemplate.replace(/\\{\\{\\s*contents\\s*\\}\\}/i, this.getContents(true)) : this.getContents(true);\r\n            const printDocument = util.getIframeDocument(iframe);\r\n            const wDoc = this._wd;\r\n\r\n            if (options.iframe) {\r\n                const arrts = options._printClass !== null ? 'class=\"' + options._printClass + '\"' : options.fullPage ? util.getAttributesToString(wDoc.body, ['contenteditable']) : 'class=\"' + options._editableClass + '\"';\r\n\r\n                printDocument.write('' +\r\n                    '<!DOCTYPE html><html>' +\r\n                    '<head>' +\r\n                    wDoc.head.innerHTML +\r\n                    '</head>' +\r\n                    '<body ' + arrts + '>' + contentsHTML + '</body>' +\r\n                    '</html>'\r\n                );\r\n            } else {\r\n                const links = _d.head.getElementsByTagName('link');\r\n                const styles = _d.head.getElementsByTagName('style');\r\n                let linkHTML = '';\r\n                for (let i = 0, len = links.length; i < len; i++) {\r\n                    linkHTML += links[i].outerHTML;\r\n                }\r\n                for (let i = 0, len = styles.length; i < len; i++) {\r\n                    linkHTML += styles[i].outerHTML;\r\n                }\r\n\r\n                printDocument.write('' +\r\n                    '<!DOCTYPE html><html>' +\r\n                    '<head>' +\r\n                    linkHTML +\r\n                    '</head>' +\r\n                    '<body class=\"' + (options._printClass !== null ? options._printClass : options._editableClass) + '\">' + contentsHTML + '</body>' +\r\n                    '</html>'\r\n                );\r\n            }\r\n\r\n            this.showLoading();\r\n            _w.setTimeout(function () {\r\n                try {\r\n                    iframe.focus();\r\n                    // IE or Edge, Chromium\r\n                    if (util.isIE_Edge || util.isChromium || !!_d.documentMode || !!_w.StyleMedia) {\r\n                        try {\r\n                            iframe.contentWindow.document.execCommand('print', false, null);\r\n                        } catch (e) {\r\n                            iframe.contentWindow.print();\r\n                        }\r\n                    } else {\r\n                        // Other browsers\r\n                        iframe.contentWindow.print();\r\n                    }\r\n                } catch (error) {\r\n                    throw Error('[SUNEDITOR.core.print.fail] error: ' + error);\r\n                } finally {\r\n                    core.closeLoading();\r\n                    util.removeItem(iframe);\r\n                }\r\n            }, 1000);\r\n        },\r\n\r\n        /**\r\n         * @description Open the preview window.\r\n         */\r\n        preview: function () {\r\n            core.submenuOff();\r\n            core.containerOff();\r\n            core.controllersOff();\r\n            \r\n            const contentsHTML = options.previewTemplate ? options.previewTemplate.replace(/\\{\\{\\s*contents\\s*\\}\\}/i, this.getContents(true)) : this.getContents(true);\r\n            const windowObject = _w.open('', '_blank');\r\n            windowObject.mimeType = 'text/html';\r\n            const wDoc = this._wd;\r\n\r\n            if (options.iframe) {\r\n                const arrts = options._printClass !== null ? 'class=\"' + options._printClass + '\"' : options.fullPage ? util.getAttributesToString(wDoc.body, ['contenteditable']) : 'class=\"' + options._editableClass + '\"';\r\n\r\n                windowObject.document.write('' +\r\n                    '<!DOCTYPE html><html>' +\r\n                    '<head>' +\r\n                    wDoc.head.innerHTML +\r\n                    '<style>body {overflow:auto !important; margin: 10px auto !important; height:auto !important; outline:1px dashed #ccc;}</style>' +\r\n                    '</head>' +\r\n                    '<body ' + arrts + '>' + contentsHTML + '</body>' +\r\n                    '</html>'\r\n                );\r\n            } else {\r\n                const links = _d.head.getElementsByTagName('link');\r\n                const styles = _d.head.getElementsByTagName('style');\r\n                let linkHTML = '';\r\n                for (let i = 0, len = links.length; i < len; i++) {\r\n                    linkHTML += links[i].outerHTML;\r\n                }\r\n                for (let i = 0, len = styles.length; i < len; i++) {\r\n                    linkHTML += styles[i].outerHTML;\r\n                }\r\n                \r\n                windowObject.document.write('' +\r\n                    '<!DOCTYPE html><html>' +\r\n                    '<head>' +\r\n                    '<meta charset=\"utf-8\" />' +\r\n                    '<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">' +\r\n                    '<title>' + lang.toolbar.preview + '</title>' +\r\n                    linkHTML +\r\n                    '</head>' +\r\n                    '<body class=\"' + (options._printClass !== null ? options._printClass : options._editableClass) + '\" style=\"margin:10px auto !important; height:auto !important; outline:1px dashed #ccc;\">' + contentsHTML + '</body>' +\r\n                    '</html>'\r\n                );\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Set direction to \"rtl\" or \"ltr\".\r\n         * @param {String} dir \"rtl\" or \"ltr\"\r\n         */\r\n        setDir: function (dir) {\r\n            const rtl = dir === 'rtl';\r\n            const changeDir = this._prevRtl !== rtl;\r\n            this._prevRtl = options.rtl = rtl;\r\n\r\n            if (changeDir) {\r\n                // align buttons\r\n                if (this.plugins.align) {\r\n                    this.plugins.align.exchangeDir.call(this);\r\n                }\r\n                // indent buttons\r\n                if (context.tool.indent) util.changeElement(context.tool.indent.firstElementChild, icons.indent);\r\n                if (context.tool.outdent) util.changeElement(context.tool.outdent.firstElementChild, icons.outdent);\r\n            }\r\n\r\n            const el = context.element;\r\n            if (rtl) {\r\n                util.addClass(el.topArea, 'se-rtl');\r\n                util.addClass(el.wysiwygFrame, 'se-rtl');\r\n            } else {\r\n                util.removeClass(el.topArea, 'se-rtl');\r\n                util.removeClass(el.wysiwygFrame, 'se-rtl');\r\n            }\r\n\r\n            const lineNodes = util.getListChildren(el.wysiwyg, function (current) {\r\n                return util.isFormatElement(current) && (current.style.marginRight || current.style.marginLeft || current.style.textAlign);\r\n            });\r\n\r\n            for (let i = 0, len = lineNodes.length, n, l, r; i < len; i++) {\r\n                n = lineNodes[i];\r\n                // indent margin\r\n                r = n.style.marginRight;\r\n                l = n.style.marginLeft;\r\n                if (r || l) {\r\n                    n.style.marginRight = l;\r\n                    n.style.marginLeft = r;\r\n                }\r\n                // text align\r\n                r = n.style.textAlign;\r\n                if (r === 'left') n.style.textAlign = 'right';\r\n                else if (r === 'right') n.style.textAlign = 'left';\r\n            }\r\n\r\n            const tool = context.tool;\r\n            if (tool.dir) {\r\n                util.changeTxt(tool.dir.querySelector('.se-tooltip-text'), lang.toolbar[options.rtl ? 'dir_ltr' : 'dir_rtl']);\r\n                util.changeElement(tool.dir.firstElementChild, icons[options.rtl ? 'dir_ltr' : 'dir_rtl']);\r\n            }\r\n\r\n            if (tool.dir_ltr) {\r\n                if (rtl) util.removeClass(tool.dir_ltr, 'active');\r\n                else util.addClass(tool.dir_ltr, 'active');\r\n            }\r\n\r\n            if (tool.dir_rtl) {\r\n                if (rtl) util.addClass(tool.dir_rtl, 'active');\r\n                else util.removeClass(tool.dir_rtl, 'active');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Sets the HTML string\r\n         * @param {String|undefined} html HTML string\r\n         */\r\n        setContents: function (html) {\r\n            this.removeRange();\r\n            \r\n            const convertValue = (html === null || html === undefined) ? '' : this.convertContentsForEditor(html, null, null);\r\n            if (!this._variable.isCodeView) {\r\n                context.element.wysiwyg.innerHTML = convertValue;\r\n                this._resetComponents();\r\n                // history stack\r\n                this.history.push(false);\r\n            } else {\r\n                const value = this.convertHTMLForCodeView(convertValue, false);\r\n                this._setCodeView(value);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Sets the contents of the iframe's head tag and body tag when using the \"iframe\" or \"fullPage\" option.\r\n         * @param {Object} ctx { head: HTML string, body: HTML string}\r\n         */\r\n        setIframeContents: function (ctx) {\r\n            if (!options.iframe) return false;\r\n            if (ctx.head) this._wd.head.innerHTML = this.options.__allowedScriptTag ? ctx.head : ctx.head.replace(this.__scriptTagRegExp, '');\r\n            if (ctx.body) this._wd.body.innerHTML = this.convertContentsForEditor(ctx.body);\r\n            this._resetComponents();\r\n        },\r\n\r\n        /**\r\n         * @description Gets the current contents\r\n         * @param {Boolean} onlyContents Return only the contents of the body without headers when the \"fullPage\" option is true\r\n         * @returns {Object}\r\n         */\r\n        getContents: function (onlyContents) {\r\n            const contents = this.cleanHTML(context.element.wysiwyg.innerHTML, null, null);\r\n            const renderHTML = util.createElement('DIV');\r\n            renderHTML.innerHTML = contents;\r\n\r\n            const editableEls = util.getListChildren(renderHTML, function (current) {\r\n                return current.hasAttribute('contenteditable');\r\n            });\r\n\r\n            for (let i = 0, len = editableEls.length; i < len; i++) {\r\n                editableEls[i].removeAttribute('contenteditable');\r\n            }\r\n\r\n            if (options.fullPage && !onlyContents) {\r\n                const attrs = util.getAttributesToString(this._wd.body, ['contenteditable']);\r\n                return '<!DOCTYPE html><html>' + this._wd.head.outerHTML + '<body ' + attrs + '>' + renderHTML.innerHTML + '</body></html>';\r\n            } else {\r\n                return renderHTML.innerHTML;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Gets the current contents with containing parent div(div.sun-editor-editable).\r\n         * <div class=\"sun-editor-editable\">{contents}</div>\r\n         * @param {Boolean} onlyContents Return only the contents of the body without headers when the \"fullPage\" option is true\r\n         * @returns {String}\r\n         */\r\n        getFullContents: function (onlyContents) {\r\n            return '<div class=\"sun-editor-editable' + (options.rtl ? ' se-rtl' : '') + '\">' + this.getContents(onlyContents) + '</div>';\r\n        },\r\n\r\n        /**\r\n         * @description Returns HTML string according to tag type and configuration.\r\n         * Use only \"cleanHTML\"\r\n         * @param {Node} node Node\r\n         * @param {Boolean} requireFormat If true, text nodes that do not have a format node is wrapped with the format tag.\r\n         * @private\r\n         */\r\n        _makeLine: function (node, requireFormat) {\r\n            const defaultTag = options.defaultTag;\r\n            // element\r\n            if (node.nodeType === 1) {\r\n                if (this.__disallowedTagNameRegExp.test(node.nodeName)) return '';\r\n                if (/__se__tag/.test(node.className)) return node.outerHTML;\r\n\r\n                const ch = util.getListChildNodes(node, function(current) { return util.isSpanWithoutAttr(current) && !util.getParentElement(current, util.isNotCheckingNode); }) || [];\r\n                for (let i = ch.length - 1; i >= 0; i--) {\r\n                    ch[i].outerHTML = ch[i].innerHTML;\r\n                }\r\n\r\n                if (!requireFormat || (util.isFormatElement(node) || util.isRangeFormatElement(node) || util.isComponent(node) || util.isMedia(node) || (util.isAnchor(node) && util.isMedia(node.firstElementChild)))) {\r\n                    return util.isSpanWithoutAttr(node) ? node.innerHTML : node.outerHTML;\r\n                } else {\r\n                    return '<' + defaultTag + '>' + (util.isSpanWithoutAttr(node) ? node.innerHTML : node.outerHTML) + '</' + defaultTag + '>';\r\n                }\r\n            }\r\n            // text\r\n            if (node.nodeType === 3) {\r\n                if (!requireFormat) return util._HTMLConvertor(node.textContent);\r\n                const textArray = node.textContent.split(/\\n/g);\r\n                let html = '';\r\n                for (let i = 0, tLen = textArray.length, text; i < tLen; i++) {\r\n                    text = textArray[i].trim();\r\n                    if (text.length > 0) html += '<' + defaultTag + '>' + util._HTMLConvertor(text) + '</' + defaultTag + '>';\r\n                }\r\n                return html;\r\n            }\r\n            // comments\r\n            if (node.nodeType === 8 && this._allowHTMLComments) {\r\n                return '<!--' + node.textContent.trim() + '-->';\r\n            }\r\n\r\n            return '';\r\n        },\r\n\r\n        /**\r\n         * @description Removes attribute values such as style and converts tags that do not conform to the \"html5\" standard.\r\n         * @param {String} text \r\n         * @returns {String} HTML string\r\n         * @private\r\n         */\r\n        _tagConvertor: function (text) {\r\n            if (!this._disallowedTextTagsRegExp) return text;\r\n\r\n            const ec = options._textTagsMap;\r\n            return text.replace(this._disallowedTextTagsRegExp, function (m, t, n, p) {\r\n                return t + (typeof ec[n] === 'string' ? ec[n] : n) + (p ? ' ' + p : '');\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @description Delete disallowed tags\r\n         * @param {String} html HTML string\r\n         * @returns {String}\r\n         * @private\r\n         */\r\n        _deleteDisallowedTags: function (html) {\r\n\t\t\thtml = html\r\n\t\t\t\t.replace(this.__disallowedTagsRegExp, '')\r\n\t\t\t\t.replace(/<[a-z0-9]+\\:[a-z0-9]+[^>^\\/]*>[^>]*<\\/[a-z0-9]+\\:[a-z0-9]+>/gi, '');\r\n\r\n            if (!/\\bfont\\b/i.test(this.options._editorTagsWhitelist)) {\r\n                html = html.replace(/(<\\/?)font(\\s?)/gi, '$1span$2');\r\n            }\r\n\r\n\t\t\treturn html.replace(this.editorTagsWhitelistRegExp, '').replace(this.editorTagsBlacklistRegExp, '');\r\n\t\t},\r\n\r\n        _convertFontSize: function (to, size) {\r\n            const math = this._w.Math;\r\n            const value = size.match(/(\\d+(?:\\.\\d+)?)(.+)/);\r\n            const sizeNum = value ? value[1] * 1 : util.fontValueMap[size];\r\n            const from = value ? value[2] : 'rem';\r\n            let pxSize = sizeNum;\r\n            \r\n            if (/em/.test(from)) {\r\n                pxSize = math.round(sizeNum / 0.0625);\r\n            } else if (from === 'pt') {\r\n                pxSize = math.round(sizeNum * 1.333);\r\n            } else if (from === '%') {\r\n                pxSize = sizeNum / 100;\r\n            }\r\n\r\n            switch (to) {\r\n                case 'em':\r\n                case 'rem':\r\n                case '%':\r\n                    return (pxSize * 0.0625).toFixed(2) + to;\r\n                case 'pt':\r\n                    return math.floor(pxSize / 1.333) + to;\r\n                default: // px\r\n                    return pxSize + to;\r\n            }\r\n        },\r\n\r\n        _cleanStyle: function (m, v, name) {\r\n            let sv = (m.match(/style\\s*=\\s*(?:\"|')[^\"']*(?:\"|')/) || [])[0];\r\n            if (/span/i.test(name) && !sv && (m.match(/<span\\s(.+)/) || [])[1]) {\r\n                const size = (m.match(/\\ssize=\"([^\"]+)\"/i) || [])[1];\r\n                const face = (m.match(/\\sface=\"([^\"]+)\"/i) || [])[1];\r\n                const color = (m.match(/\\scolor=\"([^\"]+)\"/i) || [])[1];\r\n                if (size || face || color) {\r\n                    sv = 'style=\"' + (size ? 'font-size:' + (this.util.getNumber(size/3.333, 1)) + 'rem;' : '') + (face ? 'font-family:' + face + ';' : '') + (color ? 'color:' + color + ';' : '') + '\"';\r\n                }\r\n            }\r\n\r\n            if (sv) {\r\n                if (!v) v = [];\r\n                const style = sv.replace(/&quot;/g, '').match(this._cleanStyleRegExp[name]);\r\n                if (style) {\r\n                    const allowedStyle = [];\r\n                    for (let i = 0, len = style.length, r; i < len; i++) {\r\n                        r = style[i].match(/([a-zA-Z0-9-]+)(:)([^\"]+)/);\r\n                        if (r && !/inherit|initial|revert|unset/i.test(r[3])) {\r\n                            const k = util.kebabToCamelCase(r[1].trim());\r\n                            const v = this.wwComputedStyle[k].replace(/\"/g, '');\r\n                            const c = r[3].trim();\r\n                            switch (k) {\r\n                                case 'fontFamily':\r\n                                    if (!options.plugins.font || options.font.indexOf(c) === -1) continue;\r\n                                    break;\r\n                                case 'fontSize':\r\n                                    if (!options.plugins.fontSize) continue;\r\n                                    if (!this._cleanStyleRegExp.fontSizeUnit.test(r[0])) {\r\n                                        r[0] = r[0].replace((r[0].match(/:\\s*([^;]+)/) || [])[1], this._convertFontSize.bind(this, options.fontSizeUnit));\r\n                                    }\r\n                                    break;\r\n                                case 'color':\r\n                                    if (!options.plugins.fontColor || /rgba\\(([0-9]+\\s*,\\s*){3}0\\)|windowtext/i.test(c)) continue;\r\n                                    break;\r\n                                case 'backgroundColor':\r\n                                    if (!options.plugins.hiliteColor || /rgba\\(([0-9]+\\s*,\\s*){3}0\\)|windowtext/i.test(c)) continue;\r\n                                    break;\r\n                            }\r\n                            \r\n                            if (v !== c) {\r\n                                allowedStyle.push(r[0]);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (allowedStyle.length > 0) v.push('style=\"' + allowedStyle.join(';') + '\"');\r\n                }\r\n            }\r\n\r\n            return v;\r\n        },\r\n\r\n        /**\r\n         * @description Tag and tag attribute check RegExp function. (used by \"cleanHTML\" and \"convertContentsForEditor\")\r\n         * @param {Boolean} lowLevelCheck Row level check\r\n         * @param {String} m RegExp value\r\n         * @param {String} t RegExp value\r\n         * @returns {String}\r\n         * @private\r\n         */\r\n        _cleanTags: function (lowLevelCheck, m, t) {\r\n            if (/^<[a-z0-9]+\\:[a-z0-9]+/i.test(m)) return m;\r\n            \r\n            let v = null;\r\n            const tagName = t.match(/(?!<)[a-zA-Z0-9\\-]+/)[0].toLowerCase();\r\n            \r\n            // blacklist\r\n            const bAttr = this._attributesTagsBlacklist[tagName];\r\n            m = m.replace(/\\s(?:on[a-z]+)\\s*=\\s*(\")[^\"]*\\1/ig, '');\r\n            if (bAttr) m = m.replace(bAttr, '');\r\n            else m = m.replace(this._attributesBlacklistRegExp, '');\r\n            \r\n            // whitelist\r\n            const wAttr = this._attributesTagsWhitelist[tagName];\r\n            if (wAttr) v = m.match(wAttr);\r\n            else v = m.match(lowLevelCheck ? this._attributesWhitelistRegExp : this._attributesWhitelistRegExp_all_data);\r\n            \r\n            // attribute\r\n            if (lowLevelCheck || tagName === 'span') {\r\n                if (tagName === 'a') {\r\n                    const sv = m.match(/(?:(?:id|name)\\s*=\\s*(?:\"|')[^\"']*(?:\"|'))/g);\r\n                    if (sv) {\r\n                        if (!v) v = [];\r\n                        v.push(sv[0]);\r\n                    }\r\n                } else if (!v || !/style=/i.test(v.toString())) {\r\n                    if (tagName === 'span') {\r\n                        v = this._cleanStyle(m, v, 'span');\r\n                    } else if (/^(P|DIV|H[1-6]|PRE)$/i.test(tagName)) {\r\n                        v = this._cleanStyle(m, v, 'format');\r\n                    }\r\n                }\r\n            } else {\r\n                const sv = m.match(/style\\s*=\\s*(?:\"|')[^\"']*(?:\"|')/);\r\n                if (sv && !v) v = [sv[0]];\r\n                else if (sv && !v.some(function (v) { return /^style/.test(v.trim()); })) v.push(sv[0]);\r\n            }\r\n\r\n            // figure\r\n            if (util.isFigures(tagName)) {\r\n                const sv = m.match(/style\\s*=\\s*(?:\"|')[^\"']*(?:\"|')/);\r\n                if (!v) v = [];\r\n                if (sv) v.push(sv[0]);\r\n            }\r\n\r\n            if (v) {\r\n                for (let i = 0, len = v.length, a; i < len; i++) {\r\n                    // if (lowLevelCheck && /^class=\"(?!(__se__|se-|katex))/.test(v[i].trim())) continue;\r\n                    a = (/^(?:href|src)\\s*=\\s*('|\"|\\s)*javascript\\s*\\:/i.test(v[i].trim()) ? '' : v[i]);\r\n                    t += (/^\\s/.test(a) ? '' : ' ') + a;\r\n                }\r\n            }\r\n\r\n            return t;\r\n        },\r\n\r\n        /**\r\n         * @description Determines if formatting is required and returns a domTree\r\n         * @param {Element} dom documentFragment\r\n         * @returns {Element}\r\n         * @private\r\n         */\r\n        _editFormat: function (dom) {\r\n            let value = '', f;\r\n            const tempTree = dom.childNodes;\r\n            \r\n            for (let i = 0, len = tempTree.length, n; i < len; i++) {\r\n                n = tempTree[i];\r\n                if  (n.nodeType === 8) {\r\n                    value += '<!-- ' + n.textContent + ' -->';\r\n                } else if (!util.isFormatElement(n) && !util.isRangeFormatElement(n) && !util.isComponent(n) && !/meta/i.test(n.nodeName)) {\r\n                    if (!f) f = util.createElement(options.defaultTag);\r\n                    f.appendChild(n);\r\n                    i--; len--;\r\n                } else {\r\n                    if (f) {\r\n                        value += f.outerHTML;\r\n                        f = null;\r\n                    }\r\n                    value += n.outerHTML;\r\n                }\r\n            }\r\n\r\n            if (f) value += f.outerHTML;\r\n\r\n            return _d.createRange().createContextualFragment(value);\r\n        },\r\n\r\n        _convertListCell: function (domTree) {\r\n            let html = '';\r\n\r\n            for (let i = 0, len = domTree.length, node; i < len; i++) {\r\n                node = domTree[i];\r\n                if (node.nodeType === 1) {\r\n                    if (util.isList(node)) {\r\n                        html += node.innerHTML;\r\n                    } else if (util.isListCell(node)) {\r\n                        html += node.outerHTML;\r\n                    } else if (util.isFormatElement(node)) {\r\n                        html += '<li>' +(node.innerHTML.trim() || '<br>') + '</li>';\r\n                    } else if (util.isRangeFormatElement(node) && !util.isTable(node)) {\r\n                        html += this._convertListCell(node);\r\n                    } else {\r\n                        html += '<li>' + node.outerHTML + '</li>';\r\n                    }\r\n                } else {\r\n                    html += '<li>' + (node.textContent || '<br>') + '</li>';\r\n                }\r\n            }\r\n\r\n            return html;\r\n        },\r\n\r\n        _isFormatData: function (domTree) {\r\n            let requireFormat = false;\r\n\r\n            for (let i = 0, len = domTree.length, t; i < len; i++) {\r\n                t = domTree[i];\r\n                if (t.nodeType === 1 && !util.isTextStyleElement(t) && !util.isBreak(t) && !this.__disallowedTagNameRegExp.test(t.nodeName)) {\r\n                    requireFormat = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            return requireFormat;\r\n        },\r\n\r\n        /**\r\n         * @description Gets the clean HTML code for editor\r\n         * @param {String} html HTML string\r\n         * @param {String|RegExp|null} whitelist Regular expression of allowed tags.\r\n         * RegExp object is create by util.createTagsWhitelist method. (core.pasteTagsWhitelistRegExp)\r\n         * @param {String|RegExp|null} blacklist Regular expression of disallowed tags.\r\n         * RegExp object is create by util.createTagsBlacklist method. (core.pasteTagsBlacklistRegExp)\r\n         * @returns {String}\r\n         */\r\n        cleanHTML: function (html, whitelist, blacklist) {\r\n            html = this._deleteDisallowedTags(this._parser.parseFromString(util.htmlCompress(html), 'text/html').body.innerHTML).replace(/(<[a-zA-Z0-9\\-]+)[^>]*(?=>)/g, this._cleanTags.bind(this, true)).replace(/<br\\/?>$/i, '');\r\n            const dom = _d.createRange().createContextualFragment(html);\r\n            try {\r\n                util._consistencyCheckOfHTML(dom, this._htmlCheckWhitelistRegExp, this._htmlCheckBlacklistRegExp, this._classNameFilter);\r\n            } catch (error) {\r\n                console.warn('[SUNEDITOR.cleanHTML.consistencyCheck.fail] ' + error);\r\n            }\r\n            \r\n            if (this.managedTagsInfo && this.managedTagsInfo.query) {\r\n                const textCompList = dom.querySelectorAll(this.managedTagsInfo.query);\r\n                for (let i = 0, len = textCompList.length, initMethod, classList; i < len; i++) {\r\n                    classList = [].slice.call(textCompList[i].classList);\r\n                    for (let c = 0, cLen = classList.length; c < cLen; c++) {\r\n                        initMethod = this.managedTagsInfo.map[classList[c]];\r\n                        if (initMethod) {\r\n                            initMethod(textCompList[i]);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            let domTree = dom.childNodes;\r\n            let cleanHTML = '';\r\n            const requireFormat = this._isFormatData(domTree);\r\n\r\n            if(requireFormat) {\r\n                domTree = this._editFormat(dom).childNodes;\r\n            }\r\n\r\n            for (let i = 0, len = domTree.length, t; i < len; i++) {\r\n                t = domTree[i];\r\n                if (this.__allowedScriptRegExp.test(t.nodeName)) {\r\n                    cleanHTML += t.outerHTML;\r\n                    continue;\r\n                }\r\n                cleanHTML += this._makeLine(t, requireFormat);\r\n            }\r\n\r\n            cleanHTML = util.htmlRemoveWhiteSpace(cleanHTML);\r\n            if (!cleanHTML) {\r\n                cleanHTML = html;\r\n            } else {\r\n                if (whitelist) cleanHTML = cleanHTML.replace(typeof whitelist === 'string' ? util.createTagsWhitelist(whitelist) : whitelist, '');\r\n                if (blacklist) cleanHTML = cleanHTML.replace(typeof blacklist === 'string' ? util.createTagsBlacklist(blacklist) : blacklist, '');\r\n            }\r\n\r\n            return this._tagConvertor(cleanHTML);\r\n        },\r\n\r\n        /**\r\n         * @description Converts contents into a format that can be placed in an editor\r\n         * @param {String} contents contents\r\n         * @returns {String}\r\n         */\r\n        convertContentsForEditor: function (contents) {\r\n            contents = this._deleteDisallowedTags(this._parser.parseFromString(util.htmlCompress(contents), 'text/html').body.innerHTML).replace(/(<[a-zA-Z0-9\\-]+)[^>]*(?=>)/g, this._cleanTags.bind(this, true));\r\n            const dom = _d.createRange().createContextualFragment(contents);\r\n\r\n            try {\r\n                util._consistencyCheckOfHTML(dom, this._htmlCheckWhitelistRegExp, this._htmlCheckBlacklistRegExp, this._classNameFilter);\r\n            } catch (error) {\r\n                console.warn('[SUNEDITOR.convertContentsForEditor.consistencyCheck.fail] ' + error);\r\n            }\r\n\r\n            if (this.managedTagsInfo && this.managedTagsInfo.query) {\r\n                const textCompList = dom.querySelectorAll(this.managedTagsInfo.query);\r\n                for (let i = 0, len = textCompList.length, initMethod, classList; i < len; i++) {\r\n                    classList = [].slice.call(textCompList[i].classList);\r\n                    for (let c = 0, cLen = classList.length; c < cLen; c++) {\r\n                        initMethod = this.managedTagsInfo.map[classList[c]];\r\n                        if (initMethod) {\r\n                            initMethod(textCompList[i]);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            \r\n            const domTree = dom.childNodes;\r\n            let cleanHTML = '', p = null;\r\n            for (let i = 0, t; i < domTree.length; i++) {\r\n                t = domTree[i];\r\n\r\n                if (this.__allowedScriptRegExp.test(t.nodeName)) {\r\n                    cleanHTML += t.outerHTML;\r\n                    continue;\r\n                }\r\n\r\n                if (!util.isFormatElement(t) && !util.isRangeFormatElement(t) && !util.isComponent(t) && !util.isMedia(t) && t.nodeType !== 8 && !/__se__tag/.test(t.className)) {\r\n                    if (!p) p = util.createElement(options.defaultTag);\r\n                    p.appendChild(t);\r\n                    i--;\r\n                    if (domTree[i + 1] && !util.isFormatElement(domTree[i + 1])) {\r\n                        continue;\r\n                    } else {\r\n                        t = p;\r\n                        p = null;\r\n                    }\r\n                }\r\n\r\n                if (p) {\r\n                    cleanHTML += this._makeLine(p, true);\r\n                    p = null;\r\n                }\r\n                cleanHTML += this._makeLine(t, true);\r\n            }\r\n            if (p) cleanHTML += this._makeLine(p, true);\r\n\r\n            if (cleanHTML.length === 0) return '<' + options.defaultTag + '><br></' + options.defaultTag + '>';\r\n\r\n            cleanHTML = util.htmlRemoveWhiteSpace(cleanHTML);\r\n            return this._tagConvertor(cleanHTML);\r\n        },\r\n\r\n        /**\r\n         * @description Converts wysiwyg area element into a format that can be placed in an editor of code view mode\r\n         * @param {Element|String} html WYSIWYG element (context.element.wysiwyg) or HTML string.\r\n         * @param {Boolean} comp If true, does not line break and indentation of tags.\r\n         * @returns {String}\r\n         */\r\n        convertHTMLForCodeView: function (html, comp) {\r\n            let returnHTML = '';\r\n            const wRegExp = _w.RegExp;\r\n            const brReg = new wRegExp('^(BLOCKQUOTE|PRE|TABLE|THEAD|TBODY|TR|TH|TD|OL|UL|IMG|IFRAME|VIDEO|AUDIO|FIGURE|FIGCAPTION|HR|BR|CANVAS|SELECT)$', 'i');\r\n            const wDoc = typeof html === 'string' ? _d.createRange().createContextualFragment(html) : html;\r\n            const isFormat = function (current) { return this.isFormatElement(current) || this.isComponent(current); }.bind(util);\r\n            const brChar = comp ? '' : '\\n';\r\n\r\n            let indentSize = comp ? 0 : this._variable.codeIndent * 1;\r\n            indentSize = indentSize > 0 ? new _w.Array(indentSize + 1).join(' ') : '';\r\n\r\n            (function recursionFunc (element, indent) {\r\n                const children = element.childNodes;\r\n                const elementRegTest = brReg.test(element.nodeName);\r\n                const elementIndent = (elementRegTest ? indent : '');\r\n\r\n                for (let i = 0, len = children.length, node, br, lineBR, nodeRegTest, tag, tagIndent; i < len; i++) {\r\n                    node = children[i];\r\n                    nodeRegTest = brReg.test(node.nodeName);\r\n                    br = nodeRegTest ? brChar : '';\r\n                    lineBR = isFormat(node) && !elementRegTest && !/^(TH|TD)$/i.test(element.nodeName) ? brChar : '';\r\n\r\n                    if (node.nodeType === 8) {\r\n                        returnHTML += '\\n<!-- ' + node.textContent.trim() + ' -->' + br;\r\n                        continue;\r\n                    }\r\n                    if (node.nodeType === 3) {\r\n                        if (!util.isList(node.parentElement)) returnHTML += util._HTMLConvertor(/^\\n+$/.test(node.data) ? '' : node.data);\r\n                        continue;\r\n                    }\r\n                    if (node.childNodes.length === 0) {\r\n                        returnHTML += (/^HR$/i.test(node.nodeName) ? brChar : '') + (/^PRE$/i.test(node.parentElement.nodeName) && /^BR$/i.test(node.nodeName) ? '' : elementIndent) + node.outerHTML + br;\r\n                        continue;\r\n                    }\r\n\r\n                    if (!node.outerHTML) { // IE\r\n                        returnHTML += new _w.XMLSerializer().serializeToString(node);\r\n                    } else {\r\n                        tag = node.nodeName.toLowerCase();\r\n                        tagIndent = elementIndent || nodeRegTest ? indent : '';\r\n                        returnHTML += (lineBR || (elementRegTest ? '' : br)) + tagIndent + node.outerHTML.match(wRegExp('<' + tag + '[^>]*>', 'i'))[0] + br;\r\n                        recursionFunc(node, indent + indentSize, '');\r\n                        returnHTML += (/\\n$/.test(returnHTML) ? tagIndent : '') + '</' + tag + '>' + (lineBR || br || elementRegTest ? brChar : '' || /^(TH|TD)$/i.test(node.nodeName) ? brChar : '');\r\n                    }\r\n                }\r\n            }(wDoc, ''));\r\n\r\n            return returnHTML.trim() + brChar;\r\n        },\r\n\r\n        /**\r\n         * @description Add an event to document.\r\n         * When created as an Iframe, the same event is added to the document in the Iframe.\r\n         * @param {String} type Event type\r\n         * @param {Function} listener Event listener\r\n         * @param {Boolean} useCapture Use event capture\r\n         */\r\n        addDocEvent: function (type, listener, useCapture) {\r\n            _d.addEventListener(type, listener, useCapture);\r\n            if (options.iframe) {\r\n                this._wd.addEventListener(type, listener);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Remove events from document.\r\n         * When created as an Iframe, the event of the document inside the Iframe is also removed.\r\n         * @param {String} type Event type\r\n         * @param {Function} listener Event listener\r\n         */\r\n        removeDocEvent: function (type, listener) {\r\n            _d.removeEventListener(type, listener);\r\n            if (options.iframe) {\r\n                this._wd.removeEventListener(type, listener);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description The current number of characters is counted and displayed.\r\n         * @param {String} inputText Text added.\r\n         * @returns {Boolean}\r\n         * @private\r\n         */\r\n        _charCount: function (inputText) {\r\n            const maxCharCount = options.maxCharCount;\r\n            const countType = options.charCounterType;\r\n            let nextCharCount = 0;\r\n            if (!!inputText) nextCharCount = this.getCharLength(inputText, countType);\r\n\r\n            this._setCharCount();\r\n\r\n            if (maxCharCount > 0) {\r\n                let over = false;\r\n                const count = functions.getCharCount(countType);\r\n                \r\n                if (count > maxCharCount) {\r\n                    over = true;\r\n                    if (nextCharCount > 0) {\r\n                        this._editorRange();\r\n                        const range = this.getRange();\r\n                        const endOff = range.endOffset - 1;\r\n                        const text = this.getSelectionNode().textContent;\r\n                        const slicePosition = range.endOffset - (count - maxCharCount);\r\n    \r\n                        this.getSelectionNode().textContent = text.slice(0, slicePosition < 0 ? 0 : slicePosition) + text.slice(range.endOffset, text.length);\r\n                        this.setRange(range.endContainer, endOff, range.endContainer, endOff);\r\n                    }\r\n                } else if ((count + nextCharCount) > maxCharCount) {\r\n                    over = true;\r\n                }\r\n\r\n                if (over) {\r\n                    this._callCounterBlink();\r\n                    if (nextCharCount > 0) return false;\r\n                }\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * @description When \"element\" is added, if it is greater than \"options.maxCharCount\", false is returned.\r\n         * @param {Node|String} element Element node or String.\r\n         * @param {String|null} charCounterType charCounterType. If it is null, the options.charCounterType\r\n         * @returns {Boolean}\r\n         */\r\n        checkCharCount: function (element, charCounterType) {\r\n            if (options.maxCharCount) {\r\n                const countType = charCounterType || options.charCounterType;\r\n                const length = this.getCharLength((typeof element === 'string' ? element : (this._charTypeHTML && element.nodeType === 1) ? element.outerHTML : element.textContent), countType);\r\n                if (length > 0 && length + functions.getCharCount(countType) > options.maxCharCount) {\r\n                    this._callCounterBlink();\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * @description Get the length of the content.\r\n         * Depending on the option, the length of the character is taken. (charCounterType)\r\n         * @param {String} content Content to count\r\n         * @param {String} charCounterType options.charCounterType\r\n         * @returns {Number}\r\n         */\r\n        getCharLength: function (content, charCounterType) {\r\n            return /byte/.test(charCounterType) ? util.getByteLength(content) : content.length;\r\n        },\r\n\r\n        /**\r\n         * @description Reset buttons of the responsive toolbar.\r\n         */\r\n        resetResponsiveToolbar: function () {\r\n            core.controllersOff();\r\n\r\n            const responsiveSize = event._responsiveButtonSize;\r\n            if (responsiveSize) {\r\n                let w = 0;\r\n                if ((core._isBalloon || core._isInline) && options.toolbarWidth === 'auto') {\r\n                    w = context.element.topArea.offsetWidth;\r\n                } else {\r\n                    w = context.element.toolbar.offsetWidth;\r\n                }\r\n\r\n                let responsiveWidth = 'default';\r\n                for (let i = 1, len = responsiveSize.length; i < len; i++) {\r\n                    if (w < responsiveSize[i]) {\r\n                        responsiveWidth = responsiveSize[i] + '';\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (event._responsiveCurrentSize !== responsiveWidth) {\r\n                    event._responsiveCurrentSize = responsiveWidth;\r\n                    functions.setToolbarButtons(event._responsiveButtons[responsiveWidth]);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Set the char count to charCounter element textContent.\r\n         * @private\r\n         */\r\n        _setCharCount: function () {\r\n            if (context.element.charCounter) {\r\n                _w.setTimeout(function () { context.element.charCounter.textContent = functions.getCharCount(options.charCounterType); });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description The character counter blinks.\r\n         * @private\r\n         */\r\n        _callCounterBlink: function () {\r\n            const charWrapper = context.element.charWrapper;\r\n            if (charWrapper && !util.hasClass(charWrapper, 'se-blink')) {\r\n                util.addClass(charWrapper, 'se-blink');\r\n                _w.setTimeout(function () {\r\n                    util.removeClass(charWrapper, 'se-blink');\r\n                }, 600);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Check the components such as image and video and modify them according to the format.\r\n         * @private\r\n         */\r\n        _checkComponents: function () {\r\n            for (let i = 0, len = this._fileInfoPluginsCheck.length; i < len; i++) {\r\n                this._fileInfoPluginsCheck[i]();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Initialize the information of the components.\r\n         * @private\r\n         */\r\n        _resetComponents: function () {\r\n            for (let i = 0, len = this._fileInfoPluginsReset.length; i < len; i++) {\r\n                this._fileInfoPluginsReset[i]();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Set method in the code view area\r\n         * @param {String} value HTML string\r\n         * @private\r\n         */\r\n        _setCodeView: function (value) {\r\n            if (options.codeMirrorEditor) {\r\n                options.codeMirrorEditor.getDoc().setValue(value);\r\n            } else {\r\n                context.element.code.value = value;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Get method in the code view area\r\n         * @private\r\n         */\r\n        _getCodeView: function () {\r\n            return options.codeMirrorEditor ? options.codeMirrorEditor.getDoc().getValue() : context.element.code.value;\r\n        },\r\n\r\n        /**\r\n         * @description remove class, display text.\r\n         * @param {Array|null} ignoredList Igonred button list\r\n         */\r\n        _setKeyEffect: function (ignoredList) {\r\n            const commandMap = this.commandMap;\r\n            const activePlugins = this.activePlugins;\r\n\r\n            for (let key in commandMap) {\r\n                if (ignoredList.indexOf(key) > -1 || !util.hasOwn(commandMap, key)) continue;\r\n                if (activePlugins.indexOf(key) > -1) {\r\n                    plugins[key].active.call(this, null);\r\n                } else if (commandMap.OUTDENT && /^OUTDENT$/i.test(key)) {\r\n                    if (!util.isImportantDisabled(commandMap.OUTDENT)) commandMap.OUTDENT.setAttribute('disabled', true);\r\n                } else if (commandMap.INDENT && /^INDENT$/i.test(key)) {\r\n                    if (!util.isImportantDisabled(commandMap.INDENT)) commandMap.INDENT.removeAttribute('disabled');\r\n                } else {\r\n                    util.removeClass(commandMap[key], 'active');\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Initializ core variable\r\n         * @param {Boolean} reload Is relooad?\r\n         * @param {String} _initHTML initial html string\r\n         * @private\r\n         */\r\n        _init: function (reload, _initHTML) {\r\n            const wRegExp = _w.RegExp;\r\n            this._ww = options.iframe ? context.element.wysiwygFrame.contentWindow : _w;\r\n            this._wd = _d;\r\n            this._charTypeHTML = options.charCounterType === 'byte-html';\r\n            this.wwComputedStyle = _w.getComputedStyle(context.element.wysiwyg);\r\n            this._editorHeight = context.element.wysiwygFrame.offsetHeight;\r\n            this._editorHeightPadding = util.getNumber(this.wwComputedStyle.getPropertyValue('padding-top')) + util.getNumber(this.wwComputedStyle.getPropertyValue('padding-bottom'));\r\n            this._classNameFilter = function (v) {\r\n                return this.test(v) ? v : '';\r\n            }.bind(options.allowedClassNames);\r\n\r\n            const sPrefix = (options.__allowedScriptTag ? '' : 'script|');\r\n            this.__scriptTagRegExp = new wRegExp('<(script)[^>]*>([\\\\s\\\\S]*?)<\\\\/\\\\1>|<script[^>]*\\\\/?>', 'gi');\r\n            this.__disallowedTagsRegExp = new wRegExp('<(' + sPrefix + 'style)[^>]*>([\\\\s\\\\S]*?)<\\\\/\\\\1>|<(' + sPrefix + 'style)[^>]*\\\\/?>', 'gi');\r\n            this.__disallowedTagNameRegExp = new wRegExp('^(' + sPrefix + 'meta|link|style|[a-z]+\\:[a-z]+)$', 'i');\r\n            this.__allowedScriptRegExp = new wRegExp('^' + (options.__allowedScriptTag ? 'script' : '') + '$', 'i');\r\n\r\n            if (!options.iframe && typeof _w.ShadowRoot === 'function') {\r\n                let child = context.element.wysiwygFrame;\r\n                while (child) {\r\n                    if (child.shadowRoot) {\r\n                        this._shadowRoot = child.shadowRoot;\r\n                        break;\r\n                    } else if (child instanceof _w.ShadowRoot) {\r\n                        this._shadowRoot = child;\r\n                        break;\r\n                    }\r\n                    child = child.parentNode;\r\n                }\r\n                if (this._shadowRoot) this._shadowRootControllerEventTarget = [];\r\n            }\r\n\r\n            // set disallow text nodes\r\n            const disallowTextTags = _w.Object.keys(options._textTagsMap);\r\n            const allowTextTags = !options.addTagsWhitelist ? [] : options.addTagsWhitelist.split('|').filter(function (v) { return /b|i|ins|s|strike/i.test(v); });\r\n            for (let i = 0; i < allowTextTags.length; i++) {\r\n                disallowTextTags.splice(disallowTextTags.indexOf(allowTextTags[i].toLowerCase()), 1);\r\n            }\r\n            this._disallowedTextTagsRegExp = disallowTextTags.length === 0 ? null : new wRegExp('(<\\\\/?)(' + disallowTextTags.join('|') + ')\\\\b\\\\s*([^>^<]+)?\\\\s*(?=>)', 'gi');\r\n\r\n            // set whitelist\r\n            const getRegList = function (str, str2) { return !str ? '^' : (str === '*' ? '[a-z-]+' : (!str2 ? str : (str + '|' + str2))); };\r\n            // tags\r\n            const defaultAttr = 'contenteditable|colspan|rowspan|target|href|download|rel|src|alt|class|type|controls|origin-size';\r\n            const dataAttr = 'data-format|data-size|data-file-size|data-file-name|data-origin|data-align|data-image-link|data-rotate|data-proportion|data-percentage|data-exp|data-font-size';\r\n            this._allowHTMLComments = options._editorTagsWhitelist.indexOf('//') > -1 || options._editorTagsWhitelist === '*';\r\n            // html check\r\n            this._htmlCheckWhitelistRegExp = new wRegExp('^(' + getRegList(options._editorTagsWhitelist.replace('|//', ''), '') + ')$', 'i');\r\n            this._htmlCheckBlacklistRegExp = new wRegExp('^(' + (options.tagsBlacklist || '^') + ')$', 'i');\r\n            // tags\r\n            this.editorTagsWhitelistRegExp = util.createTagsWhitelist(getRegList(options._editorTagsWhitelist.replace('|//', '|<!--|-->'), ''));\r\n            this.editorTagsBlacklistRegExp = util.createTagsBlacklist(options.tagsBlacklist.replace('|//', '|<!--|-->'));\r\n            // paste tags\r\n            this.pasteTagsWhitelistRegExp = util.createTagsWhitelist(getRegList(options.pasteTagsWhitelist, ''));\r\n            this.pasteTagsBlacklistRegExp = util.createTagsBlacklist(options.pasteTagsBlacklist);\r\n            // attributes\r\n            const regEndStr = '\\\\s*=\\\\s*(\\\")[^\\\"]*\\\\1';\r\n            const _wAttr = options.attributesWhitelist;\r\n            let tagsAttr = {};\r\n            let allAttr = '';\r\n            if (!!_wAttr) {\r\n                for (let k in _wAttr) {\r\n                    if (!util.hasOwn(_wAttr, k) || /^on[a-z]+$/i.test(_wAttr[k])) continue;\r\n                    if (k === 'all') {\r\n                        allAttr = getRegList(_wAttr[k], defaultAttr);\r\n                    } else {\r\n                        tagsAttr[k] = new wRegExp('\\\\s(?:' + getRegList(_wAttr[k], '') + ')' + regEndStr, 'ig');\r\n                    }\r\n                }\r\n            }\r\n            \r\n            this._attributesWhitelistRegExp = new wRegExp('\\\\s(?:' + (allAttr || defaultAttr + '|' + dataAttr) + ')' + regEndStr, 'ig');\r\n            this._attributesWhitelistRegExp_all_data = new wRegExp('\\\\s(?:' + ((allAttr || defaultAttr) + '|data-[a-z0-9\\\\-]+') + ')' + regEndStr, 'ig');\r\n            this._attributesTagsWhitelist = tagsAttr;\r\n\r\n            // blacklist\r\n            const _bAttr = options.attributesBlacklist;\r\n            tagsAttr = {};\r\n            allAttr = '';\r\n            if (!!_bAttr) {\r\n                for (let k in _bAttr) {\r\n                    if (!util.hasOwn(_bAttr, k)) continue;\r\n                    if (k === 'all') {\r\n                        allAttr = getRegList(_bAttr[k], '');\r\n                    } else {\r\n                        tagsAttr[k] = new wRegExp('\\\\s(?:' + getRegList(_bAttr[k], '') + ')' + regEndStr, 'ig');\r\n                    }\r\n                }\r\n            }\r\n\r\n            this._attributesBlacklistRegExp = new wRegExp('\\\\s(?:' + (allAttr || '^') + ')' + regEndStr, 'ig');\r\n            this._attributesTagsBlacklist = tagsAttr;\r\n\r\n            // set modes\r\n            this._isInline = /inline/i.test(options.mode);\r\n            this._isBalloon = /balloon|balloon-always/i.test(options.mode);\r\n            this._isBalloonAlways = /balloon-always/i.test(options.mode);\r\n\r\n            // caching buttons\r\n            this._cachingButtons();\r\n\r\n            // file components\r\n            this._fileInfoPluginsCheck = [];\r\n            this._fileInfoPluginsReset = [];\r\n\r\n            // text components\r\n            this.managedTagsInfo = { query: '', map: {} };\r\n            const managedClass = [];\r\n\r\n            // Command and file plugins registration\r\n            this.activePlugins = [];\r\n            this._fileManager.tags = [];\r\n            this._fileManager.pluginMap = {};\r\n\r\n            let filePluginRegExp = [];\r\n            let plugin, button;\r\n            for (let key in plugins) {\r\n                if (!util.hasOwn(plugins, key)) continue;\r\n                plugin = plugins[key];\r\n                button = pluginCallButtons[key];\r\n                if ((plugin.active || plugin.action) && button) {\r\n                    this.callPlugin(key, null, button);\r\n                }\r\n                if (typeof plugin.checkFileInfo === 'function' && typeof plugin.resetFileInfo === 'function') {\r\n                    this.callPlugin(key, null, button);\r\n                    this._fileInfoPluginsCheck.push(plugin.checkFileInfo.bind(this));\r\n                    this._fileInfoPluginsReset.push(plugin.resetFileInfo.bind(this));\r\n                }\r\n                if (_w.Array.isArray(plugin.fileTags)) {\r\n                    const fileTags = plugin.fileTags;\r\n                    this.callPlugin(key, null, button);\r\n                    this._fileManager.tags = this._fileManager.tags.concat(fileTags);\r\n                    filePluginRegExp.push(key);\r\n                    for (let tag = 0, tLen = fileTags.length; tag < tLen; tag++) {\r\n                        this._fileManager.pluginMap[fileTags[tag].toLowerCase()] = key;\r\n                    }\r\n                }\r\n                if (plugin.managedTags) {\r\n                    const info = plugin.managedTags();\r\n                    managedClass.push('.' + info.className);\r\n                    this.managedTagsInfo.map[info.className] = info.method.bind(this);\r\n                }\r\n            }\r\n\r\n            this.managedTagsInfo.query = managedClass.toString();\r\n            this._fileManager.queryString = this._fileManager.tags.join(',');\r\n            this._fileManager.regExp = new wRegExp('^(' +  (this._fileManager.tags.join('|') || '^') + ')$', 'i');\r\n            this._fileManager.pluginRegExp = new wRegExp('^(' +  (filePluginRegExp.length === 0 ? '^' : filePluginRegExp.join('|')) + ')$', 'i');\r\n            \r\n            // cache editor's element\r\n            this._variable._originCssText = context.element.topArea.style.cssText;\r\n            this._placeholder = context.element.placeholder;\r\n            this._lineBreaker = context.element.lineBreaker;\r\n            this._lineBreakerButton = this._lineBreaker.querySelector('button');\r\n\r\n            // Excute history function\r\n            this.history = _history(this, this._onChange_historyStack.bind(this));\r\n\r\n            // register notice module\r\n            this.addModule([_notice]);\r\n\r\n            // Init, validate\r\n            if (options.iframe) {\r\n                this._wd = context.element.wysiwygFrame.contentDocument;\r\n                context.element.wysiwyg = this._wd.body;\r\n                if (options._editorStyles.editor) context.element.wysiwyg.style.cssText = options._editorStyles.editor;\r\n                if (options.height === 'auto') this._iframeAuto = this._wd.body;\r\n            }\r\n            \r\n            this._initWysiwygArea(reload, _initHTML);\r\n        },\r\n\r\n        /**\r\n         * @description Caching basic buttons to use\r\n         * @private\r\n         */\r\n        _cachingButtons: function () {\r\n            this.codeViewDisabledButtons = context.element._buttonTray.querySelectorAll('.se-menu-list button[data-display]:not([class~=\"se-code-view-enabled\"]):not([data-display=\"MORE\"])');\r\n            this.resizingDisabledButtons = context.element._buttonTray.querySelectorAll('.se-menu-list button[data-display]:not([class~=\"se-resizing-enabled\"]):not([data-display=\"MORE\"])');\r\n\r\n            const tool = context.tool;\r\n            const commandMap = this.commandMap;\r\n            commandMap.INDENT = tool.indent;\r\n            commandMap.OUTDENT = tool.outdent;\r\n            commandMap[options.textTags.bold.toUpperCase()] = tool.bold;\r\n            commandMap[options.textTags.underline.toUpperCase()] = tool.underline;\r\n            commandMap[options.textTags.italic.toUpperCase()] = tool.italic;\r\n            commandMap[options.textTags.strike.toUpperCase()] = tool.strike;\r\n            commandMap[options.textTags.sub.toUpperCase()] = tool.subscript;\r\n            commandMap[options.textTags.sup.toUpperCase()] = tool.superscript;\r\n            \r\n            this._styleCommandMap = {\r\n                fullScreen: tool.fullScreen,\r\n                showBlocks: tool.showBlocks,\r\n                codeView: tool.codeView\r\n            };\r\n\r\n            this._saveButtonStates();\r\n        },\r\n\r\n        /**\r\n         * @description Initializ wysiwyg area (Only called from core._init)\r\n         * @param {Boolean} reload Is relooad?\r\n         * @param {String} _initHTML initial html string\r\n         * @private\r\n         */\r\n        _initWysiwygArea: function (reload, _initHTML) {\r\n            context.element.wysiwyg.innerHTML = reload ? _initHTML : this.convertContentsForEditor((typeof _initHTML === 'string' ? _initHTML : /^TEXTAREA$/i.test(context.element.originElement.nodeName) ? context.element.originElement.value : context.element.originElement.innerHTML) || '');\r\n        },\r\n\r\n        /**\r\n         * @description Called when there are changes to tags in the wysiwyg region.\r\n         * @private\r\n         */\r\n        _resourcesStateChange: function () {\r\n            this._iframeAutoHeight();\r\n            this._checkPlaceholder();\r\n        },\r\n\r\n        /**\r\n         * @description Called when after execute \"history.push\"\r\n         * @private\r\n         */\r\n        _onChange_historyStack: function () {\r\n            if (this.hasFocus) event._applyTagEffects();\r\n            this._variable.isChanged = true;\r\n            if (context.tool.save) context.tool.save.removeAttribute('disabled');\r\n            // user event\r\n            if (functions.onChange) functions.onChange(this.getContents(true), this);\r\n            if (context.element.toolbar.style.display === 'block') event._showToolbarBalloon();\r\n        },\r\n\r\n        /**\r\n         * @description Modify the height value of the iframe when the height of the iframe is automatic.\r\n         * @private\r\n         */\r\n        _iframeAutoHeight: function () {\r\n            if (this._iframeAuto) {\r\n                _w.setTimeout(function () { \r\n                    const h = core._iframeAuto.offsetHeight;\r\n                    context.element.wysiwygFrame.style.height = h + 'px';\r\n                    if (!util.isResizeObserverSupported) core.__callResizeFunction(h, null);\r\n                });\r\n            } else if (!util.isResizeObserverSupported) {\r\n                core.__callResizeFunction(context.element.wysiwygFrame.offsetHeight, null);\r\n            }\r\n        },\r\n\r\n        __callResizeFunction: function (h, resizeObserverEntry) {\r\n            h = h === -1 ? (resizeObserverEntry.borderBoxSize && resizeObserverEntry.borderBoxSize[0] ? resizeObserverEntry.borderBoxSize[0].blockSize : (resizeObserverEntry.contentRect.height + this._editorHeightPadding)) : h;\r\n            if (this._editorHeight !== h) {\r\n                if (typeof functions.onResizeEditor === 'function') functions.onResizeEditor(h, this._editorHeight, core, resizeObserverEntry);\r\n                this._editorHeight = h;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Set display property when there is placeholder.\r\n         * @private\r\n         */\r\n        _checkPlaceholder: function () {\r\n            if (this._placeholder) {\r\n                if (this._variable.isCodeView) {\r\n                    this._placeholder.style.display = 'none';\r\n                    return;\r\n                }\r\n\r\n                const wysiwyg = context.element.wysiwyg;\r\n                if (!util.onlyZeroWidthSpace(wysiwyg.textContent) || wysiwyg.querySelector(util._allowedEmptyNodeList) || (wysiwyg.innerText.match(/\\n/g) || '').length > 1) {\r\n                    this._placeholder.style.display = 'none';\r\n                } else {\r\n                    this._placeholder.style.display = 'block';\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description If there is no default format, add a format and move \"selection\".\r\n         * @param {String|null} formatName Format tag name (default: 'P')\r\n         * @returns {undefined|null}\r\n         * @private\r\n         */\r\n        _setDefaultFormat: function (formatName) {\r\n            if (this._fileManager.pluginRegExp.test(this.currentControllerName)) return;\r\n\r\n            const range = this.getRange();\r\n            const commonCon = range.commonAncestorContainer;\r\n            const startCon = range.startContainer;\r\n            const rangeEl = util.getRangeFormatElement(commonCon, null);\r\n            let focusNode, offset, format;\r\n\r\n            const fileComponent = util.getParentElement(commonCon, util.isComponent);\r\n            if (fileComponent && !util.isTable(fileComponent)) {\r\n                return;\r\n            } else if (commonCon.nodeType === 1 && commonCon.getAttribute('data-se-embed') === 'true') {\r\n                let el = commonCon.nextElementSibling;\r\n                if (!util.isFormatElement(el)) el = this.appendFormatTag(commonCon, options.defaultTag);\r\n                this.setRange(el.firstChild, 0, el.firstChild, 0);\r\n                return;\r\n            }\r\n\r\n            if ((util.isRangeFormatElement(startCon) || util.isWysiwygDiv(startCon)) && (util.isComponent(startCon.children[range.startOffset]) || util.isComponent(startCon.children[range.startOffset - 1]))) return;\r\n            if (util.getParentElement(commonCon, util.isNotCheckingNode)) return null;\r\n\r\n            if (rangeEl) {\r\n                format = util.createElement(formatName || options.defaultTag);\r\n                format.innerHTML = rangeEl.innerHTML;\r\n                if (format.childNodes.length === 0) format.innerHTML = util.zeroWidthSpace;\r\n\r\n                rangeEl.innerHTML = format.outerHTML;\r\n                format = rangeEl.firstChild;\r\n                focusNode = util.getEdgeChildNodes(format, null).sc;\r\n\r\n                if (!focusNode) {\r\n                    focusNode = util.createTextNode(util.zeroWidthSpace);\r\n                    format.insertBefore(focusNode, format.firstChild);\r\n                }\r\n                \r\n                offset = focusNode.textContent.length;\r\n                this.setRange(focusNode, offset, focusNode, offset);\r\n                return;\r\n            }\r\n\r\n            if(util.isRangeFormatElement(commonCon) && (commonCon.childNodes.length <= 1)) {\r\n                let br = null;\r\n                if (commonCon.childNodes.length === 1 && util.isBreak(commonCon.firstChild)) {\r\n                    br = commonCon.firstChild;\r\n                } else {\r\n                    br = util.createTextNode(util.zeroWidthSpace);\r\n                    commonCon.appendChild(br);\r\n                }\r\n\r\n                this.setRange(br, 1, br, 1);\r\n                return;\r\n            }\r\n\r\n            this.execCommand('formatBlock', false, (formatName || options.defaultTag));\r\n            focusNode = util.getEdgeChildNodes(commonCon, commonCon);\r\n            focusNode = focusNode ? focusNode.ec : commonCon;\r\n\r\n            format = util.getFormatElement(focusNode, null);\r\n            if (!format) {\r\n                this.removeRange();\r\n                this._editorRange();\r\n                return;\r\n            }\r\n            \r\n            if (util.isBreak(format.nextSibling)) util.removeItem(format.nextSibling);\r\n            if (util.isBreak(format.previousSibling)) util.removeItem(format.previousSibling);\r\n            if (util.isBreak(focusNode)) {\r\n                const zeroWidth = util.createTextNode(util.zeroWidthSpace);\r\n                focusNode.parentNode.insertBefore(zeroWidth, focusNode);\r\n                focusNode = zeroWidth;\r\n            }\r\n\r\n            this.effectNode = null;\r\n            this.nativeFocus();\r\n        },\r\n\r\n        /**\r\n         * @description Initialization after \"setOptions\"\r\n         * @param {Object} el context.element\r\n         * @param {String} _initHTML Initial html string\r\n         * @private\r\n         */\r\n        _setOptionsInit: function (el, _initHTML) {\r\n            this.context = context = _Context(el.originElement, this._getConstructed(el), options);\r\n            this._componentsInfoReset = true;\r\n            this._editorInit(true, _initHTML);\r\n        },\r\n\r\n        /**\r\n         * @description Initializ editor\r\n         * @param {Boolean} reload Is relooad?\r\n         * @param {String} _initHTML initial html string\r\n         * @private\r\n         */\r\n        _editorInit: function (reload, _initHTML) {\r\n            // initialize core and add event listeners\r\n            this._init(reload, _initHTML);\r\n            event._addEvent();\r\n            this._setCharCount();\r\n            event._offStickyToolbar();\r\n            event.onResize_window();\r\n\r\n            // toolbar visibility\r\n            context.element.toolbar.style.visibility = '';\r\n            // wisywig attributes\r\n            const attr = options.frameAttrbutes;\r\n            for (let k in attr) {\r\n                context.element.wysiwyg.setAttribute(k, attr[k]);\r\n            }\r\n\r\n            this._checkComponents();\r\n            this._componentsInfoInit = false;\r\n            this._componentsInfoReset = false;\r\n\r\n            this.history.reset(true);\r\n            \r\n            _w.setTimeout(function () {\r\n                if (typeof core._resourcesStateChange !== 'function') return;\r\n\r\n                // observer\r\n                if (event._resizeObserver) event._resizeObserver.observe(context.element.wysiwygFrame);\r\n                if (event._toolbarObserver) event._toolbarObserver.observe(context.element._toolbarShadow);\r\n                // resource state\r\n                core._resourcesStateChange();\r\n                // user event\r\n                if (typeof functions.onload === 'function') functions.onload(core, reload);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * @description Create and return an object to cache the new context.\r\n         * @param {Element} contextEl context.element\r\n         * @returns {Object}\r\n         * @private\r\n         */\r\n        _getConstructed: function (contextEl) {\r\n            return {\r\n                _top: contextEl.topArea,\r\n                _relative: contextEl.relative,\r\n                _toolBar: contextEl.toolbar,\r\n                _toolbarShadow: contextEl._toolbarShadow,\r\n                _menuTray: contextEl._menuTray,\r\n                _editorArea: contextEl.editorArea,\r\n                _wysiwygArea: contextEl.wysiwygFrame,\r\n                _codeArea: contextEl.code,\r\n                _placeholder: contextEl.placeholder,\r\n                _resizingBar: contextEl.resizingBar,\r\n                _navigation: contextEl.navigation,\r\n                _charCounter: contextEl.charCounter,\r\n                _charWrapper: contextEl.charWrapper,\r\n                _loading: contextEl.loading,\r\n                _lineBreaker: contextEl.lineBreaker,\r\n                _lineBreaker_t: contextEl.lineBreaker_t,\r\n                _lineBreaker_b: contextEl.lineBreaker_b,\r\n                _resizeBack: contextEl.resizeBackground,\r\n                _stickyDummy: contextEl._stickyDummy,\r\n                _arrow: contextEl._arrow\r\n            };\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @description event function\r\n     */\r\n    const event = {\r\n        _IEisComposing: false, // In IE, there is no \"e.isComposing\" in the key-up event.\r\n        _lineBreakerBind: null,\r\n        _responsiveCurrentSize: 'default',\r\n        _responsiveButtonSize: null,\r\n        _responsiveButtons: null,\r\n        _cursorMoveKeyCode: new _w.RegExp('^(8|3[2-9]|40|46)$'),\r\n        _directionKeyCode: new _w.RegExp('^(8|13|3[2-9]|40|46)$'),\r\n        _nonTextKeyCode: new _w.RegExp('^(8|13|1[6-9]|20|27|3[3-9]|40|45|46|11[2-9]|12[0-3]|144|145)$'),\r\n        _historyIgnoreKeyCode: new _w.RegExp('^(1[6-9]|20|27|3[3-9]|40|45|11[2-9]|12[0-3]|144|145)$'),\r\n        _onButtonsCheck: new _w.RegExp('^(' + _w.Object.keys(options._textTagsMap).join('|') + ')$', 'i'),\r\n        _frontZeroWidthReg: new _w.RegExp(util.zeroWidthSpace + '+', ''),\r\n        _keyCodeShortcut: {\r\n            65: 'A',\r\n            66: 'B',\r\n            83: 'S',\r\n            85: 'U',\r\n            73: 'I',\r\n            89: 'Y',\r\n            90: 'Z',\r\n            219: '[',\r\n            221: ']'\r\n        },\r\n\r\n        _shortcutCommand: function (keyCode, shift) {\r\n            let command = null;\r\n            const keyStr = event._keyCodeShortcut[keyCode];\r\n\r\n            switch (keyStr) {\r\n                case 'A':\r\n                    command = 'selectAll';\r\n                    break;\r\n                case 'B':\r\n                    if (options.shortcutsDisable.indexOf('bold') === -1) {\r\n                        command = 'bold';\r\n                    }\r\n                    break;\r\n                case 'S':\r\n                    if (shift && options.shortcutsDisable.indexOf('strike') === -1) {\r\n                        command = 'strike';\r\n                    } else if (!shift && options.shortcutsDisable.indexOf('save') === -1) {\r\n                        command = 'save';\r\n                    }\r\n                    break;\r\n                case 'U':\r\n                    if (options.shortcutsDisable.indexOf('underline') === -1) {\r\n                        command = 'underline';\r\n                    }\r\n                    break;\r\n                case 'I':\r\n                    if (options.shortcutsDisable.indexOf('italic') === -1) {\r\n                        command = 'italic';\r\n                    }\r\n                    break;\r\n                case 'Z':\r\n                    if (options.shortcutsDisable.indexOf('undo') === -1) {\r\n                        if (shift) {\r\n                            command = 'redo';\r\n                        } else {\r\n                            command = 'undo';\r\n                        }\r\n                    }\r\n                    break;\r\n                case 'Y':\r\n                    if (options.shortcutsDisable.indexOf('undo') === -1) {\r\n                        command = 'redo';\r\n                    }\r\n                    break;\r\n                case '[':\r\n                    if (options.shortcutsDisable.indexOf('indent') === -1) {\r\n                        command = options.rtl ? 'indent' : 'outdent';\r\n                    }\r\n                    break;\r\n                case ']':\r\n                    if (options.shortcutsDisable.indexOf('indent') === -1) {\r\n                        command = options.rtl ? 'outdent' : 'indent';\r\n                    }\r\n                    break;\r\n            }\r\n\r\n            if (!command) return !!keyStr;\r\n\r\n            core.commandHandler(core.commandMap[command], command);\r\n            return true;\r\n        },\r\n\r\n        _applyTagEffects: function () {\r\n            let selectionNode = core.getSelectionNode();\r\n            if (selectionNode === core.effectNode) return;\r\n            core.effectNode = selectionNode;\r\n\r\n            const marginDir = options.rtl ? 'marginRight' : 'marginLeft';\r\n            const commandMap = core.commandMap;\r\n            const classOnCheck = event._onButtonsCheck;\r\n            const commandMapNodes = [];\r\n            const currentNodes = [];\r\n\r\n            const activePlugins = core.activePlugins;\r\n            const cLen = activePlugins.length;\r\n            let nodeName = '';\r\n\r\n            while (selectionNode.firstChild) {\r\n                selectionNode = selectionNode.firstChild;\r\n            }\r\n\r\n            for (let element = selectionNode; !util.isWysiwygDiv(element); element = element.parentNode) {\r\n                if (!element) break;\r\n                if (element.nodeType !== 1 || util.isBreak(element)) continue;\r\n                nodeName = element.nodeName.toUpperCase();\r\n                currentNodes.push(nodeName);\r\n\r\n                /* Active plugins */\r\n                if (!core.isReadOnly) {\r\n                    for (let c = 0, name; c < cLen; c++) {\r\n                        name = activePlugins[c];\r\n                        if (commandMapNodes.indexOf(name) === -1 && plugins[name].active.call(core, element)) {\r\n                            commandMapNodes.push(name);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (util.isFormatElement(element)) {\r\n                    /* Outdent */\r\n                    if (commandMapNodes.indexOf('OUTDENT') === -1 && commandMap.OUTDENT && !util.isImportantDisabled(commandMap.OUTDENT)) {\r\n                        if (util.isListCell(element) || (element.style[marginDir] && util.getNumber(element.style[marginDir], 0) > 0)) {\r\n                            commandMapNodes.push('OUTDENT');\r\n                            commandMap.OUTDENT.removeAttribute('disabled');\r\n                        }\r\n                    }\r\n\r\n                    /* Indent */\r\n                    if (commandMapNodes.indexOf('INDENT') === -1 && commandMap.INDENT && !util.isImportantDisabled(commandMap.INDENT)) {\r\n                        commandMapNodes.push('INDENT');\r\n                        if (util.isListCell(element) && !element.previousElementSibling) {\r\n                            commandMap.INDENT.setAttribute('disabled', true);\r\n                        } else {\r\n                            commandMap.INDENT.removeAttribute('disabled');\r\n                        }\r\n                    }\r\n\r\n                    continue;\r\n                }\r\n\r\n                /** default active buttons [strong, ins, em, del, sub, sup] */\r\n                if (classOnCheck && classOnCheck.test(nodeName)) {\r\n                    commandMapNodes.push(nodeName);\r\n                    util.addClass(commandMap[nodeName], 'active');\r\n                }\r\n            }\r\n\r\n            core._setKeyEffect(commandMapNodes);\r\n\r\n            /** save current nodes */\r\n            core._variable.currentNodes = currentNodes.reverse();\r\n            core._variable.currentNodesMap = commandMapNodes;\r\n\r\n            /**  Displays the current node structure to resizingBar */\r\n            if (options.showPathLabel) context.element.navigation.textContent = core._variable.currentNodes.join(' > ');\r\n        },\r\n\r\n        _buttonsEventHandler: function (e) {\r\n            let target = e.target;\r\n            if (core._bindControllersOff) e.stopPropagation();\r\n\r\n            if (/^(input|textarea|select|option)$/i.test(target.nodeName)) {\r\n                core._antiBlur = false;\r\n            } else {\r\n                e.preventDefault();\r\n            }\r\n\r\n            if (util.getParentElement(target, '.se-submenu')) {\r\n                e.stopPropagation();\r\n                core._notHideToolbar = true;\r\n            } else {\r\n                let command = target.getAttribute('data-command');\r\n                let className = target.className;\r\n    \r\n                while (!command && !/se-menu-list/.test(className) && !/sun-editor-common/.test(className)) {\r\n                    target = target.parentNode;\r\n                    command = target.getAttribute('data-command');\r\n                    className = target.className;\r\n                }\r\n    \r\n                if (command === core._submenuName || command === core._containerName) {\r\n                    e.stopPropagation();\r\n                }\r\n            }\r\n        },\r\n\r\n        onClick_toolbar: function (e) {\r\n            let target = e.target;\r\n            let display = target.getAttribute('data-display');\r\n            let command = target.getAttribute('data-command');\r\n            let className = target.className;\r\n            core.controllersOff();\r\n\r\n            while (target.parentNode && !command && !/se-menu-list/.test(className) && !/se-toolbar/.test(className)) {\r\n                target = target.parentNode;\r\n                command = target.getAttribute('data-command');\r\n                display = target.getAttribute('data-display');\r\n                className = target.className;\r\n            }\r\n\r\n            if (!command && !display) return;\r\n            if (target.disabled) return;\r\n\r\n            core.actionCall(command, display, target);\r\n        },\r\n\r\n        onMouseDown_wysiwyg: function (e) {\r\n            if (core.isReadOnly || util.isNonEditable(context.element.wysiwyg)) return;\r\n            if (util._isExcludeSelectionElement(e.target)) {\r\n                e.preventDefault();\r\n                return;\r\n            }\r\n\r\n            _w.setTimeout(core._editorRange.bind(core));\r\n\r\n            // user event\r\n            if (typeof functions.onMouseDown === 'function' && functions.onMouseDown(e, core) === false) return;\r\n            \r\n            const tableCell = util.getParentElement(e.target, util.isCell);\r\n            if (tableCell) {\r\n                const tablePlugin = core.plugins.table;\r\n                if (tablePlugin && tableCell !== tablePlugin._fixedCell && !tablePlugin._shift) {\r\n                    core.callPlugin('table', function () {\r\n                        tablePlugin.onTableCellMultiSelect.call(core, tableCell, false);\r\n                    }, null);\r\n                }\r\n            }\r\n\r\n            if (core._isBalloon) {\r\n                event._hideToolbar();\r\n            }\r\n        },\r\n\r\n        onClick_wysiwyg: function (e) {\r\n            const targetElement = e.target;\r\n\r\n            if (core.isReadOnly) {\r\n                e.preventDefault();\r\n                if (util.isAnchor(targetElement)){\r\n                    _w.open(targetElement.href, targetElement.target);\r\n                }\r\n                return false;\r\n            }\r\n\r\n            if (util.isNonEditable(context.element.wysiwyg)) return;\r\n\r\n            // user event\r\n            if (typeof functions.onClick === 'function' && functions.onClick(e, core) === false) return;\r\n\r\n            const fileComponentInfo = core.getFileComponent(targetElement);\r\n            if (fileComponentInfo) {\r\n                e.preventDefault();\r\n                core.selectComponent(fileComponentInfo.target, fileComponentInfo.pluginName);\r\n                return;\r\n            }\r\n\r\n            const figcaption = util.getParentElement(targetElement, 'FIGCAPTION');\r\n            if (figcaption && util.isNonEditable(figcaption)) {\r\n                e.preventDefault();\r\n                figcaption.focus();\r\n\r\n                if (core._isInline && !core._inlineToolbarAttr.isShow) {\r\n                    event._showToolbarInline();\r\n\r\n                    const hideToolbar = function () {\r\n                        event._hideToolbar();\r\n                        figcaption.removeEventListener('blur', hideToolbar);\r\n                    };\r\n\r\n                    figcaption.addEventListener('blur', hideToolbar);\r\n                }\r\n            }\r\n\r\n            core._editorRange();\r\n\r\n            if (e.detail === 3) {\r\n                let range = core.getRange();\r\n                if (util.isFormatElement(range.endContainer) && range.endOffset === 0) {\r\n                    range = core.setRange(range.startContainer, range.startOffset, range.startContainer, range.startContainer.length);\r\n                    core._rangeInfo(range, core.getSelection());\r\n                }\r\n            }\r\n\r\n            const selectionNode = core.getSelectionNode();\r\n            const formatEl = util.getFormatElement(selectionNode, null);\r\n            const rangeEl = util.getRangeFormatElement(selectionNode, null);\r\n            if (!formatEl && !util.isNonEditable(targetElement) && !util.isList(rangeEl)) {\r\n                const range = core.getRange();\r\n                if (util.getFormatElement(range.startContainer) === util.getFormatElement(range.endContainer)) {\r\n                    if (util.isList(rangeEl)) {\r\n                        e.preventDefault();\r\n                        const oLi = util.createElement('LI');\r\n                        const prevLi = selectionNode.nextElementSibling;\r\n                        oLi.appendChild(selectionNode);\r\n                        rangeEl.insertBefore(oLi, prevLi);\r\n                        core.focus();\r\n                    } else if (!util.isWysiwygDiv(selectionNode) && !util.isComponent(selectionNode) && (!util.isTable(selectionNode) || util.isCell(selectionNode)) && core._setDefaultFormat(util.isRangeFormatElement(rangeEl) ? 'DIV' : options.defaultTag) !== null) {\r\n                        e.preventDefault();\r\n                        core.focus();\r\n                    } else {\r\n                        event._applyTagEffects();\r\n                    }\r\n                }\r\n            } else {\r\n                event._applyTagEffects();\r\n            }\r\n\r\n            if (core._isBalloon) _w.setTimeout(event._toggleToolbarBalloon);\r\n        },\r\n\r\n        _balloonDelay: null,\r\n        _showToolbarBalloonDelay: function () {\r\n            if (event._balloonDelay) {\r\n                _w.clearTimeout(event._balloonDelay);\r\n            }\r\n\r\n            event._balloonDelay = _w.setTimeout(function () {\r\n                _w.clearTimeout(this._balloonDelay);\r\n                this._balloonDelay = null;\r\n                this._showToolbarBalloon();\r\n            }.bind(event), 350);\r\n        },\r\n\r\n        _toggleToolbarBalloon: function () {\r\n            core._editorRange();\r\n            const range = core.getRange();\r\n            if (core._bindControllersOff || (!core._isBalloonAlways && range.collapsed)) event._hideToolbar();\r\n            else event._showToolbarBalloon(range);\r\n        },\r\n\r\n        _showToolbarBalloon: function (rangeObj) {\r\n            if (!core._isBalloon) return;\r\n\r\n            const range = rangeObj || core.getRange();\r\n            const toolbar = context.element.toolbar;\r\n            const topArea = context.element.topArea;\r\n            const selection = core.getSelection();\r\n\r\n            let isDirTop;\r\n            if (core._isBalloonAlways && range.collapsed) {\r\n                isDirTop = true;\r\n            } else if (selection.focusNode === selection.anchorNode) {\r\n                isDirTop = selection.focusOffset < selection.anchorOffset;\r\n            } else {\r\n                const childNodes = util.getListChildNodes(range.commonAncestorContainer, null);\r\n                isDirTop = util.getArrayIndex(childNodes, selection.focusNode) < util.getArrayIndex(childNodes, selection.anchorNode);\r\n            }\r\n\r\n            let rects = range.getClientRects();\r\n            rects = rects[isDirTop ? 0 : rects.length - 1];\r\n\r\n            const globalScroll = core.getGlobalScrollOffset();\r\n            let scrollLeft = globalScroll.left;\r\n            let scrollTop = globalScroll.top;\r\n\r\n            const editorWidth = topArea.offsetWidth;\r\n            const offsets = event._getEditorOffsets(null);\r\n            const stickyTop = offsets.top;\r\n            const editorLeft = offsets.left;\r\n            \r\n            toolbar.style.top = '-10000px';\r\n            toolbar.style.visibility = 'hidden';\r\n            toolbar.style.display = 'block';\r\n\r\n            if (!rects) {\r\n                const node = core.getSelectionNode();\r\n                if (util.isFormatElement(node)) {\r\n                    const zeroWidth = util.createTextNode(util.zeroWidthSpace);\r\n                    core.insertNode(zeroWidth, null, false);\r\n                    core.setRange(zeroWidth, 1, zeroWidth, 1);\r\n                    core._editorRange();\r\n                    rects = core.getRange().getClientRects();\r\n                    rects = rects[isDirTop ? 0 : rects.length - 1];\r\n                }\r\n\r\n                if (!rects) {\r\n                    const nodeOffset = util.getOffset(node, context.element.wysiwygFrame);\r\n                    rects = {\r\n                        left: nodeOffset.left,\r\n                        top: nodeOffset.top,\r\n                        right: nodeOffset.left,\r\n                        bottom: nodeOffset.top + node.offsetHeight,\r\n                        noText: true\r\n                    };\r\n                    scrollLeft = 0;\r\n                    scrollTop = 0;\r\n                }\r\n\r\n                isDirTop = true;\r\n            }\r\n\r\n            const arrowMargin = _w.Math.round(context.element._arrow.offsetWidth / 2);\r\n            const toolbarWidth = toolbar.offsetWidth;\r\n            const toolbarHeight = toolbar.offsetHeight;\r\n            const iframeRects = /iframe/i.test(context.element.wysiwygFrame.nodeName) ? context.element.wysiwygFrame.getClientRects()[0] : null;\r\n            if (iframeRects) {\r\n                rects = {\r\n                    left: rects.left + iframeRects.left,\r\n                    top: rects.top + iframeRects.top,\r\n                    right: rects.right + iframeRects.right - iframeRects.width,\r\n                    bottom: rects.bottom + iframeRects.bottom - iframeRects.height\r\n                };\r\n            }\r\n            \r\n            event._setToolbarOffset(isDirTop, rects, toolbar, editorLeft, editorWidth, scrollLeft, scrollTop, stickyTop, arrowMargin);\r\n            if (toolbarWidth !== toolbar.offsetWidth || toolbarHeight !== toolbar.offsetHeight) {\r\n                event._setToolbarOffset(isDirTop, rects, toolbar, editorLeft, editorWidth, scrollLeft, scrollTop, stickyTop, arrowMargin);\r\n            }\r\n\r\n            if (options.toolbarContainer) {\r\n                const editorParent = topArea.parentElement;\r\n\r\n                let container = options.toolbarContainer;\r\n                let left = container.offsetLeft;\r\n                let top = container.offsetTop;\r\n\r\n                while(!container.parentElement.contains(editorParent) || !/^(BODY|HTML)$/i.test(container.parentElement.nodeName)) {\r\n                    container = container.offsetParent;\r\n                    left += container.offsetLeft;\r\n                    top += container.offsetTop;\r\n                }\r\n\r\n                toolbar.style.left = (toolbar.offsetLeft - left + topArea.offsetLeft) + 'px';\r\n                toolbar.style.top = (toolbar.offsetTop - top + topArea.offsetTop) + 'px';\r\n            }\r\n\r\n            toolbar.style.visibility = '';\r\n        },\r\n\r\n        _setToolbarOffset: function (isDirTop, rects, toolbar, editorLeft, editorWidth, scrollLeft, scrollTop, stickyTop, arrowMargin) {\r\n            const padding = 1;\r\n            const toolbarWidth = toolbar.offsetWidth;\r\n            const toolbarHeight = rects.noText && !isDirTop ? 0 : toolbar.offsetHeight;\r\n\r\n            const absoluteLeft = (isDirTop ? rects.left : rects.right) - editorLeft - (toolbarWidth / 2) + scrollLeft;\r\n            const overRight = absoluteLeft + toolbarWidth - editorWidth;\r\n            \r\n            let t = (isDirTop ? rects.top - toolbarHeight - arrowMargin : rects.bottom + arrowMargin) - (rects.noText ? 0 : stickyTop) + scrollTop;\r\n            let l = absoluteLeft < 0 ? padding : overRight < 0 ? absoluteLeft : absoluteLeft - overRight - padding - 1;\r\n\r\n            let resetTop = false;\r\n            const space = t + (isDirTop ? (event._getEditorOffsets(null).top) : (toolbar.offsetHeight - context.element.wysiwyg.offsetHeight));\r\n            if (!isDirTop && space > 0 && event._getPageBottomSpace() < space) {\r\n                isDirTop = true;\r\n                resetTop = true;\r\n            } else if (isDirTop && _d.documentElement.offsetTop > space) {\r\n                isDirTop = false;\r\n                resetTop = true;\r\n            }\r\n\r\n            if (resetTop) t = (isDirTop ? rects.top - toolbarHeight - arrowMargin : rects.bottom + arrowMargin) - (rects.noText ? 0 : stickyTop) + scrollTop;\r\n\r\n            toolbar.style.left = _w.Math.floor(l) + 'px';\r\n            toolbar.style.top = _w.Math.floor(t) + 'px';\r\n\r\n            if (isDirTop) {\r\n                util.removeClass(context.element._arrow, 'se-arrow-up');\r\n                util.addClass(context.element._arrow, 'se-arrow-down');\r\n                context.element._arrow.style.top = toolbarHeight + 'px';\r\n            } else {\r\n                util.removeClass(context.element._arrow, 'se-arrow-down');\r\n                util.addClass(context.element._arrow, 'se-arrow-up');\r\n                context.element._arrow.style.top = -arrowMargin + 'px';\r\n            }\r\n\r\n            const arrow_left = _w.Math.floor((toolbarWidth / 2) + (absoluteLeft - l));\r\n            context.element._arrow.style.left = (arrow_left + arrowMargin > toolbar.offsetWidth ? toolbar.offsetWidth - arrowMargin : arrow_left < arrowMargin ? arrowMargin : arrow_left) + 'px';\r\n        },\r\n\r\n        _showToolbarInline: function () {\r\n            if (!core._isInline) return;\r\n\r\n            const toolbar = context.element.toolbar;\r\n            if (options.toolbarContainer) toolbar.style.position = 'relative';\r\n            else toolbar.style.position = 'absolute';\r\n            \r\n            toolbar.style.visibility = 'hidden';\r\n            toolbar.style.display = 'block';\r\n            core._inlineToolbarAttr.width = toolbar.style.width = options.toolbarWidth;\r\n            core._inlineToolbarAttr.top = toolbar.style.top = (options.toolbarContainer ? 0 : (-1 - toolbar.offsetHeight)) + 'px';\r\n            \r\n            if (typeof functions.showInline === 'function') functions.showInline(toolbar, context, core);\r\n\r\n            event.onScroll_window();\r\n            core._inlineToolbarAttr.isShow = true;\r\n            toolbar.style.visibility = '';\r\n        },\r\n\r\n        _hideToolbar: function () {\r\n            if (!core._notHideToolbar && !core._variable.isFullScreen) {\r\n                context.element.toolbar.style.display = 'none';\r\n                core._inlineToolbarAttr.isShow = false;\r\n            }\r\n        },\r\n\r\n        onInput_wysiwyg: function (e) {\r\n            if (core.isReadOnly || core.isDisabled) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                core.history.go(core.history.getCurrentIndex());\r\n                return false;\r\n            }\r\n\r\n            core._editorRange();\r\n\r\n            const data = (e.data === null ? '' : e.data === undefined ? ' ' : e.data) || '';       \r\n            if (!core._charCount(data)) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                return false;\r\n            }\r\n\r\n            // user event\r\n            if (typeof functions.onInput === 'function' && functions.onInput(e, core) === false) return;\r\n\r\n            // history stack\r\n            core.history.push(true);\r\n        },\r\n\r\n        _isUneditableNode: function (range, isFront) {\r\n            const container = isFront ? range.startContainer : range.endContainer;\r\n            const offset = isFront ? range.startOffset : range.endOffset;\r\n            const siblingKey = isFront ? 'previousSibling' : 'nextSibling';\r\n            const isElement = container.nodeType === 1;\r\n            let siblingNode;\r\n\r\n            if (isElement) {\r\n                siblingNode = event._isUneditableNode_getSibling(container.childNodes[offset], siblingKey, container);\r\n                return siblingNode && siblingNode.nodeType === 1 && siblingNode.getAttribute('contenteditable') === 'false';\r\n            } else {\r\n                siblingNode = event._isUneditableNode_getSibling(container, siblingKey, container);\r\n                return core.isEdgePoint(container, offset, isFront ? 'front' : 'end') && (siblingNode && siblingNode.nodeType === 1 && siblingNode.getAttribute('contenteditable') === 'false');\r\n            }\r\n        },\r\n\r\n        _isUneditableNode_getSibling: function (selectNode, siblingKey, container) {\r\n            if (!selectNode) return null;\r\n            let siblingNode = selectNode[siblingKey];\r\n\r\n            if (!siblingNode) {\r\n                siblingNode = util.getFormatElement(container);\r\n                siblingNode = siblingNode ? siblingNode[siblingKey] : null;\r\n                if (siblingNode && !util.isComponent(siblingNode)) siblingNode = siblingKey === 'previousSibling' ? siblingNode.firstChild : siblingNode.lastChild;\r\n                else return null;\r\n            }\r\n\r\n            return siblingNode;\r\n        },\r\n\r\n        _onShortcutKey: false,\r\n        onKeyDown_wysiwyg: function (e) {\r\n            let selectionNode = core.getSelectionNode();\r\n            if (util.isInputElement(selectionNode)) return;\r\n\r\n            const keyCode = e.keyCode;\r\n            const shift = e.shiftKey;\r\n            const ctrl = e.ctrlKey || e.metaKey || keyCode === 91 || keyCode === 92 || keyCode === 224;\r\n            const alt = e.altKey;\r\n            event._IEisComposing = keyCode === 229;\r\n\r\n            if (!ctrl && core.isReadOnly && !event._cursorMoveKeyCode.test(keyCode)) {\r\n                e.preventDefault();\r\n                return false;\r\n            }\r\n\r\n            core.submenuOff();\r\n\r\n            if (core._isBalloon) {\r\n                event._hideToolbar();\r\n            }\r\n\r\n            // user event\r\n            if (typeof functions.onKeyDown === 'function' && functions.onKeyDown(e, core) === false) return;\r\n\r\n            /** Shortcuts */\r\n            if (ctrl && event._shortcutCommand(keyCode, shift)) {\r\n                event._onShortcutKey = true;\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                return false;\r\n            } else if (event._onShortcutKey) {\r\n                event._onShortcutKey = false;\r\n            }\r\n\r\n            /** default key action */\r\n            const range = core.getRange();\r\n            const selectRange = !range.collapsed || range.startContainer !== range.endContainer;\r\n            const fileComponentName = core._fileManager.pluginRegExp.test(core.currentControllerName) ? core.currentControllerName : '';\r\n            let formatEl = util.getFormatElement(selectionNode, null) || selectionNode;\r\n            let rangeEl = util.getRangeFormatElement(formatEl, null);\r\n\r\n            switch (keyCode) {\r\n                case 8: /** backspace key */\r\n                    if (!selectRange) {\r\n                        if (fileComponentName) {\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                            core.plugins[fileComponentName].destroy.call(core);\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    if (selectRange && event._hardDelete()) {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                        break;\r\n                    }\r\n\r\n                    if (!util.isFormatElement(formatEl) && !context.element.wysiwyg.firstElementChild && !util.isComponent(selectionNode) && core._setDefaultFormat(options.defaultTag) !== null) {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                        return false;\r\n                    }\r\n\r\n                    if (!selectRange && !formatEl.previousElementSibling && (range.startOffset === 0 && !selectionNode.previousSibling && !util.isListCell(formatEl) && \r\n                     (util.isFormatElement(formatEl) && (!util.isFreeFormatElement(formatEl) || util.isClosureFreeFormatElement(formatEl))))) {\r\n                        // closure range\r\n                        if (util.isClosureRangeFormatElement(formatEl.parentNode)) {\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                            return false;\r\n                        }\r\n                        // maintain default format\r\n                        if (util.isWysiwygDiv(formatEl.parentNode) && formatEl.childNodes.length <= 1 && (!formatEl.firstChild || util.onlyZeroWidthSpace(formatEl.textContent))) {\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n\r\n                            if (formatEl.nodeName.toUpperCase() === options.defaultTag.toUpperCase()) {\r\n                                formatEl.innerHTML = '<br>';\r\n                                const attrs = formatEl.attributes;\r\n                                while (attrs[0]) {\r\n                                    formatEl.removeAttribute(attrs[0].name);\r\n                                }\r\n                            } else {\r\n                                const defaultFormat = util.createElement(options.defaultTag);\r\n                                defaultFormat.innerHTML = '<br>';\r\n                                formatEl.parentElement.replaceChild(defaultFormat, formatEl);\r\n                            }\r\n\r\n                            core.nativeFocus();\r\n                            return false;\r\n                        }\r\n                    }\r\n\r\n                    // clean remove tag\r\n                    const startCon = range.startContainer;\r\n                    if (formatEl && !formatEl.previousElementSibling && range.startOffset === 0 && startCon.nodeType === 3 && !util.isFormatElement(startCon.parentNode)) {\r\n                        let prev = startCon.parentNode.previousSibling;\r\n                        const next = startCon.parentNode.nextSibling;\r\n                        if (!prev) {\r\n                            if (!next) {\r\n                                prev = util.createElement('BR');\r\n                                formatEl.appendChild(prev);\r\n                            } else {\r\n                                prev = next;\r\n                            }\r\n                        }\r\n\r\n                        let con = startCon;\r\n                        while(formatEl.contains(con) && !con.previousSibling) {\r\n                            con = con.parentNode;\r\n                        }\r\n\r\n                        if (!formatEl.contains(con)) {\r\n                            startCon.textContent = '';\r\n                            util.removeItemAllParents(startCon, null, formatEl);\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    // tag[contenteditable=\"false\"]\r\n                    if (event._isUneditableNode(range, true)) {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                        break;\r\n                    }\r\n\r\n                    // format attributes\r\n                    if (!selectRange && core._isEdgeFormat(range.startContainer, range.startOffset, 'start')) {\r\n                        if (util.isFormatElement(formatEl.previousElementSibling)) {\r\n                            core._formatAttrsTemp = formatEl.previousElementSibling.attributes;\r\n                        }\r\n                    }\r\n\r\n                    // nested list\r\n                    const commonCon = range.commonAncestorContainer;\r\n                    formatEl = util.getFormatElement(range.startContainer, null);\r\n                    rangeEl = util.getRangeFormatElement(formatEl, null);\r\n                    if (rangeEl && formatEl && !util.isCell(rangeEl) && !/^FIGCAPTION$/i.test(rangeEl.nodeName)) {\r\n                        if (util.isListCell(formatEl) && util.isList(rangeEl) && (util.isListCell(rangeEl.parentNode) || formatEl.previousElementSibling) && (selectionNode === formatEl || (selectionNode.nodeType === 3 && (!selectionNode.previousSibling || util.isList(selectionNode.previousSibling)))) &&\r\n                         (util.getFormatElement(range.startContainer, null) !== util.getFormatElement(range.endContainer, null) ? rangeEl.contains(range.startContainer) : (range.startOffset === 0  && range.collapsed))) {\r\n                            if (range.startContainer !== range.endContainer) {\r\n                                e.preventDefault();\r\n\r\n                                core.removeNode();\r\n                                if (range.startContainer.nodeType === 3) {\r\n                                    core.setRange(range.startContainer, range.startContainer.textContent.length, range.startContainer, range.startContainer.textContent.length);\r\n                                }\r\n                                // history stack\r\n                                core.history.push(true);\r\n                            } else {\r\n                                let prev = formatEl.previousElementSibling || rangeEl.parentNode;\r\n                                if (util.isListCell(prev)) {\r\n                                    e.preventDefault();\r\n\r\n                                    let prevLast = prev;\r\n                                    if (!prev.contains(formatEl) && util.isListCell(prevLast) && util.isList(prevLast.lastElementChild)) {\r\n                                        prevLast = prevLast.lastElementChild.lastElementChild;\r\n                                        while (util.isListCell(prevLast) && util.isList(prevLast.lastElementChild)) {\r\n                                            prevLast = prevLast.lastElementChild && prevLast.lastElementChild.lastElementChild;\r\n                                        }\r\n                                        prev = prevLast;\r\n                                    }\r\n\r\n                                    let con = prev === rangeEl.parentNode ? rangeEl.previousSibling : prev.lastChild;\r\n                                    if (!con) {\r\n                                        con = util.createTextNode(util.zeroWidthSpace);\r\n                                        rangeEl.parentNode.insertBefore(con, rangeEl.parentNode.firstChild);\r\n                                    }\r\n                                    const offset = con.nodeType === 3 ? con.textContent.length : 1;\r\n                                    const children = formatEl.childNodes;\r\n                                    let after = con;\r\n                                    let child = children[0];\r\n                                    while ((child = children[0])) {\r\n                                        prev.insertBefore(child, after.nextSibling);\r\n                                        after = child;\r\n                                    }\r\n\r\n                                    util.removeItem(formatEl);\r\n                                    if (rangeEl.children.length === 0) util.removeItem(rangeEl);\r\n\r\n                                    core.setRange(con, offset, con, offset);\r\n                                    // history stack\r\n                                    core.history.push(true);\r\n                                }\r\n                            }\r\n                            \r\n                            break;\r\n                        }\r\n\r\n                        // detach range\r\n                        if (!selectRange && range.startOffset === 0) {\r\n                            let detach = true;\r\n                            let comm = commonCon;\r\n                            while (comm && comm !== rangeEl && !util.isWysiwygDiv(comm)) {\r\n                                if (comm.previousSibling) {\r\n                                    if (comm.previousSibling.nodeType === 1 || !util.onlyZeroWidthSpace(comm.previousSibling.textContent.trim())) {\r\n                                        detach = false;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                                comm = comm.parentNode;\r\n                            }\r\n    \r\n                            if (detach && rangeEl.parentNode) {\r\n                                e.preventDefault();\r\n                                core.detachRangeFormatElement(rangeEl, (util.isListCell(formatEl) ? [formatEl] : null), null, false, false);\r\n                                // history stack\r\n                                core.history.push(true);\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // component\r\n                    if (!selectRange && formatEl && (range.startOffset === 0 || (selectionNode === formatEl ? !!formatEl.childNodes[range.startOffset] : false))) {\r\n                        const sel = selectionNode === formatEl ? formatEl.childNodes[range.startOffset] : selectionNode;\r\n                        const prev = formatEl.previousSibling;\r\n                        // select file component\r\n                        const ignoreZWS = (commonCon.nodeType === 3 || util.isBreak(commonCon)) && !commonCon.previousSibling && range.startOffset === 0;\r\n                        if (sel && !sel.previousSibling && ( (commonCon && util.isComponent(commonCon.previousSibling)) || (ignoreZWS && util.isComponent(prev)))) {\r\n                            const fileComponentInfo = core.getFileComponent(prev);\r\n                            if (fileComponentInfo) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                                if (formatEl.textContent.length === 0) util.removeItem(formatEl);\r\n                                if (core.selectComponent(fileComponentInfo.target, fileComponentInfo.pluginName) === false) core.blur();\r\n                            } else if (util.isComponent(prev)) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                                util.removeItem(prev);\r\n                            }\r\n                            break;\r\n                        }\r\n                        // delete nonEditable\r\n                        if (sel && util.isNonEditable(sel.previousSibling)) {\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                            util.removeItem(sel.previousSibling);\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                case 46: /** delete key */\r\n                    if (fileComponentName) {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                        core.plugins[fileComponentName].destroy.call(core);\r\n                        break;\r\n                    }\r\n\r\n                    if (selectRange && event._hardDelete()) {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                        break;\r\n                    }\r\n\r\n                    // tag[contenteditable=\"false\"]\r\n                    if (event._isUneditableNode(range, false)) {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                        break;\r\n                    }\r\n\r\n                    // component\r\n                    if ((util.isFormatElement(selectionNode) || selectionNode.nextSibling === null || (util.onlyZeroWidthSpace(selectionNode.nextSibling) && selectionNode.nextSibling.nextSibling === null)) && range.startOffset === selectionNode.textContent.length) {\r\n                        const nextEl = formatEl.nextElementSibling;\r\n                        if (!nextEl) break;\r\n                        if (util.isComponent(nextEl)) {\r\n                            e.preventDefault();\r\n\r\n                            if (util.onlyZeroWidthSpace(formatEl)) {\r\n                                util.removeItem(formatEl);\r\n                                // table component\r\n                                if (util.isTable(nextEl)) {\r\n                                    let cell = util.getChildElement(nextEl, util.isCell, false);\r\n                                    cell = cell.firstElementChild || cell;\r\n                                    core.setRange(cell, 0, cell, 0);\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            // select file component\r\n                            const fileComponentInfo = core.getFileComponent(nextEl);\r\n                            if (fileComponentInfo) {\r\n                                e.stopPropagation();\r\n                                if (core.selectComponent(fileComponentInfo.target, fileComponentInfo.pluginName) === false) core.blur();\r\n                            } else if (util.isComponent(nextEl)) {\r\n                                e.stopPropagation();\r\n                                util.removeItem(nextEl);\r\n                            }\r\n\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    if (!selectRange && (core.isEdgePoint(range.endContainer, range.endOffset) || (selectionNode === formatEl ? !!formatEl.childNodes[range.startOffset] : false))) {\r\n                        const sel = selectionNode === formatEl ? formatEl.childNodes[range.startOffset] || selectionNode : selectionNode;\r\n                        // delete nonEditable\r\n                        if (sel && util.isNonEditable(sel.nextSibling)) {\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                            util.removeItem(sel.nextSibling);\r\n                            break;\r\n                        } else if (util.isComponent(sel)) {\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                            util.removeItem(sel);\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    // format attributes\r\n                    if (!selectRange && core._isEdgeFormat(range.endContainer, range.endOffset, 'end')) {\r\n                        if (util.isFormatElement(formatEl.nextElementSibling)) {\r\n                            core._formatAttrsTemp = formatEl.attributes;\r\n                        }\r\n                    }\r\n\r\n                    // nested list\r\n                    formatEl = util.getFormatElement(range.startContainer, null);\r\n                    rangeEl = util.getRangeFormatElement(formatEl, null);\r\n                    if (util.isListCell(formatEl) && util.isList(rangeEl) && (selectionNode === formatEl || (selectionNode.nodeType === 3 && (!selectionNode.nextSibling || util.isList(selectionNode.nextSibling)) &&\r\n                     (util.getFormatElement(range.startContainer, null) !== util.getFormatElement(range.endContainer, null) ? rangeEl.contains(range.endContainer) : (range.endOffset === selectionNode.textContent.length && range.collapsed))))) {\r\n                        if (range.startContainer !== range.endContainer) core.removeNode();\r\n                        \r\n                        let next = util.getArrayItem(formatEl.children, util.isList, false);\r\n                        next = next || formatEl.nextElementSibling || rangeEl.parentNode.nextElementSibling;\r\n                        if (next && (util.isList(next) || util.getArrayItem(next.children, util.isList, false))) {\r\n                            e.preventDefault();\r\n\r\n                            let con, children;\r\n                            if (util.isList(next)) {\r\n                                const child = next.firstElementChild;\r\n                                children = child.childNodes;\r\n                                con = children[0];\r\n                                while (children[0]) {\r\n                                    formatEl.insertBefore(children[0], next);\r\n                                }\r\n                                util.removeItem(child);\r\n                            } else {\r\n                                con = next.firstChild;\r\n                                children = next.childNodes;\r\n                                while (children[0]) {\r\n                                    formatEl.appendChild(children[0]);\r\n                                }\r\n                                util.removeItem(next);\r\n                            }\r\n                            core.setRange(con, 0, con, 0);\r\n                            // history stack\r\n                            core.history.push(true);\r\n                        }\r\n                        break;\r\n                    }\r\n\r\n                    break;\r\n                case 9: /** tab key */\r\n                    if (fileComponentName || options.tabDisable) break;\r\n                    e.preventDefault();\r\n                    if (ctrl || alt || util.isWysiwygDiv(selectionNode)) break;\r\n\r\n                    const isEdge = (!range.collapsed || core.isEdgePoint(range.startContainer, range.startOffset));            \r\n                    const selectedFormats = core.getSelectedElements(null);\r\n                    selectionNode = core.getSelectionNode();\r\n                    const cells = [];\r\n                    let lines = [];\r\n                    let fc = util.isListCell(selectedFormats[0]), lc = util.isListCell(selectedFormats[selectedFormats.length - 1]);\r\n                    let r = {sc: range.startContainer, so: range.startOffset, ec: range.endContainer, eo: range.endOffset};\r\n                    for (let i = 0, len = selectedFormats.length, f; i < len; i++) {\r\n                        f = selectedFormats[i];\r\n                        if (util.isListCell(f)) {\r\n                            if (!f.previousElementSibling && !shift) {\r\n                                continue;\r\n                            } else {\r\n                                cells.push(f);\r\n                            }\r\n                        } else {\r\n                            lines.push(f);\r\n                        }\r\n                    }\r\n                    \r\n                    // Nested list\r\n                    if (cells.length > 0 && isEdge && core.plugins.list) {\r\n                        r = core.plugins.list.editInsideList.call(core, shift, cells);\r\n                    } else {\r\n                        // table\r\n                        const tableCell = util.getParentElement(selectionNode, util.isCell);\r\n                        if (tableCell && isEdge) {\r\n                            const table = util.getParentElement(tableCell, 'table');\r\n                            const cells = util.getListChildren(table, util.isCell);\r\n                            let idx = shift ? util.prevIdx(cells, tableCell) : util.nextIdx(cells, tableCell);\r\n\r\n                            if (idx === cells.length && !shift) idx = 0;\r\n                            if (idx === -1 && shift) idx = cells.length - 1;\r\n\r\n                            let moveCell = cells[idx];\r\n                            if (!moveCell) break;\r\n                            moveCell = moveCell.firstElementChild || moveCell;\r\n                            core.setRange(moveCell, 0, moveCell, 0);\r\n                            break;\r\n                        }\r\n\r\n                        lines = lines.concat(cells);\r\n                        fc = lc = null;\r\n                    }\r\n\r\n                    // Lines tab(4)\r\n                    if (lines.length > 0) {\r\n                        if (!shift) {\r\n                            const tabText = util.createTextNode(new _w.Array(core._variable.tabSize + 1).join('\\u00A0'));\r\n                            if (lines.length === 1) {\r\n                                const textRange = core.insertNode(tabText, null, true);\r\n                                if (!textRange) return false;\r\n                                if (!fc) {\r\n                                    r.sc = tabText;\r\n                                    r.so = textRange.endOffset;\r\n                                }\r\n                                if (!lc) {\r\n                                    r.ec = tabText;\r\n                                    r.eo = textRange.endOffset;\r\n                                }\r\n                            } else {\r\n                                const len = lines.length - 1;\r\n                                for (let i = 0, child; i <= len; i++) {\r\n                                    child = lines[i].firstChild;\r\n                                    if (!child) continue;\r\n    \r\n                                    if (util.isBreak(child)) {\r\n                                        lines[i].insertBefore(tabText.cloneNode(false), child);\r\n                                    } else {\r\n                                        child.textContent = tabText.textContent + child.textContent;\r\n                                    }\r\n                                }\r\n    \r\n                                const firstChild = util.getChildElement(lines[0], 'text', false);\r\n                                const endChild = util.getChildElement(lines[len], 'text', true);\r\n                                if (!fc && firstChild) {\r\n                                    r.sc = firstChild;\r\n                                    r.so = 0;\r\n                                }\r\n                                if (!lc && endChild) {\r\n                                    r.ec = endChild;\r\n                                    r.eo = endChild.textContent.length;\r\n                                }\r\n                            }\r\n                        } else {\r\n                            const len = lines.length - 1;\r\n                            for (let i = 0, line; i <= len; i++) {\r\n                                line = lines[i].childNodes;\r\n                                for (let c = 0, cLen = line.length, child; c < cLen; c++) {\r\n                                    child = line[c];\r\n                                    if (!child) break;\r\n                                    if (util.onlyZeroWidthSpace(child)) continue;\r\n        \r\n                                    if (/^\\s{1,4}$/.test(child.textContent)) {\r\n                                        util.removeItem(child);\r\n                                    } else if (/^\\s{1,4}/.test(child.textContent)) {\r\n                                        child.textContent = child.textContent.replace(/^\\s{1,4}/, '');\r\n                                    }\r\n                                    \r\n                                    break;\r\n                                }\r\n                            }\r\n    \r\n                            const firstChild = util.getChildElement(lines[0], 'text', false);\r\n                            const endChild = util.getChildElement(lines[len], 'text', true);\r\n                            if (!fc && firstChild) {\r\n                                r.sc = firstChild;\r\n                                r.so = 0;\r\n                            }\r\n                            if (!lc && endChild) {\r\n                                r.ec = endChild;\r\n                                r.eo = endChild.textContent.length;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    core.setRange(r.sc, r.so, r.ec, r.eo);\r\n                    // history stack\r\n                    core.history.push(false);\r\n                    \r\n                    break;\r\n                case 13: /** enter key */\r\n                    const freeFormatEl = util.getFreeFormatElement(selectionNode, null);\r\n\r\n                    if (core._charTypeHTML) {\r\n                        let enterHTML = '';\r\n                        if ((!shift && freeFormatEl) || shift) {\r\n                            enterHTML = '<br>';\r\n                        } else {\r\n                            enterHTML = '<' + formatEl.nodeName + '><br></' + formatEl.nodeName + '>';\r\n                        }\r\n\r\n                        if (!core.checkCharCount(enterHTML, 'byte-html')) {\r\n                            e.preventDefault();\r\n                            return false;\r\n                        }\r\n                    }\r\n\r\n                    if (!shift) {\r\n                        const formatEndEdge = core._isEdgeFormat(range.endContainer, range.endOffset, 'end');\r\n                        const formatStartEdge = core._isEdgeFormat(range.startContainer, range.startOffset, 'start');\r\n\r\n                        // add default format line\r\n                        if (formatEndEdge && (/^H[1-6]$/i.test(formatEl.nodeName) || /^HR$/i.test(formatEl.nodeName))) {\r\n                            e.preventDefault();\r\n                            let temp = null;\r\n                            const newFormat = core.appendFormatTag(formatEl, options.defaultTag);\r\n\r\n                            if (formatEndEdge && formatEndEdge.length > 0) {\r\n                                temp = formatEndEdge.pop();\r\n                                const innerNode = temp;\r\n                                while(formatEndEdge.length > 0) {\r\n                                    temp = temp.appendChild(formatEndEdge.pop());\r\n                                }\r\n                                newFormat.appendChild(innerNode);\r\n                            }\r\n\r\n                            temp = !temp ? newFormat.firstChild : temp.appendChild(newFormat.firstChild);\r\n                            core.setRange(temp, 0, temp, 0);\r\n                            break;\r\n                        } else if (rangeEl && formatEl && !util.isCell(rangeEl) && !/^FIGCAPTION$/i.test(rangeEl.nodeName)) {\r\n                            const range = core.getRange();\r\n                            if(core.isEdgePoint(range.endContainer, range.endOffset) && util.isList(selectionNode.nextSibling)) {\r\n                                e.preventDefault();\r\n                                const newEl = util.createElement('LI');\r\n                                const br = util.createElement('BR');\r\n                                newEl.appendChild(br);\r\n    \r\n                                formatEl.parentNode.insertBefore(newEl, formatEl.nextElementSibling);\r\n                                newEl.appendChild(selectionNode.nextSibling);\r\n                                \r\n                                core.setRange(br, 1, br, 1);\r\n                                break;\r\n                            }\r\n    \r\n                            if ((range.commonAncestorContainer.nodeType === 3 ? !range.commonAncestorContainer.nextElementSibling : true) && util.onlyZeroWidthSpace(formatEl.innerText.trim()) && !util.isListCell(formatEl.nextElementSibling)) {\r\n                                e.preventDefault();\r\n                                let newEl = null;\r\n    \r\n                                if (util.isListCell(rangeEl.parentNode)) {\r\n                                    rangeEl = formatEl.parentNode.parentNode.parentNode;\r\n                                    newEl = util.splitElement(formatEl, null, util.getElementDepth(formatEl) - 2);\r\n                                    if (!newEl) {\r\n                                        const newListCell = util.createElement('LI');\r\n                                        newListCell.innerHTML = '<br>';\r\n                                        util.copyTagAttributes(newListCell, formatEl, options.lineAttrReset);\r\n                                        rangeEl.insertBefore(newListCell, newEl);\r\n                                        newEl = newListCell;\r\n                                    }\r\n                                } else {\r\n                                    const newFormat = util.isCell(rangeEl.parentNode) ? 'DIV' : util.isList(rangeEl.parentNode) ? 'LI' : (util.isFormatElement(rangeEl.nextElementSibling) && !util.isRangeFormatElement(rangeEl.nextElementSibling)) ? rangeEl.nextElementSibling.nodeName : (util.isFormatElement(rangeEl.previousElementSibling) && !util.isRangeFormatElement(rangeEl.previousElementSibling)) ? rangeEl.previousElementSibling.nodeName : options.defaultTag;\r\n                                    newEl = util.createElement(newFormat);\r\n                                    util.copyTagAttributes(newEl, formatEl, options.lineAttrReset);\r\n                                    const edge = core.detachRangeFormatElement(rangeEl, [formatEl], null, true, true);\r\n                                    edge.cc.insertBefore(newEl, edge.ec);\r\n                                }\r\n                                \r\n                                newEl.innerHTML = '<br>';\r\n                                util.removeItemAllParents(formatEl, null, null);\r\n                                core.setRange(newEl, 1, newEl, 1);\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                        if (freeFormatEl) {\r\n                            e.preventDefault();\r\n                            const selectionFormat = selectionNode === freeFormatEl;\r\n                            const wSelection = core.getSelection();\r\n                            const children = selectionNode.childNodes, offset = wSelection.focusOffset, prev = selectionNode.previousElementSibling, next = selectionNode.nextSibling;\r\n    \r\n                            if (!util.isClosureFreeFormatElement(freeFormatEl) && !!children && ((selectionFormat && range.collapsed && children.length - 1 <= offset + 1 && util.isBreak(children[offset]) && (!children[offset + 1] || ((!children[offset + 2] || util.onlyZeroWidthSpace(children[offset + 2].textContent)) && children[offset + 1].nodeType === 3 && util.onlyZeroWidthSpace(children[offset + 1].textContent))) &&  offset > 0 && util.isBreak(children[offset - 1])) ||\r\n                              (!selectionFormat && util.onlyZeroWidthSpace(selectionNode.textContent) && util.isBreak(prev) && (util.isBreak(prev.previousSibling) || !util.onlyZeroWidthSpace(prev.previousSibling.textContent)) && (!next || (!util.isBreak(next) && util.onlyZeroWidthSpace(next.textContent)))))) {\r\n                                if (selectionFormat) util.removeItem(children[offset - 1]);\r\n                                else util.removeItem(selectionNode);\r\n                                const newEl = core.appendFormatTag(freeFormatEl, (util.isFormatElement(freeFormatEl.nextElementSibling) && !util.isRangeFormatElement(freeFormatEl.nextElementSibling)) ? freeFormatEl.nextElementSibling : null);\r\n                                util.copyFormatAttributes(newEl, freeFormatEl);\r\n                                core.setRange(newEl, 1, newEl, 1);\r\n                                break;\r\n                            }\r\n                            \r\n                            if (selectionFormat) {\r\n                                functions.insertHTML(((range.collapsed && util.isBreak(range.startContainer.childNodes[range.startOffset - 1])) ? '<br>' : '<br><br>'), true, false);\r\n    \r\n                                let focusNode = wSelection.focusNode;\r\n                                const wOffset = wSelection.focusOffset;\r\n                                if (freeFormatEl === focusNode) {\r\n                                    focusNode = focusNode.childNodes[wOffset - offset > 1 ? wOffset - 1 : wOffset];\r\n                                }\r\n    \r\n                                core.setRange(focusNode, 1, focusNode, 1);\r\n                            } else {\r\n                                const focusNext = wSelection.focusNode.nextSibling;\r\n                                const br = util.createElement('BR');\r\n                                core.insertNode(br, null, false);\r\n    \r\n                                const brPrev = br.previousSibling, brNext = br.nextSibling;\r\n                                if (!util.isBreak(focusNext) && !util.isBreak(brPrev) && (!brNext || util.onlyZeroWidthSpace(brNext))) {\r\n                                    br.parentNode.insertBefore(br.cloneNode(false), br);\r\n                                    core.setRange(br, 1, br, 1);\r\n                                } else {\r\n                                    core.setRange(brNext, 0, brNext, 0);\r\n                                }\r\n                            }\r\n    \r\n                            event._onShortcutKey = true;\r\n                            break;\r\n                        }\r\n                        \r\n                        // set format attrs - edge\r\n                        if (range.collapsed && (formatStartEdge || formatEndEdge)) {\r\n                            e.preventDefault();\r\n                            const focusBR = util.createElement('BR');\r\n                            const newFormat = util.createElement(formatEl.nodeName);\r\n                            util.copyTagAttributes(newFormat, formatEl, options.lineAttrReset);\r\n\r\n                            let child = focusBR;\r\n                            do {\r\n                                if (!util.isBreak(selectionNode) && selectionNode.nodeType === 1) {\r\n                                    const f = selectionNode.cloneNode(false);\r\n                                    f.appendChild(child);\r\n                                    child = f;\r\n                                }\r\n                                selectionNode = selectionNode.parentNode;\r\n                            } while(formatEl !== selectionNode && formatEl.contains(selectionNode));\r\n\r\n                            newFormat.appendChild(child);\r\n                            formatEl.parentNode.insertBefore(newFormat, formatStartEdge && !formatEndEdge ? formatEl : formatEl.nextElementSibling);\r\n                            if (formatEndEdge) {\r\n                                core.setRange(focusBR, 1, focusBR, 1);\r\n                            }\r\n                            \r\n                            break;\r\n                        }\r\n                        \r\n                        if (formatEl) {\r\n                            e.stopPropagation();\r\n\r\n                            let newEl;\r\n                            let offset = 0;\r\n                            if (!range.collapsed) {\r\n                                const isMultiLine = util.getFormatElement(range.startContainer, null) !== util.getFormatElement(range.endContainer, null);\r\n                                const newFormat = formatEl.cloneNode(false);\r\n                                newFormat.innerHTML = '<br>';\r\n                                const r = core.removeNode();\r\n                                newEl = util.getFormatElement(r.container, null);\r\n                                if (!newEl) {\r\n                                    if (util.isWysiwygDiv(r.container)) {\r\n                                        e.preventDefault();\r\n                                        context.element.wysiwyg.appendChild(newFormat);\r\n                                        newEl = newFormat;\r\n                                        util.copyTagAttributes(newEl, formatEl, options.lineAttrReset);\r\n                                        core.setRange(newEl, offset, newEl, offset);\r\n                                    }\r\n                                    break;\r\n                                }\r\n                                \r\n                                const innerRange = util.getRangeFormatElement(r.container);\r\n                                newEl = newEl.contains(innerRange) ? util.getChildElement(innerRange, util.getFormatElement.bind(util)) : newEl;\r\n                                if (isMultiLine) {\r\n                                    if (formatEndEdge && !formatStartEdge) {\r\n                                        newEl.parentNode.insertBefore(newFormat, (!r.prevContainer || r.container === r.prevContainer) ? newEl.nextElementSibling : newEl);\r\n                                        newEl = newFormat;\r\n                                        offset = 0;\r\n                                    } else {\r\n                                        offset = r.offset;\r\n                                        if (formatStartEdge) {\r\n                                            const tempEl = newEl.parentNode.insertBefore(newFormat, newEl);\r\n                                            if (formatEndEdge) {\r\n                                                newEl = tempEl;\r\n                                                offset = 0;\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                } else {\r\n                                    if (formatEndEdge && formatStartEdge) {\r\n                                        newEl.parentNode.insertBefore(newFormat, (r.prevContainer && r.container === r.prevContainer) ? newEl.nextElementSibling : newEl);\r\n                                        newEl = newFormat;\r\n                                        offset = 0;\r\n                                    } else {\r\n                                        newEl = util.splitElement(r.container, r.offset, util.getElementDepth(formatEl));\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                if (util.onlyZeroWidthSpace(formatEl)) {\r\n                                    newEl = core.appendFormatTag(formatEl, formatEl.cloneNode(false));\r\n                                } else {\r\n                                    newEl = util.splitElement(range.endContainer, range.endOffset, util.getElementDepth(formatEl));\r\n                                }\r\n                            }\r\n\r\n                            e.preventDefault();\r\n                            util.copyTagAttributes(newEl, formatEl, options.lineAttrReset);\r\n                            core.setRange(newEl, offset, newEl, offset);\r\n\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    if (selectRange) break;\r\n                    \r\n                    if (rangeEl && util.getParentElement(rangeEl, 'FIGCAPTION') && util.getParentElement(rangeEl, util.isList)) {\r\n                        e.preventDefault();\r\n                        formatEl = core.appendFormatTag(formatEl, null);\r\n                        core.setRange(formatEl, 0, formatEl, 0);\r\n                    }\r\n\r\n                    if (fileComponentName) {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                        const compContext = context[fileComponentName];\r\n                        const container = compContext._container;\r\n                        const sibling = container.previousElementSibling || container.nextElementSibling;\r\n\r\n                        let newEl = null;\r\n                        if (util.isListCell(container.parentNode)) {\r\n                            newEl = util.createElement('BR');\r\n                        } else {\r\n                            newEl = util.createElement((util.isFormatElement(sibling) && !util.isRangeFormatElement(sibling)) ? sibling.nodeName : options.defaultTag);\r\n                            newEl.innerHTML = '<br>';\r\n                        }\r\n\r\n                        container.parentNode.insertBefore(newEl, container);\r\n                        \r\n                        core.callPlugin(fileComponentName, function () {\r\n                            if (core.selectComponent(compContext._element, fileComponentName) === false) core.blur();\r\n                        }, null);\r\n                    }\r\n                    \r\n                    break;\r\n                case 27:\r\n                    if (fileComponentName) {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                        core.controllersOff();\r\n                        return false;\r\n                    }\r\n                    break;\r\n            }\r\n\r\n            if (shift && keyCode === 16) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                const tablePlugin = core.plugins.table;\r\n                if (tablePlugin && !tablePlugin._shift && !tablePlugin._ref) {\r\n                    const cell = util.getParentElement(formatEl, util.isCell);\r\n                    if (cell) {\r\n                        tablePlugin.onTableCellMultiSelect.call(core, cell, true);\r\n                        return;\r\n                    }\r\n                }\r\n            } else if (shift && (util.isOSX_IOS ? alt : ctrl) && keyCode === 32) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                const nbsp = core.insertNode(util.createTextNode('\\u00a0'));\r\n                if (nbsp && nbsp.container) {\r\n                    core.setRange(nbsp.container, nbsp.endOffset, nbsp.container, nbsp.endOffset);\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (util.isIE && !ctrl && !alt && !selectRange && !event._nonTextKeyCode.test(keyCode) && util.isBreak(range.commonAncestorContainer)) {\r\n                const zeroWidth = util.createTextNode(util.zeroWidthSpace);\r\n                core.insertNode(zeroWidth, null, false);\r\n                core.setRange(zeroWidth, 1, zeroWidth, 1);\r\n            }\r\n\r\n            if (event._directionKeyCode.test(keyCode)) {\r\n                core._editorRange();\r\n                event._applyTagEffects();\r\n            }\r\n        },\r\n\r\n        onKeyUp_wysiwyg: function (e) {\r\n            if (event._onShortcutKey) return;\r\n\r\n            core._editorRange();\r\n            const keyCode = e.keyCode;\r\n            const ctrl = e.ctrlKey || e.metaKey || keyCode === 91 || keyCode === 92 || keyCode === 224;\r\n            const alt = e.altKey;\r\n\r\n            if (core.isReadOnly) {\r\n                if (!ctrl && event._cursorMoveKeyCode.test(keyCode)) event._applyTagEffects();\r\n                return;\r\n            }\r\n\r\n            const range = core.getRange();\r\n            let selectionNode = core.getSelectionNode();\r\n\r\n            if (core._isBalloon && ((core._isBalloonAlways && keyCode !== 27) || !range.collapsed)) {\r\n                if (core._isBalloonAlways) {\r\n                    if (keyCode !== 27) event._showToolbarBalloonDelay();\r\n                } else {\r\n                    event._showToolbarBalloon();\r\n                    return;\r\n                }\r\n            }\r\n\r\n            /** when format tag deleted */\r\n            if (keyCode === 8 && util.isWysiwygDiv(selectionNode) && selectionNode.textContent === '' && selectionNode.children.length === 0) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n\r\n                selectionNode.innerHTML = '';\r\n\r\n                const oFormatTag = util.createElement(util.isFormatElement(core._variable.currentNodes[0]) ? core._variable.currentNodes[0] : options.defaultTag);\r\n                oFormatTag.innerHTML = '<br>';\r\n\r\n                selectionNode.appendChild(oFormatTag);\r\n                core.setRange(oFormatTag, 0, oFormatTag, 0);\r\n                event._applyTagEffects();\r\n\r\n                core.history.push(false);\r\n                return;\r\n            }\r\n\r\n            const formatEl = util.getFormatElement(selectionNode, null);\r\n            const rangeEl = util.getRangeFormatElement(selectionNode, null);\r\n            const attrs = core._formatAttrsTemp;\r\n\r\n            if (attrs) {\r\n                for (let i = 0, len = attrs.length; i < len; i++) {\r\n                    if (keyCode === 13 && /^id$/i.test(attrs[i].name)) {\r\n                        formatEl.removeAttribute('id');\r\n                        continue;\r\n                    }\r\n                    formatEl.setAttribute(attrs[i].name, attrs[i].value);\r\n                }\r\n                core._formatAttrsTemp = null;\r\n            }\r\n\r\n            if (!formatEl && range.collapsed && !util.isComponent(selectionNode) && !util.isList(selectionNode) && core._setDefaultFormat(util.isRangeFormatElement(rangeEl) ? 'DIV' : options.defaultTag) !== null) {\r\n                selectionNode = core.getSelectionNode();\r\n            }\r\n\r\n            const textKey = !ctrl && !alt && !event._nonTextKeyCode.test(keyCode);\r\n            if (textKey && selectionNode.nodeType === 3 && util.zeroWidthRegExp.test(selectionNode.textContent) && !(e.isComposing !== undefined ? e.isComposing : event._IEisComposing)) {\r\n                let so = range.startOffset, eo = range.endOffset;\r\n                const frontZeroWidthCnt = (selectionNode.textContent.substring(0, eo).match(event._frontZeroWidthReg) || '').length;\r\n                so = range.startOffset - frontZeroWidthCnt;\r\n                eo = range.endOffset - frontZeroWidthCnt;\r\n                selectionNode.textContent = selectionNode.textContent.replace(util.zeroWidthRegExp, '');\r\n                core.setRange(selectionNode, so < 0 ? 0 : so, selectionNode, eo < 0 ? 0 : eo);\r\n            }\r\n\r\n            core._charCount('');\r\n\r\n            // user event\r\n            if (typeof functions.onKeyUp === 'function' && functions.onKeyUp(e, core) === false) return;\r\n\r\n            // history stack\r\n            if (!ctrl && !alt && !event._historyIgnoreKeyCode.test(keyCode)) {\r\n                core.history.push(true);\r\n            }\r\n        },\r\n\r\n        onScroll_wysiwyg: function (e) {\r\n            core.controllersOff();\r\n            if (core._isBalloon) event._hideToolbar();\r\n\r\n            // user event\r\n            if (typeof functions.onScroll === 'function') functions.onScroll(e, core);\r\n        },\r\n\r\n        onFocus_wysiwyg: function (e) {\r\n            if (core._antiBlur) return;\r\n            core.hasFocus = true;\r\n            _w.setTimeout(event._applyTagEffects);\r\n            \r\n            if (core._isInline) event._showToolbarInline();\r\n\r\n            // user event\r\n            if (typeof functions.onFocus === 'function') functions.onFocus(e, core);\r\n        },\r\n\r\n        onBlur_wysiwyg: function (e) {\r\n            if (core._antiBlur || core._variable.isCodeView) return;\r\n            core.hasFocus = false;\r\n            core.effectNode = null;\r\n            core.controllersOff();\r\n            if (core._isInline || core._isBalloon) event._hideToolbar();\r\n\r\n            core._setKeyEffect([]);\r\n\r\n            core._variable.currentNodes = [];\r\n            core._variable.currentNodesMap = [];\r\n            if (options.showPathLabel) context.element.navigation.textContent = '';\r\n            // user event\r\n            if (typeof functions.onBlur === 'function') functions.onBlur(e, core,this);\r\n        },\r\n\r\n        onMouseDown_resizingBar: function (e) {\r\n            e.stopPropagation();\r\n\r\n            core.submenuOff();\r\n            core.controllersOff();\r\n\r\n            core._variable.resizeClientY = e.clientY;\r\n            context.element.resizeBackground.style.display = 'block';\r\n\r\n            function closureFunc() {\r\n                context.element.resizeBackground.style.display = 'none';\r\n                _d.removeEventListener('mousemove', event._resize_editor);\r\n                _d.removeEventListener('mouseup', closureFunc);\r\n            }\r\n\r\n            _d.addEventListener('mousemove', event._resize_editor);\r\n            _d.addEventListener('mouseup', closureFunc);\r\n        },\r\n\r\n        _resize_editor: function (e) {\r\n            const resizeInterval = context.element.editorArea.offsetHeight + (e.clientY - core._variable.resizeClientY);\r\n            const h = (resizeInterval < core._variable.minResizingSize ? core._variable.minResizingSize : resizeInterval);\r\n            context.element.wysiwygFrame.style.height = context.element.code.style.height = h + 'px';\r\n            core._variable.resizeClientY = e.clientY;\r\n            if (!util.isResizeObserverSupported) core.__callResizeFunction(h, null);\r\n        },\r\n\r\n        onResize_window: function () {\r\n            if (!util.isResizeObserverSupported) core.resetResponsiveToolbar();\r\n\r\n            const toolbar = context.element.toolbar;\r\n            const isToolbarHidden = (toolbar.style.display === 'none' || (core._isInline && !core._inlineToolbarAttr.isShow));\r\n            if (toolbar.offsetWidth === 0 && !isToolbarHidden) return;\r\n\r\n            if (context.fileBrowser && context.fileBrowser.area.style.display === 'block') {\r\n                context.fileBrowser.body.style.maxHeight = (_w.innerHeight - context.fileBrowser.header.offsetHeight - 50) + 'px';\r\n            }\r\n\r\n            if (core.submenuActiveButton && core.submenu) {\r\n                core._setMenuPosition(core.submenuActiveButton, core.submenu);\r\n            }\r\n\r\n            if (core._variable.isFullScreen) {\r\n                core._variable.innerHeight_fullScreen += (_w.innerHeight - toolbar.offsetHeight) - core._variable.innerHeight_fullScreen;\r\n                context.element.editorArea.style.height = core._variable.innerHeight_fullScreen + 'px';\r\n                return;\r\n            }\r\n\r\n            if (core._variable.isCodeView && core._isInline) {\r\n                event._showToolbarInline();\r\n                return;\r\n            }\r\n            \r\n            core._iframeAutoHeight();\r\n\r\n            if (core._sticky) {\r\n                toolbar.style.width = (context.element.topArea.offsetWidth - 2) + 'px';\r\n                event.onScroll_window();\r\n            }\r\n        },\r\n\r\n        onScroll_window: function () {\r\n            if (core._variable.isFullScreen || context.element.toolbar.offsetWidth === 0 || options.stickyToolbar < 0) return;\r\n\r\n            const element = context.element;\r\n            const editorHeight = element.editorArea.offsetHeight;\r\n            const y = (this.scrollY || _d.documentElement.scrollTop) + options.stickyToolbar;\r\n            const editorTop = event._getEditorOffsets(options.toolbarContainer).top - (core._isInline ? element.toolbar.offsetHeight : 0);\r\n            const inlineOffset = core._isInline && (y - editorTop) > 0 ? y - editorTop - context.element.toolbar.offsetHeight : 0;\r\n            \r\n            if (y < editorTop) {\r\n                event._offStickyToolbar();\r\n            }\r\n            else if (y + core._variable.minResizingSize >= editorHeight + editorTop) {\r\n                if (!core._sticky) event._onStickyToolbar(inlineOffset);\r\n                element.toolbar.style.top = (inlineOffset + editorHeight + editorTop + options.stickyToolbar - y - core._variable.minResizingSize) + 'px';\r\n            }\r\n            else if (y >= editorTop) {\r\n                event._onStickyToolbar(inlineOffset);\r\n            }\r\n        },\r\n\r\n        _getEditorOffsets: function (container) {\r\n            let offsetEl = container || context.element.topArea;\r\n            let t = 0, l = 0, s = 0;\r\n\r\n            while (offsetEl) {\r\n                t += offsetEl.offsetTop;\r\n                l += offsetEl.offsetLeft;\r\n                s += offsetEl.scrollTop;\r\n                offsetEl = offsetEl.offsetParent;\r\n            }\r\n\r\n            return {\r\n                top: t,\r\n                left: l,\r\n                scroll: s\r\n            };\r\n        },\r\n\r\n        _getPageBottomSpace: function () {\r\n            return _d.documentElement.scrollHeight - (event._getEditorOffsets(null).top + context.element.topArea.offsetHeight);\r\n        },\r\n\r\n        _onStickyToolbar: function (inlineOffset) {\r\n            const element = context.element;\r\n\r\n            if (!core._isInline && !options.toolbarContainer) {\r\n                element._stickyDummy.style.height = element.toolbar.offsetHeight + 'px';\r\n                element._stickyDummy.style.display = 'block';\r\n            }\r\n\r\n            element.toolbar.style.top = (options.stickyToolbar + inlineOffset) + 'px';\r\n            element.toolbar.style.width = core._isInline ? core._inlineToolbarAttr.width : element.toolbar.offsetWidth + 'px';\r\n            util.addClass(element.toolbar, 'se-toolbar-sticky');\r\n            core._sticky = true;\r\n        },\r\n\r\n        _offStickyToolbar: function () {\r\n            const element = context.element;\r\n\r\n            element._stickyDummy.style.display = 'none';\r\n            element.toolbar.style.top = core._isInline ? core._inlineToolbarAttr.top : '';\r\n            element.toolbar.style.width = core._isInline ? core._inlineToolbarAttr.width : '';\r\n            element.editorArea.style.marginTop = '';\r\n\r\n            util.removeClass(element.toolbar, 'se-toolbar-sticky');\r\n            core._sticky = false;\r\n        },\r\n\r\n        _codeViewAutoHeight: function () {\r\n            if (core._variable.isFullScreen) return;\r\n            context.element.code.style.height = context.element.code.scrollHeight + 'px';\r\n        },\r\n\r\n        // FireFox - table delete, Chrome - image, video, audio\r\n        _hardDelete: function () {\r\n            const range = core.getRange();\r\n            const sc = range.startContainer;\r\n            const ec = range.endContainer;\r\n            \r\n            // table\r\n            const sCell = util.getRangeFormatElement(sc);\r\n            const eCell = util.getRangeFormatElement(ec);\r\n            const sIsCell = util.isCell(sCell);\r\n            const eIsCell = util.isCell(eCell);\r\n            const ancestor = range.commonAncestorContainer;\r\n            if (((sIsCell && !sCell.previousElementSibling && !sCell.parentElement.previousElementSibling) || (eIsCell && !eCell.nextElementSibling && !eCell.parentElement.nextElementSibling)) && sCell !== eCell) {\r\n                if (!sIsCell) {\r\n                    util.removeItem(util.getParentElement(eCell, function(current) {return ancestor === current.parentNode;}));\r\n                } else if (!eIsCell) {\r\n                    util.removeItem(util.getParentElement(sCell, function(current) {return ancestor === current.parentNode;}));\r\n                } else {\r\n                    util.removeItem(util.getParentElement(sCell, function(current) {return ancestor === current.parentNode;}));\r\n                    core.nativeFocus();\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            // component\r\n            const sComp = sc.nodeType === 1 ? util.getParentElement(sc, '.se-component') : null;\r\n            const eComp = ec.nodeType === 1 ? util.getParentElement(ec, '.se-component') : null;\r\n            if (sComp) util.removeItem(sComp);\r\n            if (eComp) util.removeItem(eComp);\r\n\r\n            return false;\r\n        },\r\n\r\n        onPaste_wysiwyg: function (e) {\r\n            const clipboardData = util.isIE ? _w.clipboardData : e.clipboardData;\r\n            if (!clipboardData) return true;\r\n            return event._dataTransferAction('paste', e, clipboardData);\r\n        },\r\n\r\n        _setClipboardComponent: function (e, info, clipboardData) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            clipboardData.setData('text/html', info.component.outerHTML);\r\n        },\r\n\r\n        onCopy_wysiwyg: function (e) {\r\n            const clipboardData = util.isIE ? _w.clipboardData : e.clipboardData;\r\n            \r\n            // user event\r\n            if (typeof functions.onCopy === 'function' && functions.onCopy(e, clipboardData, core) === false) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                return false;\r\n            }\r\n\r\n            const info = core.currentFileComponentInfo;\r\n            if (info && !util.isIE) {\r\n                event._setClipboardComponent(e, info, clipboardData);\r\n                util.addClass(info.component, 'se-component-copy');\r\n                // copy effect\r\n                _w.setTimeout(function () {\r\n                    util.removeClass(info.component, 'se-component-copy');\r\n                }, 150);\r\n            }\r\n        },\r\n\r\n        onSave_wysiwyg: function (content) {\r\n            // user event\r\n            if (typeof functions.onSave === 'function') {\r\n                functions.onSave(content, core);\r\n                return;\r\n            }\r\n        },\r\n\r\n        onCut_wysiwyg: function (e) {\r\n            const clipboardData = util.isIE ? _w.clipboardData : e.clipboardData;\r\n\r\n            // user event\r\n            if (typeof functions.onCut === 'function' && functions.onCut(e, clipboardData, core) === false) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                return false;\r\n            }\r\n\r\n            const info = core.currentFileComponentInfo;\r\n            if (info && !util.isIE) {\r\n                event._setClipboardComponent(e, info, clipboardData);\r\n                util.removeItem(info.component);\r\n                core.controllersOff();\r\n            }\r\n\r\n            _w.setTimeout(function () {\r\n                // history stack\r\n                core.history.push(false);\r\n            });\r\n        },\r\n\r\n        onDrop_wysiwyg: function (e) {\r\n            if (core.isReadOnly || util.isIE) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                return false;\r\n            }\r\n\r\n            const dataTransfer = e.dataTransfer;\r\n            if (!dataTransfer) return true;\r\n\r\n            core.removeNode();\r\n            event._setDropLocationSelection(e);\r\n            return event._dataTransferAction('drop', e, dataTransfer);\r\n        },\r\n\r\n        _setDropLocationSelection: function (e) {\r\n            if (e.rangeParent) {\r\n                core.setRange(e.rangeParent, e.rangeOffset, e.rangeParent, e.rangeOffset);\r\n            } else if (core._wd.caretRangeFromPoint) {\r\n                const r = core._wd.caretRangeFromPoint(e.clientX, e.clientY);\r\n                core.setRange(r.startContainer, r.startOffset, r.endContainer, r.endOffset);\r\n            } else {\r\n                const r = core.getRange();\r\n                core.setRange(r.startContainer, r.startOffset, r.endContainer, r.endOffset);\r\n            }\r\n        },\r\n\r\n        _dataTransferAction: function (type, e, data) {\r\n            let plainText, cleanData;\r\n            if (util.isIE) {\r\n                plainText = data.getData('Text');\r\n                \r\n                const range = core.getRange();\r\n                const tempDiv = util.createElement('DIV');\r\n                const tempRange = {\r\n                    sc: range.startContainer,\r\n                    so: range.startOffset,\r\n                    ec: range.endContainer,\r\n                    eo: range.endOffset\r\n                };\r\n\r\n                tempDiv.setAttribute('contenteditable', true);\r\n                tempDiv.style.cssText = 'position:absolute; top:0; left:0; width:1px; height:1px; overflow:hidden;';\r\n                \r\n                context.element.relative.appendChild(tempDiv);\r\n                tempDiv.focus();\r\n\r\n                _w.setTimeout(function () {\r\n                    cleanData = tempDiv.innerHTML;\r\n                    util.removeItem(tempDiv);\r\n                    core.setRange(tempRange.sc, tempRange.so, tempRange.ec, tempRange.eo);\r\n                    event._setClipboardData(type, e, plainText, cleanData, data);\r\n                });\r\n\r\n                return true;\r\n            } else {\r\n                plainText = data.getData('text/plain');\r\n                cleanData = data.getData('text/html');\r\n                if (event._setClipboardData(type, e, plainText, cleanData, data) === false) {\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                    return false;\r\n                }\r\n            }\r\n        },\r\n\r\n        _setClipboardData: function (type, e, plainText, cleanData, data) {\r\n            // MS word, OneNode, Excel\r\n            const MSData = /class=[\"']*Mso(Normal|List)/i.test(cleanData) || /content=[\"']*Word.Document/i.test(cleanData) || /content=[\"']*OneNote.File/i.test(cleanData) || /content=[\"']*Excel.Sheet/i.test(cleanData);\r\n            const onlyText = !cleanData;\r\n\r\n            if (!onlyText) {\r\n                cleanData = cleanData.replace(/^<html>\\r?\\n?<body>\\r?\\n?\\x3C!--StartFragment--\\>|\\x3C!--EndFragment-->\\r?\\n?<\\/body\\>\\r?\\n?<\\/html>$/g, '');\r\n                if (MSData) {\r\n                    cleanData = cleanData.replace(/\\n/g, ' ');\r\n                    plainText = plainText.replace(/\\n/g, ' ');\r\n                }\r\n                cleanData = core.cleanHTML(cleanData, core.pasteTagsWhitelistRegExp, core.pasteTagsBlacklistRegExp);\r\n            } else {\r\n                cleanData = util._HTMLConvertor(plainText).replace(/\\n/g, '<br>');\r\n            }\r\n\r\n            const maxCharCount = core._charCount(core._charTypeHTML ? cleanData : plainText);\r\n            // user event - paste\r\n            if (type === 'paste' && typeof functions.onPaste === 'function') {\r\n                const value = functions.onPaste(e, cleanData, maxCharCount, core);\r\n                if (value === false) {\r\n                    return false;\r\n                } else if (typeof value === 'string') {\r\n                    if (!value) return false;\r\n                    cleanData = value;\r\n                }\r\n            }\r\n            // user event - drop\r\n            if (type === 'drop' && typeof functions.onDrop === 'function') {\r\n                const value = functions.onDrop(e, cleanData, maxCharCount, core);\r\n                if (value === false) {\r\n                    return false;\r\n                } else if (typeof value === 'string') {\r\n                    if (!value) return false;\r\n                    cleanData = value;\r\n                }\r\n            }\r\n\r\n            // files\r\n            const files = data.files;\r\n            if (files.length > 0 && !MSData) {\r\n                if (/^image/.test(files[0].type) && core.plugins.image) {\r\n                    functions.insertImage(files);\r\n                }\r\n                return false;\r\n            }\r\n\r\n            if (!maxCharCount) {\r\n                return false;\r\n            }\r\n\r\n            if (cleanData) {\r\n                functions.insertHTML(cleanData, true, false);\r\n                return false;\r\n            }\r\n        },\r\n\r\n        onMouseMove_wysiwyg: function (e) {\r\n            if (core.isDisabled || core.isReadOnly) return false;\r\n            const component = util.getParentElement(e.target, util.isComponent);\r\n            const lineBreakerStyle = core._lineBreaker.style;\r\n            \r\n            if (component && !core.currentControllerName) {\r\n                const ctxEl = context.element;\r\n                let scrollTop = 0;\r\n                let el = ctxEl.wysiwyg;\r\n                do {\r\n                    scrollTop += el.scrollTop;\r\n                    el = el.parentElement;\r\n                } while (el && !/^(BODY|HTML)$/i.test(el.nodeName));\r\n\r\n                const wScroll = ctxEl.wysiwyg.scrollTop;\r\n                const offsets = event._getEditorOffsets(null);\r\n                const componentTop = util.getOffset(component, ctxEl.wysiwygFrame).top + wScroll;\r\n                const y = e.pageY + scrollTop + (options.iframe && !options.toolbarContainer ? ctxEl.toolbar.offsetHeight : 0);\r\n                const c = componentTop + (options.iframe ? scrollTop : offsets.top);\r\n\r\n                const isList = util.isListCell(component.parentNode);\r\n                let dir = '', top = '';\r\n                if ((isList ? !component.previousSibling : !util.isFormatElement(component.previousElementSibling)) && y < (c + 20)) {\r\n                    top = componentTop;\r\n                    dir = 't';\r\n                } else if ((isList ? !component.nextSibling : !util.isFormatElement(component.nextElementSibling)) && y > (c + component.offsetHeight - 20)) {\r\n                    top = componentTop + component.offsetHeight;\r\n                    dir = 'b';\r\n                } else {\r\n                    lineBreakerStyle.display = 'none';\r\n                    return;\r\n                }\r\n\r\n                core._variable._lineBreakComp = component;\r\n                core._variable._lineBreakDir = dir;\r\n                lineBreakerStyle.top = (top - wScroll) + 'px';\r\n                core._lineBreakerButton.style.left = (util.getOffset(component).left + (component.offsetWidth / 2) - 15) + 'px';\r\n                lineBreakerStyle.display = 'block';\r\n            } // off line breaker\r\n            else if (lineBreakerStyle.display !== 'none') {\r\n                lineBreakerStyle.display = 'none';\r\n            }\r\n        },\r\n\r\n        _onMouseDown_lineBreak: function (e) {\r\n            e.preventDefault();\r\n        },\r\n\r\n        _onLineBreak: function (e) {\r\n            e.preventDefault();\r\n            \r\n            const component = core._variable._lineBreakComp;\r\n            const dir = !this ? core._variable._lineBreakDir : this;\r\n            const isList = util.isListCell(component.parentNode);\r\n\r\n            const format = util.createElement(isList ? 'BR' : util.isCell(component.parentNode) ? 'DIV' : options.defaultTag);\r\n            if (!isList) format.innerHTML = '<br>';\r\n\r\n            if (core._charTypeHTML && !core.checkCharCount(format.outerHTML, 'byte-html')) return;\r\n\r\n            component.parentNode.insertBefore(format, dir === 't' ? component : component.nextSibling);\r\n            core._lineBreaker.style.display = 'none';\r\n            core._variable._lineBreakComp = null;\r\n\r\n            const focusEl = isList ? format : format.firstChild;\r\n            core.setRange(focusEl, 1, focusEl, 1);\r\n            // history stack\r\n            core.history.push(false);\r\n        },\r\n\r\n        _resizeObserver: null,\r\n        _toolbarObserver: null,\r\n        _addEvent: function () {\r\n            const eventWysiwyg = options.iframe ? core._ww : context.element.wysiwyg;\r\n            if (util.isResizeObserverSupported) {\r\n                this._resizeObserver = new _w.ResizeObserver(function(entries) {\r\n                    core.__callResizeFunction(-1, entries[0]);\r\n                });\r\n            }\r\n\r\n            /** toolbar event */\r\n            context.element.toolbar.addEventListener('mousedown', event._buttonsEventHandler, false);\r\n            context.element._menuTray.addEventListener('mousedown', event._buttonsEventHandler, false);\r\n            context.element.toolbar.addEventListener('click', event.onClick_toolbar, false);\r\n            /** editor area */\r\n            eventWysiwyg.addEventListener('mousedown', event.onMouseDown_wysiwyg, false);\r\n            eventWysiwyg.addEventListener('click', event.onClick_wysiwyg, false);\r\n            eventWysiwyg.addEventListener(util.isIE ? 'textinput' : 'input', event.onInput_wysiwyg, false);\r\n            eventWysiwyg.addEventListener('keydown', event.onKeyDown_wysiwyg, false);\r\n            eventWysiwyg.addEventListener('keyup', event.onKeyUp_wysiwyg, false);\r\n            eventWysiwyg.addEventListener('paste', event.onPaste_wysiwyg, false);\r\n            eventWysiwyg.addEventListener('copy', event.onCopy_wysiwyg, false);\r\n            eventWysiwyg.addEventListener('cut', event.onCut_wysiwyg, false);\r\n            eventWysiwyg.addEventListener('drop', event.onDrop_wysiwyg, false);\r\n            eventWysiwyg.addEventListener('scroll', event.onScroll_wysiwyg, false);\r\n            eventWysiwyg.addEventListener('focus', event.onFocus_wysiwyg, false);\r\n            eventWysiwyg.addEventListener('blur', event.onBlur_wysiwyg, false);\r\n\r\n            /** line breaker */\r\n            event._lineBreakerBind = { a: event._onLineBreak.bind(''), t: event._onLineBreak.bind('t'), b: event._onLineBreak.bind('b') };\r\n            eventWysiwyg.addEventListener('mousemove', event.onMouseMove_wysiwyg, false);\r\n            core._lineBreakerButton.addEventListener('mousedown', event._onMouseDown_lineBreak, false);\r\n            core._lineBreakerButton.addEventListener('click', event._lineBreakerBind.a, false);\r\n            context.element.lineBreaker_t.addEventListener('mousedown', event._lineBreakerBind.t, false);\r\n            context.element.lineBreaker_b.addEventListener('mousedown', event._lineBreakerBind.b, false);\r\n\r\n            /** Events are registered mobile.  */\r\n            eventWysiwyg.addEventListener('touchstart', event.onMouseDown_wysiwyg, {passive: true, useCapture: false});\r\n            eventWysiwyg.addEventListener('touchend', event.onClick_wysiwyg, {passive: true, useCapture: false});\r\n            \r\n            /** code view area auto line */\r\n            if (options.height === 'auto' && !options.codeMirrorEditor) {\r\n                context.element.code.addEventListener('keydown', event._codeViewAutoHeight, false);\r\n                context.element.code.addEventListener('keyup', event._codeViewAutoHeight, false);\r\n                context.element.code.addEventListener('paste', event._codeViewAutoHeight, false);\r\n            }\r\n\r\n            /** resizingBar */\r\n            if (context.element.resizingBar) {\r\n                if (/\\d+/.test(options.height) && options.resizeEnable) {\r\n                    context.element.resizingBar.addEventListener('mousedown', event.onMouseDown_resizingBar, false);\r\n                } else {\r\n                    util.addClass(context.element.resizingBar, 'se-resizing-none');\r\n                }\r\n            }\r\n            \r\n            /** set response toolbar */\r\n            event._setResponsiveToolbar();\r\n\r\n            /** responsive toolbar observer */\r\n            if (util.isResizeObserverSupported) this._toolbarObserver = new _w.ResizeObserver(core.resetResponsiveToolbar);\r\n            \r\n            /** window event */\r\n            _w.addEventListener('resize', event.onResize_window, false);\r\n            if (options.stickyToolbar > -1) {\r\n                _w.addEventListener('scroll', event.onScroll_window, false);\r\n            }\r\n        },\r\n\r\n        _removeEvent: function () {\r\n            const eventWysiwyg = options.iframe ? core._ww : context.element.wysiwyg;\r\n\r\n            context.element.toolbar.removeEventListener('mousedown', event._buttonsEventHandler);\r\n            context.element._menuTray.removeEventListener('mousedown', event._buttonsEventHandler);\r\n            context.element.toolbar.removeEventListener('click', event.onClick_toolbar);\r\n\r\n            eventWysiwyg.removeEventListener('mousedown', event.onMouseDown_wysiwyg);\r\n            eventWysiwyg.removeEventListener('click', event.onClick_wysiwyg);\r\n            eventWysiwyg.removeEventListener(util.isIE ? 'textinput' : 'input', event.onInput_wysiwyg);\r\n            eventWysiwyg.removeEventListener('keydown', event.onKeyDown_wysiwyg);\r\n            eventWysiwyg.removeEventListener('keyup', event.onKeyUp_wysiwyg);\r\n            eventWysiwyg.removeEventListener('paste', event.onPaste_wysiwyg);\r\n            eventWysiwyg.removeEventListener('copy', event.onCopy_wysiwyg);\r\n            eventWysiwyg.removeEventListener('cut', event.onCut_wysiwyg);\r\n            eventWysiwyg.removeEventListener('drop', event.onDrop_wysiwyg);\r\n            eventWysiwyg.removeEventListener('scroll', event.onScroll_wysiwyg);\r\n\r\n            eventWysiwyg.removeEventListener('mousemove', event.onMouseMove_wysiwyg);\r\n            core._lineBreakerButton.removeEventListener('mousedown', event._onMouseDown_lineBreak);\r\n            core._lineBreakerButton.removeEventListener('click', event._lineBreakerBind.a);\r\n            context.element.lineBreaker_t.removeEventListener('mousedown', event._lineBreakerBind.t);\r\n            context.element.lineBreaker_b.removeEventListener('mousedown', event._lineBreakerBind.b);\r\n            event._lineBreakerBind = null;\r\n            \r\n            eventWysiwyg.removeEventListener('touchstart', event.onMouseDown_wysiwyg, {passive: true, useCapture: false});\r\n            eventWysiwyg.removeEventListener('touchend', event.onClick_wysiwyg, {passive: true, useCapture: false});\r\n            eventWysiwyg.removeEventListener('focus', event.onFocus_wysiwyg);\r\n            eventWysiwyg.removeEventListener('blur', event.onBlur_wysiwyg);\r\n\r\n            context.element.code.removeEventListener('keydown', event._codeViewAutoHeight);\r\n            context.element.code.removeEventListener('keyup', event._codeViewAutoHeight);\r\n            context.element.code.removeEventListener('paste', event._codeViewAutoHeight);\r\n            \r\n            if (context.element.resizingBar) {\r\n                context.element.resizingBar.removeEventListener('mousedown', event.onMouseDown_resizingBar);\r\n            }\r\n            \r\n            if (event._resizeObserver) {\r\n                event._resizeObserver.unobserve(context.element.wysiwygFrame);\r\n                event._resizeObserver = null;\r\n            }\r\n\r\n            if (event._toolbarObserver) {\r\n                event._toolbarObserver.unobserve(context.element._toolbarShadow);\r\n                event._toolbarObserver = null;\r\n            }\r\n\r\n            _w.removeEventListener('resize', event.onResize_window);\r\n            _w.removeEventListener('scroll', event.onScroll_window);\r\n        },\r\n\r\n        _setResponsiveToolbar: function () {\r\n            if (_responsiveButtons.length === 0) {\r\n                _responsiveButtons = null;\r\n                return;\r\n            }\r\n\r\n            event._responsiveCurrentSize = 'default';\r\n            const sizeArray = event._responsiveButtonSize = [];\r\n            const buttonsObj = event._responsiveButtons = {default: _responsiveButtons[0]};\r\n            for (let i = 1, len = _responsiveButtons.length, size, buttonGroup; i < len; i++) {\r\n                buttonGroup = _responsiveButtons[i];\r\n                size = buttonGroup[0] * 1;\r\n                sizeArray.push(size);\r\n                buttonsObj[size] = buttonGroup[1];\r\n            }\r\n\r\n            sizeArray.sort(function (a, b) { return a - b; }).unshift('default');\r\n        }\r\n    };\r\n\r\n    /** functions */\r\n    const functions = {\r\n        /**\r\n         * @description Core, Util object\r\n         */\r\n        core: core,\r\n        util: util,\r\n\r\n        /**\r\n         * @description Event functions\r\n         * @param {Object} e Event Object\r\n         * @param {Object} core Core object\r\n         */\r\n        onload: null,\r\n        onScroll: null,\r\n        onMouseDown: null,\r\n        onClick: null,\r\n        onInput: null,\r\n        onKeyDown: null,\r\n        onKeyUp: null,\r\n        onCopy: null,\r\n        onCut: null,\r\n        onFocus: null,\r\n        \r\n        /**\r\n         * @description Event functions\r\n         * @param {Object} e Event Object\r\n         * @param {Object} core Core object\r\n         * @param {String} contents Current contents\r\n         */\r\n        onBlur: null,\r\n\r\n        /**\r\n         * @description Event functions\r\n         * @param {String} contents Current contents\r\n         * @param {Object} core Core object\r\n         */\r\n        onChange: null,\r\n\r\n        /**\r\n         * @description Event functions\r\n         * @param {String} contents Current contents\r\n         * @param {Object} core Core object\r\n         */\r\n        onSave: null,\r\n\r\n        /**\r\n         * @description Event functions (drop, paste)\r\n         * When false is returned, the default behavior is stopped.\r\n         * If the string is returned, the cleanData value is modified to the return value.\r\n         * @param {Object} e Event object.\r\n         * @param {String} cleanData HTML string modified for editor format.\r\n         * @param {Boolean} maxChartCount option (true if max character is exceeded)\r\n         * @param {Object} core Core object\r\n         * @returns {Boolean|String}\r\n         */\r\n        onDrop: null,\r\n        onPaste: null,\r\n\r\n        /**\r\n         * @description Called just before the inline toolbar is positioned and displayed on the screen.\r\n         * @param {Element} toolbar Toolbar Element\r\n         * @param {Object} context The editor's context object (editor.getContext())\r\n         * @param {Object} core Core object\r\n         */\r\n        showInline: null,\r\n\r\n        /**\r\n         * @description Called just after the controller is positioned and displayed on the screen.\r\n         * controller - editing elements displayed on the screen [image resizing, table editor, link editor..]]\r\n         * @param {String} name The name of the plugin that called the controller\r\n         * @param {Array} controllers Array of Controller elements\r\n         * @param {Object} core Core object\r\n         */\r\n        showController: null,\r\n\r\n        /**\r\n         * @description An event when toggling between code view and wysiwyg view.\r\n         * @param {Boolean} isCodeView Whether the current code view mode\r\n         * @param {Object} core Core object\r\n         */\r\n        toggleCodeView: null,\r\n\r\n        /**\r\n         * @description An event when toggling full screen.\r\n         * @param {Boolean} isFullScreen Whether the current full screen mode\r\n         * @param {Object} core Core object\r\n         */\r\n        toggleFullScreen: null,\r\n\r\n        /**\r\n         * @description It replaces the default callback function of the image upload\r\n         * @param {Object} response Response object\r\n         * @param {Object} info Input information\r\n         * - linkValue: Link url value\r\n         * - linkNewWindow: Open in new window Check Value\r\n         * - inputWidth: Value of width input\r\n         * - inputHeight: Value of height input\r\n         * - align: Align Check Value\r\n         * - isUpdate: Update image if true, create image if false\r\n         * - element: If isUpdate is true, the currently selected image.\r\n         * @param {Object} core Core object\r\n         */\r\n        imageUploadHandler: null,\r\n\r\n        /**\r\n         * @description It replaces the default callback function of the video upload\r\n         * @param xmlHttp xmlHttpRequest object\r\n         * @param info Input information\r\n         * - inputWidth: Value of width input\r\n         * - inputHeight: Value of height input\r\n         * - align: Align Check Value\r\n         * - isUpdate: Update video if true, create video if false\r\n         * - element: If isUpdate is true, the currently selected video.\r\n         * @param core Core object\r\n         */\r\n        videoUploadHandler: null,\r\n\r\n        /**\r\n         * @description It replaces the default callback function of the audio upload\r\n         * @param xmlHttp xmlHttpRequest object\r\n         * @param info Input information\r\n         * - isUpdate: Update audio if true, create audio if false\r\n         * - element: If isUpdate is true, the currently selected audio.\r\n         * @param core Core object\r\n         */\r\n        audioUploadHandler: null,\r\n\r\n        /**\r\n         * @description Called before the image is uploaded\r\n         * If true is returned, the internal upload process runs normally.\r\n         * If false is returned, no image upload is performed.\r\n         * If new fileList are returned,  replaced the previous fileList\r\n         * If undefined is returned, it waits until \"uploadHandler\" is executed.\r\n         * @param {Array} files Files array\r\n         * @param {Object} info info: {\r\n         * - linkValue: Link url value\r\n         * - linkNewWindow: Open in new window Check Value\r\n         * - inputWidth: Value of width input\r\n         * - inputHeight: Value of height input\r\n         * - align: Align Check Value\r\n         * - isUpdate: Update image if true, create image if false\r\n         * - element: If isUpdate is true, the currently selected image.\r\n         * }\r\n         * @param {Object} core Core object\r\n         * @param {Function} uploadHandler If undefined is returned, it waits until \"uploadHandler\" is executed.\r\n         *                \"uploadHandler\" is an upload function with \"core\" and \"info\" bound.\r\n         *                [upload files] : uploadHandler(files or [new File(...),])\r\n         *                [error]        : uploadHandler(\"Error message\")\r\n         *                [Just finish]  : uploadHandler()\r\n         *                [directly register] : uploadHandler(response) // Same format as \"imageUploadUrl\" response\r\n         *                                   ex) {\r\n         *                                      // \"errorMessage\": \"insert error message\",\r\n         *                                      \"result\": [ { \"url\": \"...\", \"name\": \"...\", \"size\": \"999\" }, ]\r\n         *                                   }\r\n         * @returns {Boolean|Array|undefined}\r\n         */\r\n        onImageUploadBefore: null,\r\n        /**\r\n         * @description Called before the video is uploaded\r\n         * If true is returned, the internal upload process runs normally.\r\n         * If false is returned, no video(iframe, video) upload is performed.\r\n         * If new fileList are returned,  replaced the previous fileList\r\n         * If undefined is returned, it waits until \"uploadHandler\" is executed.\r\n         * @param {Array} files Files array\r\n         * @param {Object} info info: {\r\n         * - inputWidth: Value of width input\r\n         * - inputHeight: Value of height input\r\n         * - align: Align Check Value\r\n         * - isUpdate: Update video if true, create video if false\r\n         * - element: If isUpdate is true, the currently selected video.\r\n         * }\r\n         * @param {Object} core Core object\r\n         * @param {Function} uploadHandler If undefined is returned, it waits until \"uploadHandler\" is executed.\r\n         *                \"uploadHandler\" is an upload function with \"core\" and \"info\" bound.\r\n         *                [upload files] : uploadHandler(files or [new File(...),])\r\n         *                [error]        : uploadHandler(\"Error message\")\r\n         *                [Just finish]  : uploadHandler()\r\n         *                [directly register] : uploadHandler(response) // Same format as \"videoUploadUrl\" response\r\n         *                                   ex) {\r\n         *                                      // \"errorMessage\": \"insert error message\",\r\n         *                                      \"result\": [ { \"url\": \"...\", \"name\": \"...\", \"size\": \"999\" }, ]\r\n         *                                   }\r\n         * @returns {Boolean|Array|undefined}\r\n         */\r\n        onVideoUploadBefore: null,\r\n        /**\r\n         * @description Called before the audio is uploaded\r\n         * If true is returned, the internal upload process runs normally.\r\n         * If false is returned, no audio upload is performed.\r\n         * If new fileList are returned,  replaced the previous fileList\r\n         * If undefined is returned, it waits until \"uploadHandler\" is executed.\r\n         * @param {Array} files Files array\r\n         * @param {Object} info info: {\r\n         * - isUpdate: Update audio if true, create audio if false\r\n         * - element: If isUpdate is true, the currently selected audio.\r\n         * }\r\n         * @param {Object} core Core object\r\n         * @param {Function} uploadHandler If undefined is returned, it waits until \"uploadHandler\" is executed.\r\n         *                \"uploadHandler\" is an upload function with \"core\" and \"info\" bound.\r\n         *                [upload files] : uploadHandler(files or [new File(...),])\r\n         *                [error]        : uploadHandler(\"Error message\")\r\n         *                [Just finish]  : uploadHandler()\r\n         *                [directly register] : uploadHandler(response) // Same format as \"audioUploadUrl\" response\r\n         *                                   ex) {\r\n         *                                      // \"errorMessage\": \"insert error message\",\r\n         *                                      \"result\": [ { \"url\": \"...\", \"name\": \"...\", \"size\": \"999\" }, ]\r\n         *                                   }\r\n         * @returns {Boolean|Array|undefined}\r\n         */\r\n        onAudioUploadBefore: null,\r\n\r\n        /**\r\n         * @description Called when the image is uploaded, updated, deleted\r\n         * @param {Element} targetElement Target element\r\n         * @param {Number} index Uploaded index\r\n         * @param {String} state Upload status ('create', 'update', 'delete')\r\n         * @param {Object} info Image info object\r\n         * - index: data index\r\n         * - name: file name\r\n         * - size: file size\r\n         * - select: select function\r\n         * - delete: delete function\r\n         * - element: target element\r\n         * - src: src attribute of tag\r\n         * @param {Number} remainingFilesCount Count of remaining files to upload (0 when added as a url)\r\n         * @param {Object} core Core object\r\n         */\r\n        onImageUpload: null,\r\n         /**\r\n         * @description Called when the video(iframe, video) is is uploaded, updated, deleted\r\n         * -- arguments is same \"onImageUpload\" --\r\n         */\r\n        onVideoUpload: null,\r\n         /**\r\n         * @description Called when the audio is is uploaded, updated, deleted\r\n         * -- arguments is same \"onImageUpload\" --\r\n         */\r\n        onAudioUpload: null,\r\n\r\n        /**\r\n         * @description Called when the image is upload failed\r\n         * @param {String} errorMessage Error message\r\n         * @param {Object} result Response Object\r\n         * @param {Object} core Core object\r\n         * @returns {Boolean}\r\n         */\r\n        onImageUploadError: null,\r\n        /**\r\n         * @description Called when the video(iframe, video) upload failed\r\n         * -- arguments is same \"onImageUploadError\" --\r\n         */\r\n        onVideoUploadError: null,\r\n        /**\r\n         * @description Called when the audio upload failed\r\n         * -- arguments is same \"onImageUploadError\" --\r\n         */\r\n        onAudioUploadError: null,\r\n\r\n        /**\r\n         * @description Called when the editor is resized using the bottom bar\r\n         */\r\n        onResizeEditor: null,\r\n\r\n        /**\r\n         * @description Called after the \"setToolbarButtons\" invocation.\r\n         * Can be used to tweak buttons properties (useful for custom buttons)\r\n         * @param {Array} buttonList Button list \r\n         * @param {Object} core Core object\r\n         */\r\n        onSetToolbarButtons: null,\r\n\r\n        /**\r\n         * @description Reset the buttons on the toolbar. (Editor is not reloaded)\r\n         * You cannot set a new plugin for the button.\r\n         * @param {Array} buttonList Button list \r\n         */\r\n        setToolbarButtons: function (buttonList) {\r\n            core.submenuOff();\r\n            core.containerOff();\r\n            core.moreLayerOff();\r\n            \r\n            const newToolbar = _Constructor._createToolBar(_d, buttonList, core.plugins, options);\r\n            _responsiveButtons = newToolbar.responsiveButtons;\r\n            event._setResponsiveToolbar();\r\n\r\n            context.element.toolbar.replaceChild(newToolbar._buttonTray, context.element._buttonTray);\r\n            const newContext = _Context(context.element.originElement, core._getConstructed(context.element), options);\r\n\r\n            context.element = newContext.element;\r\n            context.tool = newContext.tool;\r\n            if (options.iframe) context.element.wysiwyg = core._wd.body;\r\n\r\n            core._recoverButtonStates();\r\n            core._cachingButtons();\r\n            core.history._resetCachingButton();\r\n\r\n            core.effectNode = null;\r\n            if (core.hasFocus) event._applyTagEffects();\r\n            if (core.isReadOnly) util.setDisabledButtons(true, core.resizingDisabledButtons);\r\n            if (typeof functions.onSetToolbarButtons === 'function') functions.onSetToolbarButtons(newToolbar._buttonTray.querySelectorAll('button'), core);\r\n        },\r\n\r\n        /**\r\n         * @description Add or reset option property (Editor is reloaded)\r\n         * @param {Object} _options Options\r\n         */\r\n        setOptions: function (_options) {\r\n            event._removeEvent();\r\n            core._resetComponents();\r\n            \r\n            util.removeClass(core._styleCommandMap.showBlocks, 'active');\r\n            util.removeClass(core._styleCommandMap.codeView, 'active');\r\n            core._variable.isCodeView = false;\r\n            core._iframeAuto = null;\r\n\r\n            core.plugins = _options.plugins || core.plugins;\r\n            const mergeOptions = [options, _options].reduce(function (init, option) {\r\n                for (let key in option) {\r\n                    if (!util.hasOwn(option, key)) continue;\r\n                    if (key === 'plugins' && option[key] && init[key]) {\r\n                        let i = init[key], o = option[key];\r\n                        i = i.length ? i : _w.Object.keys(i).map(function(name) { return i[name]; });\r\n                        o = o.length ? o : _w.Object.keys(o).map(function(name) { return o[name]; });\r\n                        init[key] = (o.filter(function(val) { return i.indexOf(val) === -1; })).concat(i);\r\n                    } else {\r\n                        init[key] = option[key];\r\n                    }\r\n                }\r\n                return init;\r\n            }, {});\r\n\r\n            const el = context.element;\r\n            const _initHTML = el.wysiwyg.innerHTML;\r\n\r\n            // set option\r\n            const cons = _Constructor._setOptions(mergeOptions, context, options);\r\n\r\n            if (cons.callButtons) {\r\n                pluginCallButtons = cons.callButtons;\r\n                core.initPlugins = {};\r\n            }\r\n\r\n            if (cons.plugins) {\r\n                core.plugins = plugins = cons.plugins;\r\n            }\r\n\r\n            // reset context\r\n            if (el._menuTray.children.length === 0) this._menuTray = {};\r\n            _responsiveButtons = cons.toolbar.responsiveButtons;\r\n            core.options = options = mergeOptions;\r\n            core.lang = lang = options.lang;\r\n\r\n            if (options.iframe) {\r\n                el.wysiwygFrame.addEventListener('load', function () {\r\n                    util._setIframeDocument(this, options);\r\n                    core._setOptionsInit(el, _initHTML);\r\n                });\r\n            }\r\n\r\n            el.editorArea.appendChild(el.wysiwygFrame);\r\n\r\n            if (!options.iframe) {\r\n                core._setOptionsInit(el, _initHTML);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Set \"options.defaultStyle\" style.\r\n         * Define the style of the edit area\r\n         * It can also be defined with the \"setOptions\" method, but the \"setDefaultStyle\" method does not render the editor again.\r\n         * @param {String} style Style string\r\n         */\r\n        setDefaultStyle: function (style) {\r\n            const newStyles = options._editorStyles = util._setDefaultOptionStyle(options, style);\r\n            const el = context.element;\r\n\r\n            // top area\r\n            el.topArea.style.cssText = newStyles.top;\r\n            // code view\r\n            el.code.style.cssText = options._editorStyles.frame;\r\n            el.code.style.display = 'none';\r\n            if (options.height === 'auto') {\r\n                el.code.style.overflow = 'hidden';\r\n            } else {\r\n                el.code.style.overflow = '';\r\n            }\r\n            // wysiwyg frame\r\n            if (!options.iframe) {\r\n                el.wysiwygFrame.style.cssText = newStyles.frame + newStyles.editor;\r\n            } else {\r\n                el.wysiwygFrame.style.cssText = newStyles.frame;\r\n                el.wysiwyg.style.cssText = newStyles.editor;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * @description Open a notice area\r\n         * @param {String} message Notice message\r\n         */\r\n        noticeOpen: function (message) {\r\n            core.notice.open.call(core, message);\r\n        },\r\n\r\n        /**\r\n         * @description Close a notice area\r\n         */\r\n        noticeClose: function () {\r\n            core.notice.close.call(core);\r\n        },\r\n\r\n        /**\r\n         * @description Copying the contents of the editor to the original textarea and execute onSave callback\r\n         * * not working during enabled codeView mode\r\n         */\r\n        save: function () {\r\n            const contents = core.getContents(false);\r\n            context.element.originElement.value = contents;\r\n            event.onSave_wysiwyg(contents, core);\r\n        },\r\n\r\n        /**\r\n         * @description Gets the suneditor's context object. Contains settings, plugins, and cached element objects\r\n         * @returns {Object}\r\n         */\r\n        getContext: function () {\r\n            return context;\r\n        },\r\n\r\n        /**\r\n         * @description Gets the contents of the suneditor\r\n         * * not working during enabled codeView mode\r\n         * @param {Boolean} onlyContents - Return only the contents of the body without headers when the \"fullPage\" option is true\r\n         * @returns {String}\r\n         */\r\n        getContents: function (onlyContents) {\r\n            return core.getContents(onlyContents);\r\n        },\r\n\r\n        /**\r\n         * @description Gets only the text of the suneditor contents\r\n         * * not working during enabled codeView mode\r\n         * @returns {String}\r\n         */\r\n        getText: function () {\r\n            return context.element.wysiwyg.textContent;\r\n        },\r\n\r\n        /**\r\n         * @description Get the editor's number of characters or binary data size.\r\n         * You can use the \"charCounterType\" option format.\r\n         * @param {String|null} charCounterType options - charCounterType ('char', 'byte', 'byte-html')\r\n         * If argument is no value, the currently set \"charCounterType\" option is used.\r\n         * @returns {Number}\r\n         */\r\n        getCharCount: function (charCounterType) {\r\n            charCounterType = typeof charCounterType === 'string' ? charCounterType : options.charCounterType;\r\n            return core.getCharLength((core._charTypeHTML ? context.element.wysiwyg.innerHTML : context.element.wysiwyg.textContent), charCounterType);\r\n        },\r\n\r\n        /**\r\n         * @description Gets uploaded images informations\r\n         * - index: data index\r\n         * - name: file name\r\n         * - size: file size\r\n         * - select: select function\r\n         * - delete: delete function\r\n         * - element: target element\r\n         * - src: src attribute of tag\r\n         * @returns {Array}\r\n         */\r\n        getImagesInfo: function () {\r\n            return context.image ? context.image._infoList : [];\r\n        },\r\n        \r\n        /**\r\n         * @description Gets uploaded files(plugin using fileManager) information list.\r\n         * image: [img], video: [video, iframe], audio: [audio]\r\n         * When the argument value is 'image', it is the same function as \"getImagesInfo\".\r\n         * - index: data index\r\n         * - name: file name\r\n         * - size: file size\r\n         * - select: select function\r\n         * - delete: delete function\r\n         * - element: target element\r\n         * - src: src attribute of tag\r\n         * @param {String} pluginName Plugin name (image, video, audio)\r\n         * @returns {Array}\r\n         */\r\n        getFilesInfo: function (pluginName) {\r\n            return context[pluginName] ? context[pluginName]._infoList : [];\r\n        },\r\n\r\n        /**\r\n         * @description Upload images using image plugin\r\n         * @param {FileList} files FileList\r\n         */\r\n        insertImage: function (files) {\r\n            if (!core.plugins.image || !files) return;\r\n\r\n            if (!core.initPlugins.image) core.callPlugin('image', core.plugins.image.submitAction.bind(core, files), null);\r\n            else core.plugins.image.submitAction.call(core, files);\r\n            core.focus();\r\n        },\r\n\r\n        /**\r\n         * @description Inserts an HTML element or HTML string or plain string at the current cursor position\r\n         * @param {Element|String} html HTML Element or HTML string or plain string\r\n         * @param {Boolean} notCleaningData If true, inserts the HTML string without refining it with core.cleanHTML.\r\n         * @param {Boolean} checkCharCount If true, if \"options.maxCharCount\" is exceeded when \"element\" is added, null is returned without addition.\r\n         * @param {Boolean} rangeSelection If true, range select the inserted node.\r\n         */\r\n        insertHTML: function (html, notCleaningData, checkCharCount, rangeSelection) {\r\n            if (!context.element.wysiwygFrame.contains(core.getSelection().focusNode)) core.focus();\r\n\r\n            if (typeof html === 'string') {\r\n                if (!notCleaningData) html = core.cleanHTML(html, null, null);\r\n                try {\r\n                    if (util.isListCell(util.getFormatElement(core.getSelectionNode(), null))) {\r\n                        const dom = _d.createRange().createContextualFragment(html);\r\n                        const domTree = dom.childNodes;\r\n                        if (core._isFormatData(domTree)) html = core._convertListCell(domTree);\r\n                    }\r\n\r\n                    const dom = _d.createRange().createContextualFragment(html);\r\n                    const domTree = dom.childNodes;\r\n\r\n                    if (checkCharCount) {\r\n                        const type = core._charTypeHTML ? 'outerHTML' : 'textContent';\r\n                        let checkHTML = '';\r\n                        for (let i = 0, len = domTree.length; i < len; i++) {\r\n                            checkHTML += domTree[i][type];\r\n                        }\r\n                        if (!core.checkCharCount(checkHTML, null)) return;\r\n                    }\r\n\r\n                    let c, a, t, prev, firstCon;\r\n                    while ((c = domTree[0])) {\r\n                        if (prev && prev.nodeType === 3 && a && a.nodeType === 1 && util.isBreak(c)) {\r\n                            prev = c;\r\n                            util.removeItem(c);\r\n                            continue;\r\n                        }\r\n                        t = core.insertNode(c, a, false);\r\n                        a = t.container || t;\r\n                        if (!firstCon) firstCon = t;\r\n                        prev = c;\r\n                    }\r\n\r\n                    if (prev.nodeType === 3 && a.nodeType === 1) a = prev;\r\n                    const offset = a.nodeType === 3 ? (t.endOffset || a.textContent.length): a.childNodes.length;\r\n                    if (rangeSelection) core.setRange(firstCon.container || firstCon, firstCon.startOffset || 0, a, offset);\r\n                    else core.setRange(a, offset, a, offset);\r\n                } catch (error) {\r\n                    if (core.isDisabled || core.isReadOnly) return;\r\n                    console.warn('[SUNEDITOR.insertHTML.fail] ' + error);\r\n                    core.execCommand('insertHTML', false, html);\r\n                }\r\n            } else {\r\n                if (util.isComponent(html)) {\r\n                    core.insertComponent(html, false, checkCharCount, false);\r\n                } else {\r\n                    let afterNode = null;\r\n                    if (util.isFormatElement(html) || util.isMedia(html)) {\r\n                        afterNode = util.getFormatElement(core.getSelectionNode(), null);\t\r\n                    }\r\n                    core.insertNode(html, afterNode, checkCharCount);\r\n                }\r\n            }\r\n            \r\n            core.effectNode = null;\r\n            core.focus();\r\n\r\n            // history stack\r\n            core.history.push(false);\r\n        },\r\n\r\n        /**\r\n         * @description Change the contents of the suneditor\r\n         * @param {String|undefined} contents Contents to Input\r\n         */\r\n        setContents: function (contents) {\r\n            core.setContents(contents);\r\n        },\r\n\r\n        /**\r\n         * @description Add contents to the suneditor\r\n         * @param {String} contents Contents to Input\r\n         */\r\n        appendContents: function (contents) {\r\n            const convertValue = core.convertContentsForEditor(contents);\r\n            \r\n            if (!core._variable.isCodeView) {\r\n                const temp = util.createElement('DIV');\r\n                temp.innerHTML = convertValue;\r\n\r\n                const wysiwyg = context.element.wysiwyg;\r\n                const children = temp.children;\r\n                for (let i = 0, len = children.length; i < len; i++) {\r\n                    if (children[i]) {\r\n                        wysiwyg.appendChild(children[i]);         \r\n                    }\r\n                }\r\n            } else {\r\n                core._setCodeView(core._getCodeView() + '\\n' + core.convertHTMLForCodeView(convertValue, false));\r\n            }\r\n\r\n            // history stack\r\n            core.history.push(false);\r\n        },\r\n\r\n        /**\r\n         * @description Switch to or off \"ReadOnly\" mode.\r\n         * @param {Boolean} value \"readOnly\" boolean value.\r\n         */\r\n        readOnly: function (value) {\r\n            core.isReadOnly = value;\r\n            \r\n            util.setDisabledButtons(!!value, core.resizingDisabledButtons);\r\n\r\n            if (value) {\r\n                /** off menus */\r\n                core.controllersOff();\r\n                if (core.submenuActiveButton && core.submenuActiveButton.disabled) core.submenuOff();\r\n                if (core._moreLayerActiveButton && core._moreLayerActiveButton.disabled) core.moreLayerOff();\r\n                if (core.containerActiveButton && core.containerActiveButton.disabled) core.containerOff();\r\n                if (core.modalForm) core.plugins.dialog.close.call(core);\r\n\r\n                context.element.code.setAttribute(\"readOnly\", \"true\");\r\n                util.addClass(context.element.wysiwygFrame, 'se-read-only');\r\n            } else {\r\n                context.element.code.removeAttribute(\"readOnly\");\r\n                util.removeClass(context.element.wysiwygFrame, 'se-read-only');\r\n            }\r\n\r\n            if (options.codeMirrorEditor) options.codeMirrorEditor.setOption('readOnly', !!value);\r\n        },\r\n\r\n        /**\r\n         * @description Disable the suneditor\r\n         */\r\n        disable: function () {\r\n            this.toolbar.disable();\r\n            this.wysiwyg.disable();\r\n        },\r\n\r\n        /**\r\n         * @description Provided for backward compatibility and will be removed in 3.0.0 version\r\n         */\r\n         disabled: function () {\r\n            this.disable();\r\n        },\r\n\r\n        /**\r\n         * @description Enable the suneditor\r\n         */\r\n        enable: function () {\r\n            this.toolbar.enable();\r\n            this.wysiwyg.enable();\r\n        },\r\n\r\n        /**\r\n         * @description Provided for backward compatibility and will be removed in 3.0.0 version\r\n         */\r\n         enabled: function () {\r\n            this.enable();\r\n        },\r\n\r\n        /**\r\n         * @description Show the suneditor\r\n         */\r\n        show: function () {\r\n            const topAreaStyle = context.element.topArea.style;\r\n            if (topAreaStyle.display === 'none') topAreaStyle.display = options.display;\r\n        },\r\n\r\n        /**\r\n         * @description Hide the suneditor\r\n         */\r\n        hide: function () {\r\n            context.element.topArea.style.display = 'none';\r\n        },\r\n\r\n        /**\r\n         * @description Destroy the suneditor\r\n         */\r\n        destroy: function () {\r\n            /** off menus */\r\n            core.submenuOff();\r\n            core.containerOff();\r\n            core.controllersOff();\r\n            if (core.notice) core.notice.close.call(core);\r\n            if (core.modalForm) core.plugins.dialog.close.call(core);\r\n\r\n            /** remove history */\r\n            core.history._destroy();\r\n\r\n            /** remove event listeners */\r\n            event._removeEvent();\r\n            \r\n            /** remove element */\r\n            util.removeItem(context.element.toolbar);\r\n            util.removeItem(context.element.topArea);\r\n\r\n            /** remove object reference */\r\n            for (let k in core.functions) { if (util.hasOwn(core, k)) delete core.functions[k]; }\r\n            for (let k in core) { if (util.hasOwn(core, k)) delete core[k]; }\r\n            for (let k in event) { if (util.hasOwn(event, k)) delete event[k]; }\r\n            for (let k in context) { if (util.hasOwn(context, k)) delete context[k]; }\r\n            for (let k in pluginCallButtons) { if (util.hasOwn(pluginCallButtons, k)) delete pluginCallButtons[k]; }\r\n            \r\n            /** remove user object */\r\n            for (let k in this) { if (util.hasOwn(this, k)) delete this[k]; }\r\n        },\r\n\r\n        /**\r\n         * @description Toolbar methods\r\n         */\r\n        toolbar: {\r\n            /**\r\n             * @description Disable the toolbar\r\n             */\r\n            disable: function () {\r\n                /** off menus */\r\n                core.submenuOff();\r\n                core.moreLayerOff();\r\n                core.containerOff();\r\n\r\n                context.tool.cover.style.display = 'block';\r\n            },\r\n\r\n            /**\r\n             * @description Provided for backward compatibility and will be removed in 3.0.0 version\r\n             */\r\n            disabled: function () {\r\n                this.disable();\r\n            },\r\n\r\n            /**\r\n             * @description Enable the toolbar\r\n             */\r\n            enable: function () {\r\n                context.tool.cover.style.display = 'none';\r\n            },\r\n\r\n            /**\r\n             * @description Provided for backward compatibility and will be removed in 3.0.0 version\r\n             */\r\n             enabled: function () {\r\n                this.enable();\r\n            },\r\n\r\n            /**\r\n             * @description Show the toolbar\r\n             */\r\n            show: function () {\r\n                if (core._isInline) {\r\n                    event._showToolbarInline();\r\n                } else {\r\n                    context.element.toolbar.style.display = '';\r\n                    context.element._stickyDummy.style.display = '';\r\n                }\r\n\r\n                event.onResize_window();\r\n            },\r\n\r\n            /**\r\n             * @description Hide the toolbar\r\n             */\r\n            hide: function () {\r\n                if (core._isInline) {\r\n                    event._hideToolbar();\r\n                } else {\r\n                    context.element.toolbar.style.display = 'none';\r\n                    context.element._stickyDummy.style.display = 'none';\r\n                }\r\n\r\n                event.onResize_window();\r\n            },\r\n        },\r\n\r\n        /**\r\n         * @description Wysiwyg methods\r\n         */\r\n         wysiwyg: {\r\n            /**\r\n             * @description Disable the wysiwyg area\r\n             */\r\n            disable: function () {\r\n               /** off menus */\r\n                core.controllersOff();\r\n                if (core.modalForm) core.plugins.dialog.close.call(core);\r\n\r\n                context.element.wysiwyg.setAttribute('contenteditable', false);\r\n                core.isDisabled = true;\r\n\r\n                if (options.codeMirrorEditor) {\r\n                    options.codeMirrorEditor.setOption('readOnly', true);\r\n                } else {\r\n                    context.element.code.setAttribute('disabled', 'disabled');\r\n                }\r\n            },\r\n\r\n            /**\r\n             * @description Enable the wysiwyg area\r\n             */\r\n            enable: function () {\r\n                context.element.wysiwyg.setAttribute('contenteditable', true);\r\n                core.isDisabled = false;\r\n\r\n                if (options.codeMirrorEditor) {\r\n                    options.codeMirrorEditor.setOption('readOnly', false);\r\n                } else {\r\n                    context.element.code.removeAttribute('disabled');\r\n                }\r\n            },\r\n         }\r\n    };\r\n\r\n    /************ Core init ************/\r\n    // functions\r\n    core.functions = functions;\r\n    core.options = options;\r\n\r\n    // Create to sibling node\r\n    let contextEl = context.element;\r\n    let originEl = contextEl.originElement;\r\n    let topEl = contextEl.topArea;\r\n    originEl.style.display = 'none';\r\n    topEl.style.display = 'block';\r\n\r\n    // init\r\n    if (options.iframe) {\r\n        contextEl.wysiwygFrame.addEventListener('load', function () {\r\n            util._setIframeDocument(this, options);\r\n            core._editorInit(false, options.value);\r\n            options.value = null;\r\n        });\r\n    }\r\n\r\n    // insert editor element\r\n    if (typeof originEl.nextElementSibling === 'object') {\r\n        originEl.parentNode.insertBefore(topEl, originEl.nextElementSibling);\r\n    } else {\r\n        originEl.parentNode.appendChild(topEl);\r\n    }\r\n\r\n    contextEl.editorArea.appendChild(contextEl.wysiwygFrame);\r\n    contextEl = originEl = topEl = null;\r\n\r\n    // init\r\n    if (!options.iframe) {\r\n        core._editorInit(false, options.value);\r\n        options.value = null;\r\n    }\r\n\r\n    return functions;\r\n}"],"mappings":"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E/B;AACR;AACA;AACA;IACQC,wBAAwB,EAAE,IAAI;IAE9B;AACR;AACA;AACA;IACQC,wBAAwB,EAAE,IAAI;IAE9B;AACR;AACA;IACQC,QAAQ,EAAE,KAAK;IAEf;AACR;AACA;IACQC,UAAU,EAAE,KAAK;IAEjB;AACR;AACA;IACQC,UAAU,EAAE,KAAK;IAEjB;AACR;AACA;AACA;IACQC,0BAA0B,EAAE,IAAI;IAChCC,mCAAmC,EAAE,IAAI;IAEzC;AACR;AACA;AACA;IACQC,0BAA0B,EAAE,IAAI;IAEhC;AACR;AACA;AACA;IACQC,wBAAwB,EAAE,IAAI;IAE9B;AACR;AACA;AACA;IACQC,wBAAwB,EAAE,IAAI;IAE9B;AACR;AACA;AACA;IACQC,mBAAmB,EAAE,IAAI;IAEzB;AACR;AACA;AACA;IACQC,SAAS,EAAE,IAAI;IAEf;AACR;AACA;AACA;IACQC,UAAU,EAAE,IAAI;IAEhB;AACR;AACA;AACA;IACQC,gBAAgB,EAAE,IAAI;IAEtB;AACR;AACA;AACA;IACQC,kBAAkB,EAAE;MAACC,GAAG,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAK,CAAC;IAEvD;AACR;AACA;AACA;IACQC,eAAe,EAAE,KAAK;IAEtB;AACR;AACA;AACA;IACQC,OAAO,EAAE,KAAK;IAEd;AACR;AACA;AACA;IACQC,SAAS,EAAE,KAAK;IAEhB;AACR;AACA;AACA;IACQC,YAAY,EAAE,IAAI;IAClBC,kBAAkB,EAAE,IAAI;IAExB;AACR;AACA;AACA;IACQC,mBAAmB,EAAE,IAAI;IACzBC,oBAAoB,EAAE,KAAK;IAE3B;AACR;AACA;AACA;IACQC,aAAa,EAAE,IAAI;IAEnB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQC,eAAe,EAAE,IAAI;IAErB;AACR;AACA;AACA;IACQC,aAAa,EAAE,KAAK;IAEpB;AACR;AACA;AACA;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EolB,CAAC,EAAE;QAAE,OAAOplB,CAAC,GAAGolB,CAAC;MAAE,CAAC,CAAC,CAACh4B,OAAO,CAAC,SAAS,CAAC;IACxE;EACJ,CAAC;;EAED;EACA,MAAMnV,SAAS,GAAG;IACd;AACR;AACA;IACQf,IAAI,EAAEA,IAAI;IACVF,IAAI,EAAEA,IAAI;IAEV;AACR;AACA;AACA;AACA;IACQw/B,MAAM,EAAE,IAAI;IACZyK,QAAQ,EAAE,IAAI;IACdjI,WAAW,EAAE,IAAI;IACjBU,OAAO,EAAE,IAAI;IACbsC,OAAO,EAAE,IAAI;IACbgB,SAAS,EAAE,IAAI;IACf+D,OAAO,EAAE,IAAI;IACboC,MAAM,EAAE,IAAI;IACZI,KAAK,EAAE,IAAI;IACXpC,OAAO,EAAE,IAAI;IAEb;AACR;AACA;AACA;AACA;AACA;IACQE,MAAM,EAAE,IAAI;IAEZ;AACR;AACA;AACA;AACA;IACQvM,QAAQ,EAAE,IAAI;IAEd;AACR;AACA;AACA;AACA;IACQuO,MAAM,EAAE,IAAI;IAEZ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQkB,MAAM,EAAE,IAAI;IACZD,OAAO,EAAE,IAAI;IAEb;AACR;AACA;AACA;AACA;AACA;IACQ1I,UAAU,EAAE,IAAI;IAEhB;AACR;AACA;AACA;AACA;AACA;AACA;IACQj3B,cAAc,EAAE,IAAI;IAEpB;AACR;AACA;AACA;AACA;IACQ8d,cAAc,EAAE,IAAI;IAEpB;AACR;AACA;AACA;AACA;IACQC,gBAAgB,EAAE,IAAI;IAEtB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQqjB,kBAAkB,EAAE,IAAI;IAExB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQC,kBAAkB,EAAE,IAAI;IAExB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;IACQC,kBAAkB,EAAE,IAAI;IAExB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQC,mBAAmB,EAAE,IAAI;IACzB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQC,mBAAmB,EAAE,IAAI;IACzB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQC,mBAAmB,EAAE,IAAI;IAEzB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQC,aAAa,EAAE,IAAI;IAClB;AACT;AACA;AACA;IACQC,aAAa,EAAE,IAAI;IAClB;AACT;AACA;AACA;IACQC,aAAa,EAAE,IAAI;IAEnB;AACR;AACA;AACA;AACA;AACA;AACA;IACQC,kBAAkB,EAAE,IAAI;IACxB;AACR;AACA;AACA;IACQC,kBAAkB,EAAE,IAAI;IACxB;AACR;AACA;AACA;IACQC,kBAAkB,EAAE,IAAI;IAExB;AACR;AACA;IACQpR,cAAc,EAAE,IAAI;IAEpB;AACR;AACA;AACA;AACA;AACA;IACQqR,mBAAmB,EAAE,IAAI;IAEzB;AACR;AACA;AACA;AACA;IACQhW,iBAAiB,EAAE,SAAAA,CAAUiW,UAAU,EAAE;MACrC1vC,IAAI,CAACqK,UAAU,CAAC,CAAC;MACjBrK,IAAI,CAACoL,YAAY,CAAC,CAAC;MACnBpL,IAAI,CAAC6K,YAAY,CAAC,CAAC;MAEnB,MAAM8kC,UAAU,GAAGhxC,YAAY,CAACixC,cAAc,CAACtwC,EAAE,EAAEowC,UAAU,EAAE1vC,IAAI,CAACd,OAAO,EAAEE,OAAO,CAAC;MACrFC,kBAAkB,GAAGswC,UAAU,CAACE,iBAAiB;MACjDlkC,KAAK,CAAC0iC,qBAAqB,CAAC,CAAC;MAE7BrvC,OAAO,CAACO,O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"},"metadata":{},"sourceType":"module","externalDependencies":[]}