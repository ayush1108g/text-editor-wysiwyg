{"ast":null,"code":"/*\n * wysiwyg web editor\n *\n * suneditor.js\n * Copyright 2017 JiHong Lee.\n * MIT license.\n */\n'use strict';\n\nexport default {\n  name: 'blockquote',\n  display: 'command',\n  add: function (core, targetElement) {\n    const context = core.context;\n    context.blockquote = {\n      targetButton: targetElement,\n      tag: core.util.createElement('BLOCKQUOTE')\n    };\n  },\n  /**\n   * @Override core\n   */\n  active: function (element) {\n    if (!element) {\n      this.util.removeClass(this.context.blockquote.targetButton, 'active');\n    } else if (/blockquote/i.test(element.nodeName)) {\n      this.util.addClass(this.context.blockquote.targetButton, 'active');\n      return true;\n    }\n    return false;\n  },\n  /**\n   * @Override core\n   */\n  action: function () {\n    const currentBlockquote = this.util.getParentElement(this.getSelectionNode(), 'blockquote');\n    if (currentBlockquote) {\n      this.detachRangeFormatElement(currentBlockquote, null, null, false, false);\n    } else {\n      this.applyRangeFormatElement(this.context.blockquote.tag.cloneNode(false));\n    }\n  }\n};","map":{"version":3,"names":["name","display","add","core","targetElement","context","blockquote","targetButton","tag","util","createElement","active","element","removeClass","test","nodeName","addClass","action","currentBlockquote","getParentElement","getSelectionNode","detachRangeFormatElement","applyRangeFormatElement","cloneNode"],"sources":["E:/Programming/React/New folder (2)/dynamicArt/dynamic-article/node_modules/suneditor/src/plugins/command/blockquote.js"],"sourcesContent":["/*\n * wysiwyg web editor\n *\n * suneditor.js\n * Copyright 2017 JiHong Lee.\n * MIT license.\n */\n'use strict';\n\nexport default {\n    name: 'blockquote',\n    display: 'command',\n    add: function (core, targetElement) {\n        const context = core.context;\n        context.blockquote = {\n            targetButton: targetElement,\n            tag: core.util.createElement('BLOCKQUOTE')\n        };\n    },\n\n    /**\n     * @Override core\n     */\n    active: function (element) {\n        if (!element) {\n            this.util.removeClass(this.context.blockquote.targetButton, 'active');\n        } else if (/blockquote/i.test(element.nodeName)) {\n            this.util.addClass(this.context.blockquote.targetButton, 'active');\n            return true;\n        }\n        \n        return false;\n    },\n\n    /**\n     * @Override core\n     */\n    action: function () {\n        const currentBlockquote = this.util.getParentElement(this.getSelectionNode(), 'blockquote');\n\n        if (currentBlockquote) {\n            this.detachRangeFormatElement(currentBlockquote, null, null, false, false);\n        } else {\n            this.applyRangeFormatElement(this.context.blockquote.tag.cloneNode(false));\n        }\n    }\n};"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,eAAe;EACXA,IAAI,EAAE,YAAY;EAClBC,OAAO,EAAE,SAAS;EAClBC,GAAG,EAAE,SAAAA,CAAUC,IAAI,EAAEC,aAAa,EAAE;IAChC,MAAMC,OAAO,GAAGF,IAAI,CAACE,OAAO;IAC5BA,OAAO,CAACC,UAAU,GAAG;MACjBC,YAAY,EAAEH,aAAa;MAC3BI,GAAG,EAAEL,IAAI,CAACM,IAAI,CAACC,aAAa,CAAC,YAAY;IAC7C,CAAC;EACL,CAAC;EAED;AACJ;AACA;EACIC,MAAM,EAAE,SAAAA,CAAUC,OAAO,EAAE;IACvB,IAAI,CAACA,OAAO,EAAE;MACV,IAAI,CAACH,IAAI,CAACI,WAAW,CAAC,IAAI,CAACR,OAAO,CAACC,UAAU,CAACC,YAAY,EAAE,QAAQ,CAAC;IACzE,CAAC,MAAM,IAAI,aAAa,CAACO,IAAI,CAACF,OAAO,CAACG,QAAQ,CAAC,EAAE;MAC7C,IAAI,CAACN,IAAI,CAACO,QAAQ,CAAC,IAAI,CAACX,OAAO,CAACC,UAAU,CAACC,YAAY,EAAE,QAAQ,CAAC;MAClE,OAAO,IAAI;IACf;IAEA,OAAO,KAAK;EAChB,CAAC;EAED;AACJ;AACA;EACIU,MAAM,EAAE,SAAAA,CAAA,EAAY;IAChB,MAAMC,iBAAiB,GAAG,IAAI,CAACT,IAAI,CAACU,gBAAgB,CAAC,IAAI,CAACC,gBAAgB,CAAC,CAAC,EAAE,YAAY,CAAC;IAE3F,IAAIF,iBAAiB,EAAE;MACnB,IAAI,CAACG,wBAAwB,CAACH,iBAAiB,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC;IAC9E,CAAC,MAAM;MACH,IAAI,CAACI,uBAAuB,CAAC,IAAI,CAACjB,OAAO,CAACC,UAAU,CAACE,GAAG,CAACe,SAAS,CAAC,KAAK,CAAC,CAAC;IAC9E;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}