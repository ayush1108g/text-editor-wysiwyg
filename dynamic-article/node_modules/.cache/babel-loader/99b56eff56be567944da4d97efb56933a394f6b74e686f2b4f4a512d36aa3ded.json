{"ast":null,"code":"/*\n * wysiwyg web editor\n *\n * suneditor.js\n * Copyright 2017 JiHong Lee.\n * MIT license.\n */\n'use strict';\n\nimport fileBrowser from '../modules/fileBrowser';\nexport default {\n  name: 'imageGallery',\n  /**\n   * @description Constructor\n   * @param {Object} core Core object \n   */\n  add: function (core) {\n    core.addModule([fileBrowser]);\n    const context = core.context;\n    context.imageGallery = {\n      title: core.lang.toolbar.imageGallery,\n      // @Required @Override fileBrowser - File browser window title.\n      url: core.options.imageGalleryUrl,\n      // @Required @Override fileBrowser - File server url.\n      header: core.options.imageGalleryHeader,\n      // @Required @Override fileBrowser - File server http header.\n      listClass: 'se-image-list',\n      // @Required @Override fileBrowser - Class name of list div.\n      itemTemplateHandler: this.drawItems,\n      // @Required @Override fileBrowser - Function that defines the HTML of an file item.\n      selectorHandler: this.setImage.bind(core),\n      // @Required @Override fileBrowser - Function that action when item click.\n      columnSize: 4 // @Option @Override fileBrowser - Number of \"div.se-file-item-column\" to be created (default: 4)\n    };\n  },\n  /**\n   * @Required @Override fileBrowser\n   * @description Open a file browser.\n   * @param {Function|null} selectorHandler When the function comes as an argument value, it substitutes \"context.selectorHandler\".\n   */\n  open: function (selectorHandler) {\n    this.plugins.fileBrowser.open.call(this, 'imageGallery', selectorHandler);\n  },\n  /**\n   * @Required @Override fileBrowser\n   * @description Define the HTML of the item to be put in \"div.se-file-item-column\".\n   * Format: [\n   *      { src: \"image src\", name: \"name(@option)\", alt: \"image alt(@option)\", tag: \"tag name(@option)\" }\n   * ]\n   * @param {Object} item Item of the response data's array\n   */\n  drawItems: function (item) {\n    const srcName = item.src.split('/').pop();\n    return '<div class=\"se-file-item-img\"><img src=\"' + (item.thumbnail || item.src) + '\" alt=\"' + (item.alt || srcName) + '\" data-command=\"pick\" data-value=\"' + (item.src || item.thumbnail) + '\">' + '<div class=\"se-file-img-name se-file-name-back\"></div>' + '<div class=\"se-file-img-name __se__img_name\">' + (item.name || srcName) + '</div>' + '</div>';\n  },\n  setImage: function (target, fileName) {\n    this.callPlugin('image', function () {\n      const file = {\n        name: fileName,\n        size: 0\n      };\n      this.plugins.image.create_image.call(this, target.getAttribute('data-value'), null, this.context.image._origin_w, this.context.image._origin_h, 'none', file, target.alt);\n    }.bind(this), null);\n  }\n};","map":{"version":3,"names":["fileBrowser","name","add","core","addModule","context","imageGallery","title","lang","toolbar","url","options","imageGalleryUrl","header","imageGalleryHeader","listClass","itemTemplateHandler","drawItems","selectorHandler","setImage","bind","columnSize","open","plugins","call","item","srcName","src","split","pop","thumbnail","alt","target","fileName","callPlugin","file","size","image","create_image","getAttribute","_origin_w","_origin_h"],"sources":["E:/Programming/React/New folder (2)/dynamicArt/dynamic-article/node_modules/suneditor/src/plugins/fileBrowser/imageGallery.js"],"sourcesContent":["/*\n * wysiwyg web editor\n *\n * suneditor.js\n * Copyright 2017 JiHong Lee.\n * MIT license.\n */\n'use strict';\n\nimport fileBrowser from '../modules/fileBrowser';\n\nexport default {\n    name: 'imageGallery',\n    /**\n     * @description Constructor\n     * @param {Object} core Core object \n     */\n    add: function (core) {\n        core.addModule([fileBrowser]);\n\n        const context = core.context;\n        context.imageGallery = {\n            title: core.lang.toolbar.imageGallery, // @Required @Override fileBrowser - File browser window title.\n            url: core.options.imageGalleryUrl, // @Required @Override fileBrowser - File server url.\n            header: core.options.imageGalleryHeader, // @Required @Override fileBrowser - File server http header.\n            listClass: 'se-image-list', // @Required @Override fileBrowser - Class name of list div.\n            itemTemplateHandler: this.drawItems, // @Required @Override fileBrowser - Function that defines the HTML of an file item.\n            selectorHandler: this.setImage.bind(core), // @Required @Override fileBrowser - Function that action when item click.\n            columnSize: 4 // @Option @Override fileBrowser - Number of \"div.se-file-item-column\" to be created (default: 4)\n        };\n    },\n    \n    /**\n     * @Required @Override fileBrowser\n     * @description Open a file browser.\n     * @param {Function|null} selectorHandler When the function comes as an argument value, it substitutes \"context.selectorHandler\".\n     */\n    open: function (selectorHandler) {\n        this.plugins.fileBrowser.open.call(this, 'imageGallery', selectorHandler);\n    },\n\n    /**\n     * @Required @Override fileBrowser\n     * @description Define the HTML of the item to be put in \"div.se-file-item-column\".\n     * Format: [\n     *      { src: \"image src\", name: \"name(@option)\", alt: \"image alt(@option)\", tag: \"tag name(@option)\" }\n     * ]\n     * @param {Object} item Item of the response data's array\n     */\n    drawItems: function (item) {\n        const srcName = item.src.split('/').pop();\n        return  '<div class=\"se-file-item-img\"><img src=\"' + (item.thumbnail || item.src) + '\" alt=\"' + (item.alt || srcName) + '\" data-command=\"pick\" data-value=\"' + (item.src || item.thumbnail) + '\">' +\n                    '<div class=\"se-file-img-name se-file-name-back\"></div>' +\n                    '<div class=\"se-file-img-name __se__img_name\">' + (item.name || srcName) + '</div>' +\n                '</div>';\n    },\n\n    setImage: function (target, fileName) {\n        this.callPlugin('image', function () {\n            const file = {name: fileName, size: 0};\n            this.plugins.image.create_image.call(this, target.getAttribute('data-value'), null, this.context.image._origin_w, this.context.image._origin_h, 'none', file, target.alt);\n        }.bind(this), null);\n    }\n};"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,OAAOA,WAAW,MAAM,wBAAwB;AAEhD,eAAe;EACXC,IAAI,EAAE,cAAc;EACpB;AACJ;AACA;AACA;EACIC,GAAG,EAAE,SAAAA,CAAUC,IAAI,EAAE;IACjBA,IAAI,CAACC,SAAS,CAAC,CAACJ,WAAW,CAAC,CAAC;IAE7B,MAAMK,OAAO,GAAGF,IAAI,CAACE,OAAO;IAC5BA,OAAO,CAACC,YAAY,GAAG;MACnBC,KAAK,EAAEJ,IAAI,CAACK,IAAI,CAACC,OAAO,CAACH,YAAY;MAAE;MACvCI,GAAG,EAAEP,IAAI,CAACQ,OAAO,CAACC,eAAe;MAAE;MACnCC,MAAM,EAAEV,IAAI,CAACQ,OAAO,CAACG,kBAAkB;MAAE;MACzCC,SAAS,EAAE,eAAe;MAAE;MAC5BC,mBAAmB,EAAE,IAAI,CAACC,SAAS;MAAE;MACrCC,eAAe,EAAE,IAAI,CAACC,QAAQ,CAACC,IAAI,CAACjB,IAAI,CAAC;MAAE;MAC3CkB,UAAU,EAAE,CAAC,CAAC;IAClB,CAAC;EACL,CAAC;EAED;AACJ;AACA;AACA;AACA;EACIC,IAAI,EAAE,SAAAA,CAAUJ,eAAe,EAAE;IAC7B,IAAI,CAACK,OAAO,CAACvB,WAAW,CAACsB,IAAI,CAACE,IAAI,CAAC,IAAI,EAAE,cAAc,EAAEN,eAAe,CAAC;EAC7E,CAAC;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACID,SAAS,EAAE,SAAAA,CAAUQ,IAAI,EAAE;IACvB,MAAMC,OAAO,GAAGD,IAAI,CAACE,GAAG,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC;IACzC,OAAQ,0CAA0C,IAAIJ,IAAI,CAACK,SAAS,IAAIL,IAAI,CAACE,GAAG,CAAC,GAAG,SAAS,IAAIF,IAAI,CAACM,GAAG,IAAIL,OAAO,CAAC,GAAG,oCAAoC,IAAID,IAAI,CAACE,GAAG,IAAIF,IAAI,CAACK,SAAS,CAAC,GAAG,IAAI,GACtL,wDAAwD,GACxD,+CAA+C,IAAIL,IAAI,CAACxB,IAAI,IAAIyB,OAAO,CAAC,GAAG,QAAQ,GACvF,QAAQ;EACpB,CAAC;EAEDP,QAAQ,EAAE,SAAAA,CAAUa,MAAM,EAAEC,QAAQ,EAAE;IAClC,IAAI,CAACC,UAAU,CAAC,OAAO,EAAE,YAAY;MACjC,MAAMC,IAAI,GAAG;QAAClC,IAAI,EAAEgC,QAAQ;QAAEG,IAAI,EAAE;MAAC,CAAC;MACtC,IAAI,CAACb,OAAO,CAACc,KAAK,CAACC,YAAY,CAACd,IAAI,CAAC,IAAI,EAAEQ,MAAM,CAACO,YAAY,CAAC,YAAY,CAAC,EAAE,IAAI,EAAE,IAAI,CAAClC,OAAO,CAACgC,KAAK,CAACG,SAAS,EAAE,IAAI,CAACnC,OAAO,CAACgC,KAAK,CAACI,SAAS,EAAE,MAAM,EAAEN,IAAI,EAAEH,MAAM,CAACD,GAAG,CAAC;IAC7K,CAAC,CAACX,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC;EACvB;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}