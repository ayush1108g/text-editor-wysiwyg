{"ast":null,"code":"/*\r\n * wysiwyg web editor\r\n *\r\n * suneditor.js\r\n * Copyright 2017 JiHong Lee.\r\n * MIT license.\r\n */\n'use strict';\n\nexport default {\n  name: 'table',\n  display: 'submenu',\n  add: function (core, targetElement) {\n    const context = core.context;\n    let contextTable = context.table = {\n      _element: null,\n      _tdElement: null,\n      _trElement: null,\n      _trElements: null,\n      _tableXY: [],\n      _maxWidth: true,\n      _fixedColumn: false,\n      _rtl: core.options.rtl,\n      cellControllerTop: core.options.tableCellControllerPosition === 'top',\n      resizeText: null,\n      headerButton: null,\n      mergeButton: null,\n      splitButton: null,\n      splitMenu: null,\n      maxText: core.lang.controller.maxSize,\n      minText: core.lang.controller.minSize,\n      _physical_cellCnt: 0,\n      _logical_cellCnt: 0,\n      _rowCnt: 0,\n      _rowIndex: 0,\n      _physical_cellIndex: 0,\n      _logical_cellIndex: 0,\n      _current_colSpan: 0,\n      _current_rowSpan: 0,\n      icons: {\n        expansion: core.icons.expansion,\n        reduction: core.icons.reduction\n      }\n    };\n\n    /** set submenu */\n    let listDiv = this.setSubmenu(core);\n    let tablePicker = listDiv.querySelector('.se-controller-table-picker');\n    contextTable.tableHighlight = listDiv.querySelector('.se-table-size-highlighted');\n    contextTable.tableUnHighlight = listDiv.querySelector('.se-table-size-unhighlighted');\n    contextTable.tableDisplay = listDiv.querySelector('.se-table-size-display');\n    if (core.options.rtl) contextTable.tableHighlight.style.left = 10 * 18 - 13 + 'px';\n\n    /** set table controller */\n    let tableController = this.setController_table(core);\n    contextTable.tableController = tableController;\n    contextTable.resizeButton = tableController.querySelector('._se_table_resize');\n    contextTable.resizeText = tableController.querySelector('._se_table_resize > span > span');\n    contextTable.columnFixedButton = tableController.querySelector('._se_table_fixed_column');\n    contextTable.headerButton = tableController.querySelector('._se_table_header');\n\n    /** set resizing */\n    let resizeDiv = this.setController_tableEditor(core, contextTable.cellControllerTop);\n    contextTable.resizeDiv = resizeDiv;\n    contextTable.splitMenu = resizeDiv.querySelector('.se-btn-group-sub');\n    contextTable.mergeButton = resizeDiv.querySelector('._se_table_merge_button');\n    contextTable.splitButton = resizeDiv.querySelector('._se_table_split_button');\n    contextTable.insertRowAboveButton = resizeDiv.querySelector('._se_table_insert_row_a');\n    contextTable.insertRowBelowButton = resizeDiv.querySelector('._se_table_insert_row_b');\n\n    /** add event listeners */\n    tablePicker.addEventListener('mousemove', this.onMouseMove_tablePicker.bind(core, contextTable));\n    tablePicker.addEventListener('click', this.appendTable.bind(core));\n    resizeDiv.addEventListener('click', this.onClick_tableController.bind(core));\n    tableController.addEventListener('click', this.onClick_tableController.bind(core));\n\n    /** append target button menu */\n    core.initMenuTarget(this.name, targetElement, listDiv);\n\n    /** append controller */\n    context.element.relative.appendChild(resizeDiv);\n    context.element.relative.appendChild(tableController);\n\n    /** empty memory */\n    listDiv = null, tablePicker = null, resizeDiv = null, tableController = null, contextTable = null;\n  },\n  setSubmenu: function (core) {\n    const listDiv = core.util.createElement('DIV');\n    listDiv.className = 'se-submenu se-selector-table';\n    listDiv.innerHTML = '' + '<div class=\"se-table-size\">' + '<div class=\"se-table-size-picker se-controller-table-picker\"></div>' + '<div class=\"se-table-size-highlighted\"></div>' + '<div class=\"se-table-size-unhighlighted\"></div>' + '</div>' + '<div class=\"se-table-size-display\">1 x 1</div>';\n    return listDiv;\n  },\n  setController_table: function (core) {\n    const lang = core.lang;\n    const icons = core.icons;\n    const tableResize = core.util.createElement('DIV');\n    tableResize.className = 'se-controller se-controller-table';\n    tableResize.innerHTML = '' + '<div>' + '<div class=\"se-btn-group\">' + '<button type=\"button\" data-command=\"resize\" class=\"se-btn se-tooltip _se_table_resize\">' + icons.expansion + '<span class=\"se-tooltip-inner\"><span class=\"se-tooltip-text\">' + lang.controller.maxSize + '</span></span>' + '</button>' + '<button type=\"button\" data-command=\"layout\" class=\"se-btn se-tooltip _se_table_fixed_column\">' + icons.fixed_column_width + '<span class=\"se-tooltip-inner\"><span class=\"se-tooltip-text\">' + lang.controller.fixedColumnWidth + '</span></span>' + '</button>' + '<button type=\"button\" data-command=\"header\" class=\"se-btn se-tooltip _se_table_header\">' + icons.table_header + '<span class=\"se-tooltip-inner\"><span class=\"se-tooltip-text\">' + lang.controller.tableHeader + '</span></span>' + '</button>' + '<button type=\"button\" data-command=\"remove\" class=\"se-btn se-tooltip\">' + icons.delete + '<span class=\"se-tooltip-inner\"><span class=\"se-tooltip-text\">' + lang.controller.remove + '</span></span>' + '</button>' + '</div>' + '</div>';\n    return tableResize;\n  },\n  setController_tableEditor: function (core, cellControllerTop) {\n    const lang = core.lang;\n    const icons = core.icons;\n    const tableResize = core.util.createElement('DIV');\n    tableResize.className = 'se-controller se-controller-table-cell';\n    tableResize.innerHTML = (cellControllerTop ? '' : '<div class=\"se-arrow se-arrow-up\"></div>') + '<div class=\"se-btn-group\">' + '<button type=\"button\" data-command=\"insert\" data-value=\"row\" data-option=\"up\" class=\"se-btn se-tooltip _se_table_insert_row_a\">' + icons.insert_row_above + '<span class=\"se-tooltip-inner\"><span class=\"se-tooltip-text\">' + lang.controller.insertRowAbove + '</span></span>' + '</button>' + '<button type=\"button\" data-command=\"insert\" data-value=\"row\" data-option=\"down\" class=\"se-btn se-tooltip _se_table_insert_row_b\">' + icons.insert_row_below + '<span class=\"se-tooltip-inner\"><span class=\"se-tooltip-text\">' + lang.controller.insertRowBelow + '</span></span>' + '</button>' + '<button type=\"button\" data-command=\"delete\" data-value=\"row\" class=\"se-btn se-tooltip\">' + icons.delete_row + '<span class=\"se-tooltip-inner\"><span class=\"se-tooltip-text\">' + lang.controller.deleteRow + '</span></span>' + '</button>' + '<button type=\"button\" data-command=\"merge\" class=\"_se_table_merge_button se-btn se-tooltip\" disabled>' + icons.merge_cell + '<span class=\"se-tooltip-inner\"><span class=\"se-tooltip-text\">' + lang.controller.mergeCells + '</span></span>' + '</button>' + '</div>' + '<div class=\"se-btn-group\" style=\"padding-top: 0;\">' + '<button type=\"button\" data-command=\"insert\" data-value=\"cell\" data-option=\"left\" class=\"se-btn se-tooltip\">' + icons.insert_column_left + '<span class=\"se-tooltip-inner\"><span class=\"se-tooltip-text\">' + lang.controller.insertColumnBefore + '</span></span>' + '</button>' + '<button type=\"button\" data-command=\"insert\" data-value=\"cell\" data-option=\"right\" class=\"se-btn se-tooltip\">' + icons.insert_column_right + '<span class=\"se-tooltip-inner\"><span class=\"se-tooltip-text\">' + lang.controller.insertColumnAfter + '</span></span>' + '</button>' + '<button type=\"button\" data-command=\"delete\" data-value=\"cell\" class=\"se-btn se-tooltip\">' + icons.delete_column + '<span class=\"se-tooltip-inner\"><span class=\"se-tooltip-text\">' + lang.controller.deleteColumn + '</span></span>' + '</button>' + '<button type=\"button\" data-command=\"onsplit\" class=\"_se_table_split_button se-btn se-tooltip\">' + icons.split_cell + '<span class=\"se-tooltip-inner\"><span class=\"se-tooltip-text\">' + lang.controller.splitCells + '</span></span>' + '</button>' + '<div class=\"se-btn-group-sub sun-editor-common se-list-layer se-table-split\">' + '<div class=\"se-list-inner\">' + '<ul class=\"se-list-basic\">' + '<li class=\"se-btn-list\" data-command=\"split\" data-value=\"vertical\" style=\"line-height:32px;\" title=\"' + lang.controller.VerticalSplit + '\" aria-label=\"' + lang.controller.VerticalSplit + '\">' + lang.controller.VerticalSplit + '</li>' + '<li class=\"se-btn-list\" data-command=\"split\" data-value=\"horizontal\" style=\"line-height:32px;\" title=\"' + lang.controller.HorizontalSplit + '\" aria-label=\"' + lang.controller.HorizontalSplit + '\">' + lang.controller.HorizontalSplit + '</li>' + '</ul>' + '</div>' + '</div>' + '</div>';\n    return tableResize;\n  },\n  appendTable: function () {\n    const oTable = this.util.createElement('TABLE');\n    const createCells = this.plugins.table.createCells;\n    const x = this.context.table._tableXY[0];\n    let y = this.context.table._tableXY[1];\n    let tableHTML = '<tbody>';\n    while (y > 0) {\n      tableHTML += '<tr>' + createCells.call(this, 'td', x) + '</tr>';\n      --y;\n    }\n    tableHTML += '</tbody>';\n    oTable.innerHTML = tableHTML;\n    const changed = this.insertComponent(oTable, false, true, false);\n    if (changed) {\n      const firstTd = oTable.querySelector('td div');\n      this.setRange(firstTd, 0, firstTd, 0);\n      this.plugins.table.reset_table_picker.call(this);\n    }\n  },\n  createCells: function (nodeName, cnt, returnElement) {\n    nodeName = nodeName.toLowerCase();\n    if (!returnElement) {\n      let cellsHTML = '';\n      while (cnt > 0) {\n        cellsHTML += '<' + nodeName + '><div><br></div></' + nodeName + '>';\n        cnt--;\n      }\n      return cellsHTML;\n    } else {\n      const cell = this.util.createElement(nodeName);\n      cell.innerHTML = '<div><br></div>';\n      return cell;\n    }\n  },\n  onMouseMove_tablePicker: function (contextTable, e) {\n    e.stopPropagation();\n    let x = this._w.Math.ceil(e.offsetX / 18);\n    let y = this._w.Math.ceil(e.offsetY / 18);\n    x = x < 1 ? 1 : x;\n    y = y < 1 ? 1 : y;\n    if (contextTable._rtl) {\n      contextTable.tableHighlight.style.left = x * 18 - 13 + 'px';\n      x = 11 - x;\n    }\n    contextTable.tableHighlight.style.width = x + 'em';\n    contextTable.tableHighlight.style.height = y + 'em';\n\n    // let x_u = x < 5 ? 5 : (x > 9 ? 10 : x + 1);\n    // let y_u = y < 5 ? 5 : (y > 9 ? 10 : y + 1);\n    // contextTable.tableUnHighlight.style.width = x_u + 'em';\n    // contextTable.tableUnHighlight.style.height = y_u + 'em';\n\n    this.util.changeTxt(contextTable.tableDisplay, x + ' x ' + y);\n    contextTable._tableXY = [x, y];\n  },\n  reset_table_picker: function () {\n    if (!this.context.table.tableHighlight) return;\n    const highlight = this.context.table.tableHighlight.style;\n    const unHighlight = this.context.table.tableUnHighlight.style;\n    highlight.width = '1em';\n    highlight.height = '1em';\n    unHighlight.width = '10em';\n    unHighlight.height = '10em';\n    this.util.changeTxt(this.context.table.tableDisplay, '1 x 1');\n    this.submenuOff();\n  },\n  init: function () {\n    const contextTable = this.context.table;\n    const tablePlugin = this.plugins.table;\n    tablePlugin._removeEvents.call(this);\n    if (tablePlugin._selectedTable) {\n      const selectedCells = tablePlugin._selectedTable.querySelectorAll('.se-table-selected-cell');\n      for (let i = 0, len = selectedCells.length; i < len; i++) {\n        this.util.removeClass(selectedCells[i], 'se-table-selected-cell');\n      }\n    }\n    tablePlugin._toggleEditor.call(this, true);\n    contextTable._element = null;\n    contextTable._tdElement = null;\n    contextTable._trElement = null;\n    contextTable._trElements = null;\n    contextTable._tableXY = [];\n    contextTable._maxWidth = true;\n    contextTable._fixedColumn = false;\n    contextTable._physical_cellCnt = 0;\n    contextTable._logical_cellCnt = 0;\n    contextTable._rowCnt = 0;\n    contextTable._rowIndex = 0;\n    contextTable._physical_cellIndex = 0;\n    contextTable._logical_cellIndex = 0;\n    contextTable._current_colSpan = 0;\n    contextTable._current_rowSpan = 0;\n    tablePlugin._shift = false;\n    tablePlugin._selectedCells = null;\n    tablePlugin._selectedTable = null;\n    tablePlugin._ref = null;\n    tablePlugin._fixedCell = null;\n    tablePlugin._selectedCell = null;\n    tablePlugin._fixedCellName = null;\n  },\n  /** table edit controller */\n  call_controller_tableEdit: function (tdElement) {\n    const tablePlugin = this.plugins.table;\n    const contextTable = this.context.table;\n    if (!this.getSelection().isCollapsed && !tablePlugin._selectedCell) {\n      this.controllersOff();\n      this.util.removeClass(tdElement, 'se-table-selected-cell');\n      return;\n    }\n    const tableElement = contextTable._element || this.plugins.table._selectedTable || this.util.getParentElement(tdElement, 'TABLE');\n    contextTable._maxWidth = this.util.hasClass(tableElement, 'se-table-size-100') || tableElement.style.width === '100%' || !tableElement.style.width && !this.util.hasClass(tableElement, 'se-table-size-auto');\n    contextTable._fixedColumn = this.util.hasClass(tableElement, 'se-table-layout-fixed') || tableElement.style.tableLayout === 'fixed';\n    tablePlugin.setTableStyle.call(this, contextTable._maxWidth ? 'width|column' : 'width');\n    tablePlugin.setPositionControllerTop.call(this, tableElement);\n    tablePlugin.setPositionControllerDiv.call(this, tdElement, tablePlugin._shift);\n    if (!tablePlugin._shift) this.controllersOn(contextTable.resizeDiv, contextTable.tableController, tablePlugin.init.bind(this), tdElement, 'table');\n  },\n  setPositionControllerTop: function (tableElement) {\n    this.setControllerPosition(this.context.table.tableController, tableElement, 'top', {\n      left: 0,\n      top: 0\n    });\n  },\n  setPositionControllerDiv: function (tdElement, reset) {\n    const contextTable = this.context.table;\n    const resizeDiv = contextTable.resizeDiv;\n    this.plugins.table.setCellInfo.call(this, tdElement, reset);\n    if (contextTable.cellControllerTop) {\n      this.setControllerPosition(resizeDiv, contextTable._element, 'top', {\n        left: contextTable.tableController.offsetWidth,\n        top: 0\n      });\n    } else {\n      this.setControllerPosition(resizeDiv, tdElement, 'bottom', {\n        left: 0,\n        top: 0\n      });\n    }\n  },\n  setCellInfo: function (tdElement, reset) {\n    const contextTable = this.context.table;\n    const table = contextTable._element = this.plugins.table._selectedTable || this.util.getParentElement(tdElement, 'TABLE');\n    if (/THEAD/i.test(table.firstElementChild.nodeName)) {\n      this.util.addClass(contextTable.headerButton, 'active');\n    } else {\n      this.util.removeClass(contextTable.headerButton, 'active');\n    }\n    if (reset || contextTable._physical_cellCnt === 0) {\n      if (contextTable._tdElement !== tdElement) {\n        contextTable._tdElement = tdElement;\n        contextTable._trElement = tdElement.parentNode;\n      }\n      const rows = contextTable._trElements = table.rows;\n      const cellIndex = tdElement.cellIndex;\n      let cellCnt = 0;\n      for (let i = 0, cells = rows[0].cells, len = rows[0].cells.length; i < len; i++) {\n        cellCnt += cells[i].colSpan;\n      }\n\n      // row cnt, row index\n      const rowIndex = contextTable._rowIndex = contextTable._trElement.rowIndex;\n      contextTable._rowCnt = rows.length;\n\n      // cell cnt, physical cell index\n      contextTable._physical_cellCnt = contextTable._trElement.cells.length;\n      contextTable._logical_cellCnt = cellCnt;\n      contextTable._physical_cellIndex = cellIndex;\n\n      // span\n      contextTable._current_colSpan = contextTable._tdElement.colSpan - 1;\n      contextTable._current_rowSpan - contextTable._trElement.cells[cellIndex].rowSpan - 1;\n\n      // find logcal cell index\n      let rowSpanArr = [];\n      let spanIndex = [];\n      for (let i = 0, cells, colSpan; i <= rowIndex; i++) {\n        cells = rows[i].cells;\n        colSpan = 0;\n        for (let c = 0, cLen = cells.length, cell, cs, rs, logcalIndex; c < cLen; c++) {\n          cell = cells[c];\n          cs = cell.colSpan - 1;\n          rs = cell.rowSpan - 1;\n          logcalIndex = c + colSpan;\n          if (spanIndex.length > 0) {\n            for (let r = 0, arr; r < spanIndex.length; r++) {\n              arr = spanIndex[r];\n              if (arr.row > i) continue;\n              if (logcalIndex >= arr.index) {\n                colSpan += arr.cs;\n                logcalIndex += arr.cs;\n                arr.rs -= 1;\n                arr.row = i + 1;\n                if (arr.rs < 1) {\n                  spanIndex.splice(r, 1);\n                  r--;\n                }\n              } else if (c === cLen - 1) {\n                arr.rs -= 1;\n                arr.row = i + 1;\n                if (arr.rs < 1) {\n                  spanIndex.splice(r, 1);\n                  r--;\n                }\n              }\n            }\n          }\n\n          // logcal cell index\n          if (i === rowIndex && c === cellIndex) {\n            contextTable._logical_cellIndex = logcalIndex;\n            break;\n          }\n          if (rs > 0) {\n            rowSpanArr.push({\n              index: logcalIndex,\n              cs: cs + 1,\n              rs: rs,\n              row: -1\n            });\n          }\n          colSpan += cs;\n        }\n        spanIndex = spanIndex.concat(rowSpanArr).sort(function (a, b) {\n          return a.index - b.index;\n        });\n        rowSpanArr = [];\n      }\n      rowSpanArr = null;\n      spanIndex = null;\n    }\n  },\n  editTable: function (type, option) {\n    const tablePlugin = this.plugins.table;\n    const contextTable = this.context.table;\n    const table = contextTable._element;\n    const isRow = type === 'row';\n    if (isRow) {\n      const tableAttr = contextTable._trElement.parentNode;\n      if (/^THEAD$/i.test(tableAttr.nodeName)) {\n        if (option === 'up') {\n          return;\n        } else if (!tableAttr.nextElementSibling || !/^TBODY$/i.test(tableAttr.nextElementSibling.nodeName)) {\n          table.innerHTML += '<tbody><tr>' + tablePlugin.createCells.call(this, 'td', contextTable._logical_cellCnt, false) + '</tr></tbody>';\n          return;\n        }\n      }\n    }\n\n    // multi\n    if (tablePlugin._ref) {\n      const positionCell = contextTable._tdElement;\n      const selectedCells = tablePlugin._selectedCells;\n      // multi - row\n      if (isRow) {\n        // remove row\n        if (!option) {\n          let row = selectedCells[0].parentNode;\n          const removeCells = [selectedCells[0]];\n          for (let i = 1, len = selectedCells.length, cell; i < len; i++) {\n            cell = selectedCells[i];\n            if (row !== cell.parentNode) {\n              removeCells.push(cell);\n              row = cell.parentNode;\n            }\n          }\n          for (let i = 0, len = removeCells.length; i < len; i++) {\n            tablePlugin.setCellInfo.call(this, removeCells[i], true);\n            tablePlugin.editRow.call(this, option);\n          }\n        } else {\n          // edit row\n          tablePlugin.setCellInfo.call(this, option === 'up' ? selectedCells[0] : selectedCells[selectedCells.length - 1], true);\n          tablePlugin.editRow.call(this, option, positionCell);\n        }\n      } else {\n        // multi - cell\n        const firstRow = selectedCells[0].parentNode;\n        // remove cell\n        if (!option) {\n          const removeCells = [selectedCells[0]];\n          for (let i = 1, len = selectedCells.length, cell; i < len; i++) {\n            cell = selectedCells[i];\n            if (firstRow === cell.parentNode) {\n              removeCells.push(cell);\n            } else {\n              break;\n            }\n          }\n          for (let i = 0, len = removeCells.length; i < len; i++) {\n            tablePlugin.setCellInfo.call(this, removeCells[i], true);\n            tablePlugin.editCell.call(this, option);\n          }\n        } else {\n          // edit cell\n          let rightCell = null;\n          for (let i = 0, len = selectedCells.length - 1; i < len; i++) {\n            if (firstRow !== selectedCells[i + 1].parentNode) {\n              rightCell = selectedCells[i];\n              break;\n            }\n          }\n          tablePlugin.setCellInfo.call(this, option === 'left' ? selectedCells[0] : rightCell || selectedCells[0], true);\n          tablePlugin.editCell.call(this, option, positionCell);\n        }\n      }\n      if (!option) tablePlugin.init.call(this);\n    } // one\n    else {\n      tablePlugin[isRow ? 'editRow' : 'editCell'].call(this, option);\n    }\n\n    // after remove\n    if (!option) {\n      const children = table.children;\n      for (let i = 0; i < children.length; i++) {\n        if (children[i].children.length === 0) {\n          this.util.removeItem(children[i]);\n          i--;\n        }\n      }\n      if (table.children.length === 0) this.util.removeItem(table);\n    }\n  },\n  editRow: function (option, positionResetElement) {\n    const contextTable = this.context.table;\n    const remove = !option;\n    const up = option === 'up';\n    const originRowIndex = contextTable._rowIndex;\n    const rowIndex = remove || up ? originRowIndex : originRowIndex + contextTable._current_rowSpan + 1;\n    const sign = remove ? -1 : 1;\n    const rows = contextTable._trElements;\n    let cellCnt = contextTable._logical_cellCnt;\n    for (let i = 0, len = originRowIndex + (remove ? -1 : 0), cell; i <= len; i++) {\n      cell = rows[i].cells;\n      if (cell.length === 0) return;\n      for (let c = 0, cLen = cell.length, rs, cs; c < cLen; c++) {\n        rs = cell[c].rowSpan;\n        cs = cell[c].colSpan;\n        if (rs < 2 && cs < 2) continue;\n        if (rs + i > rowIndex && rowIndex > i) {\n          cell[c].rowSpan = rs + sign;\n          cellCnt -= cs;\n        }\n      }\n    }\n    if (remove) {\n      const next = rows[originRowIndex + 1];\n      if (next) {\n        const spanCells = [];\n        let cells = rows[originRowIndex].cells;\n        let colSpan = 0;\n        for (let i = 0, len = cells.length, cell, logcalIndex; i < len; i++) {\n          cell = cells[i];\n          logcalIndex = i + colSpan;\n          colSpan += cell.colSpan - 1;\n          if (cell.rowSpan > 1) {\n            cell.rowSpan -= 1;\n            spanCells.push({\n              cell: cell.cloneNode(false),\n              index: logcalIndex\n            });\n          }\n        }\n        if (spanCells.length > 0) {\n          let spanCell = spanCells.shift();\n          cells = next.cells;\n          colSpan = 0;\n          for (let i = 0, len = cells.length, cell, logcalIndex; i < len; i++) {\n            cell = cells[i];\n            logcalIndex = i + colSpan;\n            colSpan += cell.colSpan - 1;\n            if (logcalIndex >= spanCell.index) {\n              i--, colSpan--;\n              colSpan += spanCell.cell.colSpan - 1;\n              next.insertBefore(spanCell.cell, cell);\n              spanCell = spanCells.shift();\n              if (!spanCell) break;\n            }\n          }\n          if (spanCell) {\n            next.appendChild(spanCell.cell);\n            for (let i = 0, len = spanCells.length; i < len; i++) {\n              next.appendChild(spanCells[i].cell);\n            }\n          }\n        }\n      }\n      contextTable._element.deleteRow(rowIndex);\n    } else {\n      const newRow = contextTable._element.insertRow(rowIndex);\n      newRow.innerHTML = this.plugins.table.createCells.call(this, 'td', cellCnt, false);\n    }\n    if (!remove) {\n      this.plugins.table.setPositionControllerDiv.call(this, positionResetElement || contextTable._tdElement, true);\n    } else {\n      this.controllersOff();\n    }\n  },\n  editCell: function (option, positionResetElement) {\n    const contextTable = this.context.table;\n    const util = this.util;\n    const remove = !option;\n    const left = option === 'left';\n    const colSpan = contextTable._current_colSpan;\n    const cellIndex = remove || left ? contextTable._logical_cellIndex : contextTable._logical_cellIndex + colSpan + 1;\n    const rows = contextTable._trElements;\n    let rowSpanArr = [];\n    let spanIndex = [];\n    let passCell = 0;\n    const removeCell = [];\n    const removeSpanArr = [];\n    for (let i = 0, len = contextTable._rowCnt, row, insertIndex, cells, newCell, applySpan, cellColSpan; i < len; i++) {\n      row = rows[i];\n      insertIndex = cellIndex;\n      applySpan = false;\n      cells = row.cells;\n      cellColSpan = 0;\n      for (let c = 0, cell, cLen = cells.length, rs, cs, removeIndex; c < cLen; c++) {\n        cell = cells[c];\n        if (!cell) break;\n        rs = cell.rowSpan - 1;\n        cs = cell.colSpan - 1;\n        if (!remove) {\n          if (c >= insertIndex) break;\n          if (cs > 0) {\n            if (passCell < 1 && cs + c >= insertIndex) {\n              cell.colSpan += 1;\n              insertIndex = null;\n              passCell = rs + 1;\n              break;\n            }\n            insertIndex -= cs;\n          }\n          if (!applySpan) {\n            for (let r = 0, arr; r < spanIndex.length; r++) {\n              arr = spanIndex[r];\n              insertIndex -= arr.cs;\n              arr.rs -= 1;\n              if (arr.rs < 1) {\n                spanIndex.splice(r, 1);\n                r--;\n              }\n            }\n            applySpan = true;\n          }\n        } else {\n          removeIndex = c + cellColSpan;\n          if (spanIndex.length > 0) {\n            const lastCell = !cells[c + 1];\n            for (let r = 0, arr; r < spanIndex.length; r++) {\n              arr = spanIndex[r];\n              if (arr.row > i) continue;\n              if (removeIndex >= arr.index) {\n                cellColSpan += arr.cs;\n                removeIndex = c + cellColSpan;\n                arr.rs -= 1;\n                arr.row = i + 1;\n                if (arr.rs < 1) {\n                  spanIndex.splice(r, 1);\n                  r--;\n                }\n              } else if (lastCell) {\n                arr.rs -= 1;\n                arr.row = i + 1;\n                if (arr.rs < 1) {\n                  spanIndex.splice(r, 1);\n                  r--;\n                }\n              }\n            }\n          }\n          if (rs > 0) {\n            rowSpanArr.push({\n              rs: rs,\n              cs: cs + 1,\n              index: removeIndex,\n              row: -1\n            });\n          }\n          if (removeIndex >= insertIndex && removeIndex + cs <= insertIndex + colSpan) {\n            removeCell.push(cell);\n          } else if (removeIndex <= insertIndex + colSpan && removeIndex + cs >= insertIndex) {\n            cell.colSpan -= util.getOverlapRangeAtIndex(cellIndex, cellIndex + colSpan, removeIndex, removeIndex + cs);\n          } else if (rs > 0 && (removeIndex < insertIndex || removeIndex + cs > insertIndex + colSpan)) {\n            removeSpanArr.push({\n              cell: cell,\n              i: i,\n              rs: i + rs\n            });\n          }\n          cellColSpan += cs;\n        }\n      }\n      spanIndex = spanIndex.concat(rowSpanArr).sort(function (a, b) {\n        return a.index - b.index;\n      });\n      rowSpanArr = [];\n      if (!remove) {\n        if (passCell > 0) {\n          passCell -= 1;\n          continue;\n        }\n        if (insertIndex !== null && cells.length > 0) {\n          newCell = this.plugins.table.createCells.call(this, cells[0].nodeName, 0, true);\n          newCell = row.insertBefore(newCell, cells[insertIndex]);\n        }\n      }\n    }\n    if (remove) {\n      let removeFirst, removeEnd;\n      for (let r = 0, rLen = removeCell.length, row; r < rLen; r++) {\n        row = removeCell[r].parentNode;\n        util.removeItem(removeCell[r]);\n        if (row.cells.length === 0) {\n          if (!removeFirst) removeFirst = util.getArrayIndex(rows, row);\n          removeEnd = util.getArrayIndex(rows, row);\n          util.removeItem(row);\n        }\n      }\n      for (let c = 0, cLen = removeSpanArr.length, rowSpanCell; c < cLen; c++) {\n        rowSpanCell = removeSpanArr[c];\n        rowSpanCell.cell.rowSpan = util.getOverlapRangeAtIndex(removeFirst, removeEnd, rowSpanCell.i, rowSpanCell.rs);\n      }\n      this.controllersOff();\n    } else {\n      this.plugins.table.setPositionControllerDiv.call(this, positionResetElement || contextTable._tdElement, true);\n    }\n  },\n  _closeSplitMenu: null,\n  openSplitMenu: function () {\n    this.util.addClass(this.context.table.splitButton, 'on');\n    this.context.table.splitMenu.style.display = 'inline-table';\n    this.plugins.table._closeSplitMenu = function () {\n      this.util.removeClass(this.context.table.splitButton, 'on');\n      this.context.table.splitMenu.style.display = 'none';\n      this.removeDocEvent('click', this.plugins.table._closeSplitMenu);\n      this.plugins.table._closeSplitMenu = null;\n    }.bind(this);\n    this.addDocEvent('click', this.plugins.table._closeSplitMenu);\n  },\n  splitCells: function (direction) {\n    const util = this.util;\n    const vertical = direction === 'vertical';\n    const contextTable = this.context.table;\n    const currentCell = contextTable._tdElement;\n    const rows = contextTable._trElements;\n    const currentRow = contextTable._trElement;\n    const index = contextTable._logical_cellIndex;\n    const rowIndex = contextTable._rowIndex;\n    const newCell = this.plugins.table.createCells.call(this, currentCell.nodeName, 0, true);\n\n    // vertical\n    if (vertical) {\n      const currentColSpan = currentCell.colSpan;\n      newCell.rowSpan = currentCell.rowSpan;\n\n      // colspan > 1\n      if (currentColSpan > 1) {\n        newCell.colSpan = this._w.Math.floor(currentColSpan / 2);\n        currentCell.colSpan = currentColSpan - newCell.colSpan;\n        currentRow.insertBefore(newCell, currentCell.nextElementSibling);\n      } else {\n        // colspan - 1\n        let rowSpanArr = [];\n        let spanIndex = [];\n        for (let i = 0, len = contextTable._rowCnt, cells, colSpan; i < len; i++) {\n          cells = rows[i].cells;\n          colSpan = 0;\n          for (let c = 0, cLen = cells.length, cell, cs, rs, logcalIndex; c < cLen; c++) {\n            cell = cells[c];\n            cs = cell.colSpan - 1;\n            rs = cell.rowSpan - 1;\n            logcalIndex = c + colSpan;\n            if (spanIndex.length > 0) {\n              for (let r = 0, arr; r < spanIndex.length; r++) {\n                arr = spanIndex[r];\n                if (arr.row > i) continue;\n                if (logcalIndex >= arr.index) {\n                  colSpan += arr.cs;\n                  logcalIndex += arr.cs;\n                  arr.rs -= 1;\n                  arr.row = i + 1;\n                  if (arr.rs < 1) {\n                    spanIndex.splice(r, 1);\n                    r--;\n                  }\n                } else if (c === cLen - 1) {\n                  arr.rs -= 1;\n                  arr.row = i + 1;\n                  if (arr.rs < 1) {\n                    spanIndex.splice(r, 1);\n                    r--;\n                  }\n                }\n              }\n            }\n            if (logcalIndex <= index && rs > 0) {\n              rowSpanArr.push({\n                index: logcalIndex,\n                cs: cs + 1,\n                rs: rs,\n                row: -1\n              });\n            }\n            if (cell !== currentCell && logcalIndex <= index && logcalIndex + cs >= index + currentColSpan - 1) {\n              cell.colSpan += 1;\n              break;\n            }\n            if (logcalIndex > index) break;\n            colSpan += cs;\n          }\n          spanIndex = spanIndex.concat(rowSpanArr).sort(function (a, b) {\n            return a.index - b.index;\n          });\n          rowSpanArr = [];\n        }\n        currentRow.insertBefore(newCell, currentCell.nextElementSibling);\n      }\n    } else {\n      // horizontal\n      const currentRowSpan = currentCell.rowSpan;\n      newCell.colSpan = currentCell.colSpan;\n\n      // rowspan > 1\n      if (currentRowSpan > 1) {\n        newCell.rowSpan = this._w.Math.floor(currentRowSpan / 2);\n        const newRowSpan = currentRowSpan - newCell.rowSpan;\n        const rowSpanArr = [];\n        const nextRowIndex = util.getArrayIndex(rows, currentRow) + newRowSpan;\n        for (let i = 0, cells, colSpan; i < nextRowIndex; i++) {\n          cells = rows[i].cells;\n          colSpan = 0;\n          for (let c = 0, cLen = cells.length, cell, cs, logcalIndex; c < cLen; c++) {\n            logcalIndex = c + colSpan;\n            if (logcalIndex >= index) break;\n            cell = cells[c];\n            cs = cell.rowSpan - 1;\n            if (cs > 0 && cs + i >= nextRowIndex && logcalIndex < index) {\n              rowSpanArr.push({\n                index: logcalIndex,\n                cs: cell.colSpan\n              });\n            }\n            colSpan += cell.colSpan - 1;\n          }\n        }\n        const nextRow = rows[nextRowIndex];\n        const nextCells = nextRow.cells;\n        let rs = rowSpanArr.shift();\n        for (let c = 0, cLen = nextCells.length, colSpan = 0, cell, cs, logcalIndex, insertIndex; c < cLen; c++) {\n          logcalIndex = c + colSpan;\n          cell = nextCells[c];\n          cs = cell.colSpan - 1;\n          insertIndex = logcalIndex + cs + 1;\n          if (rs && insertIndex >= rs.index) {\n            colSpan += rs.cs;\n            insertIndex += rs.cs;\n            rs = rowSpanArr.shift();\n          }\n          if (insertIndex >= index || c === cLen - 1) {\n            nextRow.insertBefore(newCell, cell.nextElementSibling);\n            break;\n          }\n          colSpan += cs;\n        }\n        currentCell.rowSpan = newRowSpan;\n      } else {\n        // rowspan - 1\n        newCell.rowSpan = currentCell.rowSpan;\n        const newRow = util.createElement('TR');\n        newRow.appendChild(newCell);\n        for (let i = 0, cells; i < rowIndex; i++) {\n          cells = rows[i].cells;\n          if (cells.length === 0) return;\n          for (let c = 0, cLen = cells.length; c < cLen; c++) {\n            if (i + cells[c].rowSpan - 1 >= rowIndex) {\n              cells[c].rowSpan += 1;\n            }\n          }\n        }\n        const physicalIndex = contextTable._physical_cellIndex;\n        const cells = currentRow.cells;\n        for (let c = 0, cLen = cells.length; c < cLen; c++) {\n          if (c === physicalIndex) continue;\n          cells[c].rowSpan += 1;\n        }\n        currentRow.parentNode.insertBefore(newRow, currentRow.nextElementSibling);\n      }\n    }\n    this.focusEdge(currentCell);\n    this.plugins.table.setPositionControllerDiv.call(this, currentCell, true);\n  },\n  mergeCells: function () {\n    const tablePlugin = this.plugins.table;\n    const contextTable = this.context.table;\n    const util = this.util;\n    const ref = tablePlugin._ref;\n    const selectedCells = tablePlugin._selectedCells;\n    const mergeCell = selectedCells[0];\n    let emptyRowFirst = null;\n    let emptyRowLast = null;\n    let cs = ref.ce - ref.cs + 1;\n    let rs = ref.re - ref.rs + 1;\n    let mergeHTML = '';\n    let row = null;\n    for (let i = 1, len = selectedCells.length, cell, ch; i < len; i++) {\n      cell = selectedCells[i];\n      if (row !== cell.parentNode) row = cell.parentNode;\n      ch = cell.children;\n      for (let c = 0, cLen = ch.length; c < cLen; c++) {\n        if (util.isFormatElement(ch[c]) && util.onlyZeroWidthSpace(ch[c].textContent)) {\n          util.removeItem(ch[c]);\n        }\n      }\n      mergeHTML += cell.innerHTML;\n      util.removeItem(cell);\n      if (row.cells.length === 0) {\n        if (!emptyRowFirst) emptyRowFirst = row;else emptyRowLast = row;\n        rs -= 1;\n      }\n    }\n    if (emptyRowFirst) {\n      const rows = contextTable._trElements;\n      const rowIndexFirst = util.getArrayIndex(rows, emptyRowFirst);\n      const rowIndexLast = util.getArrayIndex(rows, emptyRowLast || emptyRowFirst);\n      const removeRows = [];\n      for (let i = 0, cells; i <= rowIndexLast; i++) {\n        cells = rows[i].cells;\n        if (cells.length === 0) {\n          removeRows.push(rows[i]);\n          continue;\n        }\n        for (let c = 0, cLen = cells.length, cell, rs; c < cLen; c++) {\n          cell = cells[c];\n          rs = cell.rowSpan - 1;\n          if (rs > 0 && i + rs >= rowIndexFirst) {\n            cell.rowSpan -= util.getOverlapRangeAtIndex(rowIndexFirst, rowIndexLast, i, i + rs);\n          }\n        }\n      }\n      for (let i = 0, len = removeRows.length; i < len; i++) {\n        util.removeItem(removeRows[i]);\n      }\n    }\n    mergeCell.innerHTML += mergeHTML;\n    mergeCell.colSpan = cs;\n    mergeCell.rowSpan = rs;\n    this.controllersOff();\n    tablePlugin.setActiveButton.call(this, true, false);\n    tablePlugin.call_controller_tableEdit.call(this, mergeCell);\n    util.addClass(mergeCell, 'se-table-selected-cell');\n    this.focusEdge(mergeCell);\n  },\n  toggleHeader: function () {\n    const util = this.util;\n    const headerButton = this.context.table.headerButton;\n    const active = util.hasClass(headerButton, 'active');\n    const table = this.context.table._element;\n    if (!active) {\n      const header = util.createElement('THEAD');\n      header.innerHTML = '<tr>' + this.plugins.table.createCells.call(this, 'th', this.context.table._logical_cellCnt, false) + '</tr>';\n      table.insertBefore(header, table.firstElementChild);\n    } else {\n      util.removeItem(table.querySelector('thead'));\n    }\n    util.toggleClass(headerButton, 'active');\n    if (/TH/i.test(this.context.table._tdElement.nodeName)) {\n      this.controllersOff();\n    } else {\n      this.plugins.table.setPositionControllerDiv.call(this, this.context.table._tdElement, false);\n    }\n  },\n  setTableStyle: function (styles) {\n    const contextTable = this.context.table;\n    const tableElement = contextTable._element;\n    let icon, span, sizeIcon, text;\n    if (styles.indexOf('width') > -1) {\n      icon = contextTable.resizeButton.firstElementChild;\n      span = contextTable.resizeText;\n      if (!contextTable._maxWidth) {\n        sizeIcon = contextTable.icons.expansion;\n        text = contextTable.maxText;\n        contextTable.columnFixedButton.style.display = 'none';\n        this.util.removeClass(tableElement, 'se-table-size-100');\n        this.util.addClass(tableElement, 'se-table-size-auto');\n      } else {\n        sizeIcon = contextTable.icons.reduction;\n        text = contextTable.minText;\n        contextTable.columnFixedButton.style.display = 'block';\n        this.util.removeClass(tableElement, 'se-table-size-auto');\n        this.util.addClass(tableElement, 'se-table-size-100');\n      }\n      this.util.changeElement(icon, sizeIcon);\n      this.util.changeTxt(span, text);\n    }\n    if (styles.indexOf('column') > -1) {\n      if (!contextTable._fixedColumn) {\n        this.util.removeClass(tableElement, 'se-table-layout-fixed');\n        this.util.addClass(tableElement, 'se-table-layout-auto');\n        this.util.removeClass(contextTable.columnFixedButton, 'active');\n      } else {\n        this.util.removeClass(tableElement, 'se-table-layout-auto');\n        this.util.addClass(tableElement, 'se-table-layout-fixed');\n        this.util.addClass(contextTable.columnFixedButton, 'active');\n      }\n    }\n  },\n  setActiveButton: function (fixedCell, selectedCell) {\n    const contextTable = this.context.table;\n    if (/^TH$/i.test(fixedCell.nodeName)) {\n      contextTable.insertRowAboveButton.setAttribute('disabled', true);\n      contextTable.insertRowBelowButton.setAttribute('disabled', true);\n    } else {\n      contextTable.insertRowAboveButton.removeAttribute('disabled');\n      contextTable.insertRowBelowButton.removeAttribute('disabled');\n    }\n    if (!selectedCell || fixedCell === selectedCell) {\n      contextTable.splitButton.removeAttribute('disabled');\n      contextTable.mergeButton.setAttribute('disabled', true);\n    } else {\n      contextTable.splitButton.setAttribute('disabled', true);\n      contextTable.mergeButton.removeAttribute('disabled');\n    }\n  },\n  // multi selecte\n  _bindOnSelect: null,\n  _bindOffSelect: null,\n  _bindOffShift: null,\n  _selectedCells: null,\n  _shift: false,\n  _fixedCell: null,\n  _fixedCellName: null,\n  _selectedCell: null,\n  _selectedTable: null,\n  _ref: null,\n  _toggleEditor: function (enabled) {\n    this.context.element.wysiwyg.setAttribute('contenteditable', enabled);\n    if (enabled) this.util.removeClass(this.context.element.wysiwyg, 'se-disabled');else this.util.addClass(this.context.element.wysiwyg, 'se-disabled');\n  },\n  _offCellMultiSelect: function (e) {\n    e.stopPropagation();\n    const tablePlugin = this.plugins.table;\n    if (!tablePlugin._shift) {\n      tablePlugin._removeEvents.call(this);\n      tablePlugin._toggleEditor.call(this, true);\n    } else if (tablePlugin._initBind) {\n      this._wd.removeEventListener('touchmove', tablePlugin._initBind);\n      tablePlugin._initBind = null;\n    }\n    if (!tablePlugin._fixedCell || !tablePlugin._selectedTable) return;\n    tablePlugin.setActiveButton.call(this, tablePlugin._fixedCell, tablePlugin._selectedCell);\n    tablePlugin.call_controller_tableEdit.call(this, tablePlugin._selectedCell || tablePlugin._fixedCell);\n    tablePlugin._selectedCells = tablePlugin._selectedTable.querySelectorAll('.se-table-selected-cell');\n    if (tablePlugin._selectedCell && tablePlugin._fixedCell) this.focusEdge(tablePlugin._selectedCell);\n    if (!tablePlugin._shift) {\n      tablePlugin._fixedCell = null;\n      tablePlugin._selectedCell = null;\n      tablePlugin._fixedCellName = null;\n    }\n  },\n  _onCellMultiSelect: function (e) {\n    this._antiBlur = true;\n    const tablePlugin = this.plugins.table;\n    const target = this.util.getParentElement(e.target, this.util.isCell);\n    if (tablePlugin._shift) {\n      if (target === tablePlugin._fixedCell) tablePlugin._toggleEditor.call(this, true);else tablePlugin._toggleEditor.call(this, false);\n    } else if (!tablePlugin._ref) {\n      if (target === tablePlugin._fixedCell) return;else tablePlugin._toggleEditor.call(this, false);\n    }\n    if (!target || target === tablePlugin._selectedCell || tablePlugin._fixedCellName !== target.nodeName || tablePlugin._selectedTable !== this.util.getParentElement(target, 'TABLE')) {\n      return;\n    }\n    tablePlugin._selectedCell = target;\n    tablePlugin._setMultiCells.call(this, tablePlugin._fixedCell, target);\n  },\n  _setMultiCells: function (startCell, endCell) {\n    const tablePlugin = this.plugins.table;\n    const rows = tablePlugin._selectedTable.rows;\n    const util = this.util;\n    const selectedCells = tablePlugin._selectedTable.querySelectorAll('.se-table-selected-cell');\n    for (let i = 0, len = selectedCells.length; i < len; i++) {\n      util.removeClass(selectedCells[i], 'se-table-selected-cell');\n    }\n    if (startCell === endCell) {\n      util.addClass(startCell, 'se-table-selected-cell');\n      if (!tablePlugin._shift) return;\n    }\n    let findSelectedCell = true;\n    let spanIndex = [];\n    let rowSpanArr = [];\n    const ref = tablePlugin._ref = {\n      _i: 0,\n      cs: null,\n      ce: null,\n      rs: null,\n      re: null\n    };\n    for (let i = 0, len = rows.length, cells, colSpan; i < len; i++) {\n      cells = rows[i].cells;\n      colSpan = 0;\n      for (let c = 0, cLen = cells.length, cell, logcalIndex, cs, rs; c < cLen; c++) {\n        cell = cells[c];\n        cs = cell.colSpan - 1;\n        rs = cell.rowSpan - 1;\n        logcalIndex = c + colSpan;\n        if (spanIndex.length > 0) {\n          for (let r = 0, arr; r < spanIndex.length; r++) {\n            arr = spanIndex[r];\n            if (arr.row > i) continue;\n            if (logcalIndex >= arr.index) {\n              colSpan += arr.cs;\n              logcalIndex += arr.cs;\n              arr.rs -= 1;\n              arr.row = i + 1;\n              if (arr.rs < 1) {\n                spanIndex.splice(r, 1);\n                r--;\n              }\n            } else if (c === cLen - 1) {\n              arr.rs -= 1;\n              arr.row = i + 1;\n              if (arr.rs < 1) {\n                spanIndex.splice(r, 1);\n                r--;\n              }\n            }\n          }\n        }\n        if (findSelectedCell) {\n          if (cell === startCell || cell === endCell) {\n            ref.cs = ref.cs !== null && ref.cs < logcalIndex ? ref.cs : logcalIndex;\n            ref.ce = ref.ce !== null && ref.ce > logcalIndex + cs ? ref.ce : logcalIndex + cs;\n            ref.rs = ref.rs !== null && ref.rs < i ? ref.rs : i;\n            ref.re = ref.re !== null && ref.re > i + rs ? ref.re : i + rs;\n            ref._i += 1;\n          }\n          if (ref._i === 2) {\n            findSelectedCell = false;\n            spanIndex = [];\n            rowSpanArr = [];\n            i = -1;\n            break;\n          }\n        } else if (util.getOverlapRangeAtIndex(ref.cs, ref.ce, logcalIndex, logcalIndex + cs) && util.getOverlapRangeAtIndex(ref.rs, ref.re, i, i + rs)) {\n          const newCs = ref.cs < logcalIndex ? ref.cs : logcalIndex;\n          const newCe = ref.ce > logcalIndex + cs ? ref.ce : logcalIndex + cs;\n          const newRs = ref.rs < i ? ref.rs : i;\n          const newRe = ref.re > i + rs ? ref.re : i + rs;\n          if (ref.cs !== newCs || ref.ce !== newCe || ref.rs !== newRs || ref.re !== newRe) {\n            ref.cs = newCs;\n            ref.ce = newCe;\n            ref.rs = newRs;\n            ref.re = newRe;\n            i = -1;\n            spanIndex = [];\n            rowSpanArr = [];\n            break;\n          }\n          util.addClass(cell, 'se-table-selected-cell');\n        }\n        if (rs > 0) {\n          rowSpanArr.push({\n            index: logcalIndex,\n            cs: cs + 1,\n            rs: rs,\n            row: -1\n          });\n        }\n        colSpan += cell.colSpan - 1;\n      }\n      spanIndex = spanIndex.concat(rowSpanArr).sort(function (a, b) {\n        return a.index - b.index;\n      });\n      rowSpanArr = [];\n    }\n  },\n  _removeEvents: function () {\n    const tablePlugin = this.plugins.table;\n    if (tablePlugin._initBind) {\n      this._wd.removeEventListener('touchmove', tablePlugin._initBind);\n      tablePlugin._initBind = null;\n    }\n    if (tablePlugin._bindOnSelect) {\n      this._wd.removeEventListener('mousedown', tablePlugin._bindOnSelect);\n      this._wd.removeEventListener('mousemove', tablePlugin._bindOnSelect);\n      tablePlugin._bindOnSelect = null;\n    }\n    if (tablePlugin._bindOffSelect) {\n      this._wd.removeEventListener('mouseup', tablePlugin._bindOffSelect);\n      tablePlugin._bindOffSelect = null;\n    }\n    if (tablePlugin._bindOffShift) {\n      this._wd.removeEventListener('keyup', tablePlugin._bindOffShift);\n      tablePlugin._bindOffShift = null;\n    }\n  },\n  _initBind: null,\n  onTableCellMultiSelect: function (tdElement, shift) {\n    const tablePlugin = this.plugins.table;\n    tablePlugin._removeEvents.call(this);\n    this.controllersOff();\n    tablePlugin._shift = shift;\n    tablePlugin._fixedCell = tdElement;\n    tablePlugin._fixedCellName = tdElement.nodeName;\n    tablePlugin._selectedTable = this.util.getParentElement(tdElement, 'TABLE');\n    const selectedCells = tablePlugin._selectedTable.querySelectorAll('.se-table-selected-cell');\n    for (let i = 0, len = selectedCells.length; i < len; i++) {\n      this.util.removeClass(selectedCells[i], 'se-table-selected-cell');\n    }\n    this.util.addClass(tdElement, 'se-table-selected-cell');\n    tablePlugin._bindOnSelect = tablePlugin._onCellMultiSelect.bind(this);\n    tablePlugin._bindOffSelect = tablePlugin._offCellMultiSelect.bind(this);\n    if (!shift) {\n      this._wd.addEventListener('mousemove', tablePlugin._bindOnSelect, false);\n    } else {\n      tablePlugin._bindOffShift = function () {\n        this.controllersOn(this.context.table.resizeDiv, this.context.table.tableController, this.plugins.table.init.bind(this), tdElement, 'table');\n        if (!tablePlugin._ref) this.controllersOff();\n      }.bind(this);\n      this._wd.addEventListener('keyup', tablePlugin._bindOffShift, false);\n      this._wd.addEventListener('mousedown', tablePlugin._bindOnSelect, false);\n    }\n    this._wd.addEventListener('mouseup', tablePlugin._bindOffSelect, false);\n    tablePlugin._initBind = tablePlugin.init.bind(this);\n    this._wd.addEventListener('touchmove', tablePlugin._initBind, false);\n  },\n  onClick_tableController: function (e) {\n    e.stopPropagation();\n    const target = e.target.getAttribute('data-command') ? e.target : e.target.parentNode;\n    if (target.getAttribute('disabled')) return;\n    const command = target.getAttribute('data-command');\n    const value = target.getAttribute('data-value');\n    const option = target.getAttribute('data-option');\n    const tablePlugin = this.plugins.table;\n    if (typeof tablePlugin._closeSplitMenu === 'function') {\n      tablePlugin._closeSplitMenu();\n      if (command === 'onsplit') return;\n    }\n    if (!command) return;\n    e.preventDefault();\n    const contextTable = this.context.table;\n    switch (command) {\n      case 'insert':\n      case 'delete':\n        tablePlugin.editTable.call(this, value, option);\n        break;\n      case 'header':\n        tablePlugin.toggleHeader.call(this);\n        break;\n      case 'onsplit':\n        tablePlugin.openSplitMenu.call(this);\n        break;\n      case 'split':\n        tablePlugin.splitCells.call(this, value);\n        break;\n      case 'merge':\n        tablePlugin.mergeCells.call(this);\n        break;\n      case 'resize':\n        contextTable._maxWidth = !contextTable._maxWidth;\n        tablePlugin.setTableStyle.call(this, 'width');\n        tablePlugin.setPositionControllerTop.call(this, contextTable._element);\n        tablePlugin.setPositionControllerDiv.call(this, contextTable._tdElement, tablePlugin._shift);\n        break;\n      case 'layout':\n        contextTable._fixedColumn = !contextTable._fixedColumn;\n        tablePlugin.setTableStyle.call(this, 'column');\n        tablePlugin.setPositionControllerTop.call(this, contextTable._element);\n        tablePlugin.setPositionControllerDiv.call(this, contextTable._tdElement, tablePlugin._shift);\n        break;\n      case 'remove':\n        const emptyDiv = contextTable._element.parentNode;\n        this.util.removeItem(contextTable._element);\n        this.controllersOff();\n        if (emptyDiv !== this.context.element.wysiwyg) this.util.removeItemAllParents(emptyDiv, function (current) {\n          return current.childNodes.length === 0;\n        }, null);\n        this.focus();\n    }\n\n    // history stack\n    this.history.push(false);\n  }\n};","map":{"version":3,"names":["name","display","add","core","targetElement","context","contextTable","table","_element","_tdElement","_trElement","_trElements","_tableXY","_maxWidth","_fixedColumn","_rtl","options","rtl","cellControllerTop","tableCellControllerPosition","resizeText","headerButton","mergeButton","splitButton","splitMenu","maxText","lang","controller","maxSize","minText","minSize","_physical_cellCnt","_logical_cellCnt","_rowCnt","_rowIndex","_physical_cellIndex","_logical_cellIndex","_current_colSpan","_current_rowSpan","icons","expansion","reduction","listDiv","setSubmenu","tablePicker","querySelector","tableHighlight","tableUnHighlight","tableDisplay","style","left","tableController","setController_table","resizeButton","columnFixedButton","resizeDiv","setController_tableEditor","insertRowAboveButton","insertRowBelowButton","addEventListener","onMouseMove_tablePicker","bind","appendTable","onClick_tableController","initMenuTarget","element","relative","appendChild","util","createElement","className","innerHTML","tableResize","fixed_column_width","fixedColumnWidth","table_header","tableHeader","delete","remove","insert_row_above","insertRowAbove","insert_row_below","insertRowBelow","delete_row","deleteRow","merge_cell","mergeCells","insert_column_left","insertColumnBefore","insert_column_right","insertColumnAfter","delete_column","deleteColumn","split_cell","splitCells","VerticalSplit","HorizontalSplit","oTable","createCells","plugins","x","y","tableHTML","call","changed","insertComponent","firstTd","setRange","reset_table_picker","nodeName","cnt","returnElement","toLowerCase","cellsHTML","cell","e","stopPropagation","_w","Math","ceil","offsetX","offsetY","width","height","changeTxt","highlight","unHighlight","submenuOff","init","tablePlugin","_removeEvents","_selectedTable","selectedCells","querySelectorAll","i","len","length","removeClass","_toggleEditor","_shift","_selectedCells","_ref","_fixedCell","_selectedCell","_fixedCellName","call_controller_tableEdit","tdElement","getSelection","isCollapsed","controllersOff","tableElement","getParentElement","hasClass","tableLayout","setTableStyle","setPositionControllerTop","setPositionControllerDiv","controllersOn","setControllerPosition","top","reset","setCellInfo","offsetWidth","test","firstElementChild","addClass","parentNode","rows","cellIndex","cellCnt","cells","colSpan","rowIndex","rowSpan","rowSpanArr","spanIndex","c","cLen","cs","rs","logcalIndex","r","arr","row","index","splice","push","concat","sort","a","b","editTable","type","option","isRow","tableAttr","nextElementSibling","positionCell","removeCells","editRow","firstRow","editCell","rightCell","children","removeItem","positionResetElement","up","originRowIndex","sign","next","spanCells","cloneNode","spanCell","shift","insertBefore","newRow","insertRow","passCell","removeCell","removeSpanArr","insertIndex","newCell","applySpan","cellColSpan","removeIndex","lastCell","getOverlapRangeAtIndex","removeFirst","removeEnd","rLen","getArrayIndex","rowSpanCell","_closeSplitMenu","openSplitMenu","removeDocEvent","addDocEvent","direction","vertical","currentCell","currentRow","currentColSpan","floor","currentRowSpan","newRowSpan","nextRowIndex","nextRow","nextCells","physicalIndex","focusEdge","ref","mergeCell","emptyRowFirst","emptyRowLast","ce","re","mergeHTML","ch","isFormatElement","onlyZeroWidthSpace","textContent","rowIndexFirst","rowIndexLast","removeRows","setActiveButton","toggleHeader","active","header","toggleClass","styles","icon","span","sizeIcon","text","indexOf","changeElement","fixedCell","selectedCell","setAttribute","removeAttribute","_bindOnSelect","_bindOffSelect","_bindOffShift","enabled","wysiwyg","_offCellMultiSelect","_initBind","_wd","removeEventListener","_onCellMultiSelect","_antiBlur","target","isCell","_setMultiCells","startCell","endCell","findSelectedCell","_i","newCs","newCe","newRs","newRe","onTableCellMultiSelect","getAttribute","command","value","preventDefault","emptyDiv","removeItemAllParents","current","childNodes","focus","history"],"sources":["E:/Programming/React/New folder (2)/dynamicArt/dynamic-article/node_modules/suneditor/src/plugins/submenu/table.js"],"sourcesContent":["/*\r\n * wysiwyg web editor\r\n *\r\n * suneditor.js\r\n * Copyright 2017 JiHong Lee.\r\n * MIT license.\r\n */\r\n'use strict';\r\n\r\nexport default {\r\n    name: 'table',\r\n    display: 'submenu',\r\n    add: function (core, targetElement) {\r\n        const context = core.context;\r\n        let contextTable = context.table = {\r\n            _element: null,\r\n            _tdElement: null,\r\n            _trElement: null,\r\n            _trElements: null,\r\n            _tableXY: [],\r\n            _maxWidth: true,\r\n            _fixedColumn: false,\r\n            _rtl: core.options.rtl,\r\n            cellControllerTop: core.options.tableCellControllerPosition === 'top',\r\n            resizeText: null,\r\n            headerButton: null,\r\n            mergeButton: null,\r\n            splitButton: null,\r\n            splitMenu: null,\r\n            maxText: core.lang.controller.maxSize,\r\n            minText: core.lang.controller.minSize,\r\n            _physical_cellCnt: 0,\r\n            _logical_cellCnt: 0,\r\n            _rowCnt: 0,\r\n            _rowIndex: 0,\r\n            _physical_cellIndex: 0,\r\n            _logical_cellIndex: 0,\r\n            _current_colSpan: 0,\r\n            _current_rowSpan: 0,\r\n            icons: {\r\n                expansion: core.icons.expansion,\r\n                reduction: core.icons.reduction\r\n            }\r\n        };\r\n\r\n        /** set submenu */\r\n        let listDiv = this.setSubmenu(core);\r\n        let tablePicker = listDiv.querySelector('.se-controller-table-picker');\r\n\r\n        contextTable.tableHighlight = listDiv.querySelector('.se-table-size-highlighted');\r\n        contextTable.tableUnHighlight = listDiv.querySelector('.se-table-size-unhighlighted');\r\n        contextTable.tableDisplay = listDiv.querySelector('.se-table-size-display');\r\n        if (core.options.rtl) contextTable.tableHighlight.style.left = (10 * 18 - 13) + 'px';\r\n\r\n        /** set table controller */\r\n        let tableController = this.setController_table(core);\r\n        contextTable.tableController = tableController;\r\n        contextTable.resizeButton = tableController.querySelector('._se_table_resize');\r\n        contextTable.resizeText = tableController.querySelector('._se_table_resize > span > span');\r\n        contextTable.columnFixedButton = tableController.querySelector('._se_table_fixed_column');\r\n        contextTable.headerButton = tableController.querySelector('._se_table_header');\r\n\r\n        /** set resizing */\r\n        let resizeDiv = this.setController_tableEditor(core, contextTable.cellControllerTop);\r\n        contextTable.resizeDiv = resizeDiv;\r\n        contextTable.splitMenu = resizeDiv.querySelector('.se-btn-group-sub');\r\n        contextTable.mergeButton = resizeDiv.querySelector('._se_table_merge_button');\r\n        contextTable.splitButton = resizeDiv.querySelector('._se_table_split_button');\r\n        contextTable.insertRowAboveButton = resizeDiv.querySelector('._se_table_insert_row_a');\r\n        contextTable.insertRowBelowButton = resizeDiv.querySelector('._se_table_insert_row_b');\r\n        \r\n        /** add event listeners */\r\n        tablePicker.addEventListener('mousemove', this.onMouseMove_tablePicker.bind(core, contextTable));\r\n        tablePicker.addEventListener('click', this.appendTable.bind(core));\r\n        resizeDiv.addEventListener('click', this.onClick_tableController.bind(core));\r\n        tableController.addEventListener('click', this.onClick_tableController.bind(core));\r\n\r\n        /** append target button menu */\r\n        core.initMenuTarget(this.name, targetElement, listDiv);\r\n\r\n        /** append controller */\r\n        context.element.relative.appendChild(resizeDiv);\r\n        context.element.relative.appendChild(tableController);\r\n\r\n        /** empty memory */\r\n        listDiv = null, tablePicker = null, resizeDiv = null, tableController = null, contextTable = null;\r\n    },\r\n\r\n    setSubmenu: function (core) {\r\n        const listDiv = core.util.createElement('DIV');\r\n        listDiv.className = 'se-submenu se-selector-table';\r\n        listDiv.innerHTML = '' +\r\n            '<div class=\"se-table-size\">' +\r\n                '<div class=\"se-table-size-picker se-controller-table-picker\"></div>' +\r\n                '<div class=\"se-table-size-highlighted\"></div>' +\r\n                '<div class=\"se-table-size-unhighlighted\"></div>' +\r\n            '</div>' +\r\n            '<div class=\"se-table-size-display\">1 x 1</div>';\r\n\r\n        return listDiv;\r\n    },\r\n\r\n    setController_table: function (core) {\r\n        const lang = core.lang;\r\n        const icons = core.icons;\r\n        const tableResize = core.util.createElement('DIV');\r\n\r\n        tableResize.className = 'se-controller se-controller-table';\r\n        tableResize.innerHTML = '' +\r\n            '<div>' +\r\n                '<div class=\"se-btn-group\">' +\r\n                    '<button type=\"button\" data-command=\"resize\" class=\"se-btn se-tooltip _se_table_resize\">' +\r\n                        icons.expansion +\r\n                        '<span class=\"se-tooltip-inner\"><span class=\"se-tooltip-text\">' + lang.controller.maxSize + '</span></span>' +\r\n                    '</button>' +\r\n                    '<button type=\"button\" data-command=\"layout\" class=\"se-btn se-tooltip _se_table_fixed_column\">' +\r\n                        icons.fixed_column_width +\r\n                        '<span class=\"se-tooltip-inner\"><span class=\"se-tooltip-text\">' + lang.controller.fixedColumnWidth + '</span></span>' +\r\n                    '</button>' +\r\n                    '<button type=\"button\" data-command=\"header\" class=\"se-btn se-tooltip _se_table_header\">' +\r\n                        icons.table_header +\r\n                        '<span class=\"se-tooltip-inner\"><span class=\"se-tooltip-text\">' + lang.controller.tableHeader + '</span></span>' +\r\n                    '</button>' +\r\n                    '<button type=\"button\" data-command=\"remove\" class=\"se-btn se-tooltip\">' +\r\n                        icons.delete +\r\n                        '<span class=\"se-tooltip-inner\"><span class=\"se-tooltip-text\">' + lang.controller.remove + '</span></span>' +\r\n                    '</button>' +\r\n                '</div>' +\r\n            '</div>';\r\n\r\n        return tableResize;\r\n    },\r\n\r\n    setController_tableEditor: function (core, cellControllerTop) {\r\n        const lang = core.lang;\r\n        const icons = core.icons;\r\n        const tableResize = core.util.createElement('DIV');\r\n\r\n        tableResize.className = 'se-controller se-controller-table-cell';\r\n        tableResize.innerHTML = (cellControllerTop ? '' : '<div class=\"se-arrow se-arrow-up\"></div>') +\r\n            '<div class=\"se-btn-group\">' +\r\n                '<button type=\"button\" data-command=\"insert\" data-value=\"row\" data-option=\"up\" class=\"se-btn se-tooltip _se_table_insert_row_a\">' +\r\n                    icons.insert_row_above +\r\n                    '<span class=\"se-tooltip-inner\"><span class=\"se-tooltip-text\">' + lang.controller.insertRowAbove + '</span></span>' +\r\n                '</button>' +\r\n                '<button type=\"button\" data-command=\"insert\" data-value=\"row\" data-option=\"down\" class=\"se-btn se-tooltip _se_table_insert_row_b\">' +\r\n                    icons.insert_row_below +\r\n                    '<span class=\"se-tooltip-inner\"><span class=\"se-tooltip-text\">' + lang.controller.insertRowBelow + '</span></span>' +\r\n                '</button>' +\r\n                '<button type=\"button\" data-command=\"delete\" data-value=\"row\" class=\"se-btn se-tooltip\">' +\r\n                    icons.delete_row +\r\n                    '<span class=\"se-tooltip-inner\"><span class=\"se-tooltip-text\">' + lang.controller.deleteRow + '</span></span>' +\r\n                '</button>' +\r\n                '<button type=\"button\" data-command=\"merge\" class=\"_se_table_merge_button se-btn se-tooltip\" disabled>' +\r\n                    icons.merge_cell +\r\n                    '<span class=\"se-tooltip-inner\"><span class=\"se-tooltip-text\">' + lang.controller.mergeCells + '</span></span>' +\r\n                '</button>' +\r\n            '</div>' +\r\n            '<div class=\"se-btn-group\" style=\"padding-top: 0;\">' +\r\n                '<button type=\"button\" data-command=\"insert\" data-value=\"cell\" data-option=\"left\" class=\"se-btn se-tooltip\">' +\r\n                    icons.insert_column_left +\r\n                    '<span class=\"se-tooltip-inner\"><span class=\"se-tooltip-text\">' + lang.controller.insertColumnBefore + '</span></span>' +\r\n                '</button>' +\r\n                '<button type=\"button\" data-command=\"insert\" data-value=\"cell\" data-option=\"right\" class=\"se-btn se-tooltip\">' +\r\n                    icons.insert_column_right +\r\n                    '<span class=\"se-tooltip-inner\"><span class=\"se-tooltip-text\">' + lang.controller.insertColumnAfter + '</span></span>' +\r\n                '</button>' +\r\n                '<button type=\"button\" data-command=\"delete\" data-value=\"cell\" class=\"se-btn se-tooltip\">' +\r\n                    icons.delete_column +\r\n                    '<span class=\"se-tooltip-inner\"><span class=\"se-tooltip-text\">' + lang.controller.deleteColumn + '</span></span>' +\r\n                '</button>' +\r\n                '<button type=\"button\" data-command=\"onsplit\" class=\"_se_table_split_button se-btn se-tooltip\">' +\r\n                    icons.split_cell +\r\n                    '<span class=\"se-tooltip-inner\"><span class=\"se-tooltip-text\">' + lang.controller.splitCells + '</span></span>' +\r\n                '</button>' +\r\n                '<div class=\"se-btn-group-sub sun-editor-common se-list-layer se-table-split\">' +\r\n                    '<div class=\"se-list-inner\">' +\r\n                        '<ul class=\"se-list-basic\">' +\r\n                            '<li class=\"se-btn-list\" data-command=\"split\" data-value=\"vertical\" style=\"line-height:32px;\" title=\"' + lang.controller.VerticalSplit + '\" aria-label=\"' + lang.controller.VerticalSplit + '\">' + \r\n                                lang.controller.VerticalSplit + '</li>' +\r\n                            '<li class=\"se-btn-list\" data-command=\"split\" data-value=\"horizontal\" style=\"line-height:32px;\" title=\"' + lang.controller.HorizontalSplit + '\" aria-label=\"' + lang.controller.HorizontalSplit + '\">' + \r\n                                lang.controller.HorizontalSplit + '</li>' +\r\n                        '</ul>' +\r\n                    '</div>' +\r\n                '</div>' +\r\n            '</div>';\r\n\r\n        return tableResize;\r\n    },\r\n\r\n    appendTable: function () {\r\n        const oTable = this.util.createElement('TABLE');\r\n        const createCells = this.plugins.table.createCells;\r\n\r\n        const x = this.context.table._tableXY[0];\r\n        let y = this.context.table._tableXY[1];\r\n        let tableHTML = '<tbody>';\r\n        while (y > 0) {\r\n            tableHTML += '<tr>' + createCells.call(this, 'td', x) + '</tr>';\r\n            --y;\r\n        }\r\n        tableHTML += '</tbody>';\r\n        oTable.innerHTML = tableHTML;\r\n\r\n        const changed = this.insertComponent(oTable, false, true, false);\r\n        \r\n        if (changed) {\r\n            const firstTd = oTable.querySelector('td div');\r\n            this.setRange(firstTd, 0, firstTd, 0);\r\n            this.plugins.table.reset_table_picker.call(this);\r\n        }\r\n    },\r\n\r\n    createCells: function (nodeName, cnt, returnElement) {\r\n        nodeName = nodeName.toLowerCase();\r\n\r\n        if (!returnElement) {\r\n            let cellsHTML = '';\r\n            while (cnt > 0) {\r\n                cellsHTML += '<' +nodeName + '><div><br></div></' + nodeName + '>';\r\n                cnt--;\r\n            }\r\n            return cellsHTML;\r\n        } else {\r\n            const cell = this.util.createElement(nodeName);\r\n            cell.innerHTML = '<div><br></div>';\r\n            return cell;\r\n        }\r\n    },\r\n\r\n    onMouseMove_tablePicker: function (contextTable, e) {\r\n        e.stopPropagation();\r\n\r\n        let x = this._w.Math.ceil(e.offsetX / 18);\r\n        let y = this._w.Math.ceil(e.offsetY / 18);\r\n        x = x < 1 ? 1 : x;\r\n        y = y < 1 ? 1 : y;\r\n        \r\n        if (contextTable._rtl) {\r\n            contextTable.tableHighlight.style.left = (x * 18 - 13) + 'px';\r\n            x = 11 - x;\r\n        }\r\n        \r\n        contextTable.tableHighlight.style.width = x + 'em';\r\n        contextTable.tableHighlight.style.height = y + 'em';\r\n\r\n        // let x_u = x < 5 ? 5 : (x > 9 ? 10 : x + 1);\r\n        // let y_u = y < 5 ? 5 : (y > 9 ? 10 : y + 1);\r\n        // contextTable.tableUnHighlight.style.width = x_u + 'em';\r\n        // contextTable.tableUnHighlight.style.height = y_u + 'em';\r\n\r\n        this.util.changeTxt(contextTable.tableDisplay, x + ' x ' + y);\r\n        contextTable._tableXY = [x, y];\r\n    },\r\n\r\n    reset_table_picker: function () {\r\n        if (!this.context.table.tableHighlight) return;\r\n\r\n        const highlight = this.context.table.tableHighlight.style;\r\n        const unHighlight = this.context.table.tableUnHighlight.style;\r\n\r\n        highlight.width = '1em';\r\n        highlight.height = '1em';\r\n        unHighlight.width = '10em';\r\n        unHighlight.height = '10em';\r\n\r\n        this.util.changeTxt(this.context.table.tableDisplay, '1 x 1');\r\n        this.submenuOff();\r\n    },\r\n\r\n    init: function () {\r\n        const contextTable = this.context.table;\r\n        const tablePlugin = this.plugins.table;\r\n\r\n        tablePlugin._removeEvents.call(this);\r\n\r\n        if (tablePlugin._selectedTable) {\r\n            const selectedCells = tablePlugin._selectedTable.querySelectorAll('.se-table-selected-cell');\r\n            for (let i = 0, len = selectedCells.length; i < len; i++) {\r\n                this.util.removeClass(selectedCells[i], 'se-table-selected-cell');\r\n            }\r\n        }\r\n\r\n        tablePlugin._toggleEditor.call(this, true);\r\n\r\n        contextTable._element = null;\r\n        contextTable._tdElement = null;\r\n        contextTable._trElement = null;\r\n        contextTable._trElements = null;\r\n        contextTable._tableXY = [];\r\n        contextTable._maxWidth = true;\r\n        contextTable._fixedColumn = false;\r\n        contextTable._physical_cellCnt = 0;\r\n        contextTable._logical_cellCnt = 0;\r\n        contextTable._rowCnt = 0;\r\n        contextTable._rowIndex = 0;\r\n        contextTable._physical_cellIndex = 0;\r\n        contextTable._logical_cellIndex = 0;\r\n        contextTable._current_colSpan = 0;\r\n        contextTable._current_rowSpan = 0;\r\n\r\n        tablePlugin._shift = false;\r\n        tablePlugin._selectedCells = null;\r\n        tablePlugin._selectedTable = null;\r\n        tablePlugin._ref = null;\r\n\r\n        tablePlugin._fixedCell = null;\r\n        tablePlugin._selectedCell = null;\r\n        tablePlugin._fixedCellName = null;\r\n    },\r\n\r\n    /** table edit controller */\r\n    call_controller_tableEdit: function (tdElement) {\r\n        const tablePlugin = this.plugins.table;\r\n        const contextTable = this.context.table;\r\n\r\n        if (!this.getSelection().isCollapsed && !tablePlugin._selectedCell) {\r\n            this.controllersOff();\r\n            this.util.removeClass(tdElement, 'se-table-selected-cell');\r\n            return;\r\n        }\r\n\r\n        const tableElement = contextTable._element || this.plugins.table._selectedTable || this.util.getParentElement(tdElement, 'TABLE');\r\n        contextTable._maxWidth = this.util.hasClass(tableElement, 'se-table-size-100') || tableElement.style.width === '100%' || (!tableElement.style.width && !this.util.hasClass(tableElement, 'se-table-size-auto'));\r\n        contextTable._fixedColumn = this.util.hasClass(tableElement, 'se-table-layout-fixed') || tableElement.style.tableLayout === 'fixed';\r\n        tablePlugin.setTableStyle.call(this, contextTable._maxWidth ? 'width|column' : 'width');\r\n        \r\n        tablePlugin.setPositionControllerTop.call(this, tableElement);\r\n        tablePlugin.setPositionControllerDiv.call(this, tdElement, tablePlugin._shift);\r\n        \r\n        if (!tablePlugin._shift) this.controllersOn(contextTable.resizeDiv, contextTable.tableController, tablePlugin.init.bind(this), tdElement, 'table');\r\n    },\r\n\r\n    setPositionControllerTop: function (tableElement) {\r\n        this.setControllerPosition(this.context.table.tableController, tableElement, 'top', {left: 0, top: 0});\r\n    },\r\n\r\n    setPositionControllerDiv: function (tdElement, reset) {\r\n        const contextTable = this.context.table;\r\n        const resizeDiv = contextTable.resizeDiv;\r\n        \r\n        this.plugins.table.setCellInfo.call(this, tdElement, reset);\r\n        \r\n        if (contextTable.cellControllerTop) {\r\n            this.setControllerPosition(resizeDiv, contextTable._element, 'top', {left: contextTable.tableController.offsetWidth, top: 0});\r\n        } else {\r\n            this.setControllerPosition(resizeDiv, tdElement, 'bottom', {left: 0, top: 0});\r\n        }\r\n    },\r\n\r\n    setCellInfo: function (tdElement, reset) {\r\n        const contextTable = this.context.table;\r\n        const table = contextTable._element = this.plugins.table._selectedTable || this.util.getParentElement(tdElement, 'TABLE');\r\n\r\n        if (/THEAD/i.test(table.firstElementChild.nodeName)) {\r\n            this.util.addClass(contextTable.headerButton, 'active');\r\n        } else {\r\n            this.util.removeClass(contextTable.headerButton, 'active');\r\n        }\r\n\r\n        if (reset || contextTable._physical_cellCnt === 0) {\r\n            if (contextTable._tdElement !== tdElement) {\r\n                contextTable._tdElement = tdElement;\r\n                contextTable._trElement = tdElement.parentNode;\r\n            }\r\n\r\n            const rows = contextTable._trElements = table.rows;\r\n            const cellIndex = tdElement.cellIndex;\r\n\r\n            let cellCnt = 0;\r\n            for (let i = 0, cells = rows[0].cells, len = rows[0].cells.length; i < len; i++) {\r\n                cellCnt += cells[i].colSpan;\r\n            }\r\n\r\n            // row cnt, row index\r\n            const rowIndex = contextTable._rowIndex = contextTable._trElement.rowIndex;\r\n            contextTable._rowCnt = rows.length;\r\n\r\n            // cell cnt, physical cell index\r\n            contextTable._physical_cellCnt = contextTable._trElement.cells.length;\r\n            contextTable._logical_cellCnt = cellCnt;\r\n            contextTable._physical_cellIndex = cellIndex;\r\n\r\n            // span\r\n            contextTable._current_colSpan = contextTable._tdElement.colSpan - 1;\r\n            contextTable._current_rowSpan - contextTable._trElement.cells[cellIndex].rowSpan - 1;\r\n\r\n            // find logcal cell index\r\n            let rowSpanArr = [];\r\n            let spanIndex = [];\r\n            for (let i = 0, cells, colSpan; i <= rowIndex; i++) {\r\n                cells = rows[i].cells;\r\n                colSpan = 0;\r\n                for (let c = 0, cLen = cells.length, cell, cs, rs, logcalIndex; c < cLen; c++) {\r\n                    cell = cells[c];\r\n                    cs = cell.colSpan - 1;\r\n                    rs = cell.rowSpan - 1;\r\n                    logcalIndex = c + colSpan;\r\n\r\n                    if (spanIndex.length > 0) {\r\n                        for (let r = 0, arr; r < spanIndex.length; r++) {\r\n                            arr = spanIndex[r];\r\n                            if (arr.row > i) continue;\r\n                            if (logcalIndex >= arr.index) {\r\n                                colSpan += arr.cs;\r\n                                logcalIndex += arr.cs;\r\n                                arr.rs -= 1;\r\n                                arr.row = i + 1;\r\n                                if (arr.rs < 1) {\r\n                                    spanIndex.splice(r, 1);\r\n                                    r--;\r\n                                }  \r\n                            } else if (c === cLen - 1) {\r\n                                arr.rs -= 1;\r\n                                arr.row = i + 1;\r\n                                if (arr.rs < 1) {\r\n                                    spanIndex.splice(r, 1);\r\n                                    r--;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // logcal cell index\r\n                    if (i === rowIndex && c === cellIndex) {\r\n                        contextTable._logical_cellIndex = logcalIndex;\r\n                        break;\r\n                    }\r\n\r\n                    if (rs > 0) {\r\n                        rowSpanArr.push({\r\n                            index: logcalIndex,\r\n                            cs: cs + 1,\r\n                            rs: rs,\r\n                            row: -1\r\n                        });\r\n                    }\r\n                    \r\n                    colSpan += cs;\r\n                }\r\n\r\n                spanIndex = spanIndex.concat(rowSpanArr).sort(function (a, b) {return a.index - b.index;});\r\n                rowSpanArr = [];\r\n            }\r\n\r\n            rowSpanArr = null;\r\n            spanIndex = null;\r\n        }\r\n    },\r\n\r\n    editTable: function (type, option) {\r\n        const tablePlugin = this.plugins.table;\r\n        const contextTable = this.context.table;\r\n        const table = contextTable._element;\r\n        const isRow = type === 'row';\r\n\r\n        if (isRow) {\r\n            const tableAttr = contextTable._trElement.parentNode;\r\n            if (/^THEAD$/i.test(tableAttr.nodeName)) {\r\n                if (option === 'up') {\r\n                    return;\r\n                } else if (!tableAttr.nextElementSibling || !/^TBODY$/i.test(tableAttr.nextElementSibling.nodeName)) {\r\n                    table.innerHTML += '<tbody><tr>' + tablePlugin.createCells.call(this, 'td', contextTable._logical_cellCnt, false) + '</tr></tbody>';\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        // multi\r\n        if (tablePlugin._ref) {\r\n            const positionCell = contextTable._tdElement;\r\n            const selectedCells = tablePlugin._selectedCells;\r\n            // multi - row\r\n            if (isRow) {\r\n                // remove row\r\n                if (!option) {\r\n                    let row = selectedCells[0].parentNode;\r\n                    const removeCells = [selectedCells[0]];\r\n\r\n                    for (let i = 1, len = selectedCells.length, cell; i < len; i++) {\r\n                        cell = selectedCells[i];\r\n                        if (row !== cell.parentNode) {\r\n                            removeCells.push(cell);\r\n                            row = cell.parentNode;\r\n                        }\r\n                    }\r\n\r\n                    for (let i = 0, len = removeCells.length; i < len; i++) {\r\n                        tablePlugin.setCellInfo.call(this, removeCells[i], true);\r\n                        tablePlugin.editRow.call(this, option);\r\n                    }\r\n                } else { // edit row\r\n                    tablePlugin.setCellInfo.call(this, option === 'up' ? selectedCells[0] : selectedCells[selectedCells.length - 1], true);\r\n                    tablePlugin.editRow.call(this, option, positionCell);\r\n                }\r\n            } else { // multi - cell\r\n                const firstRow = selectedCells[0].parentNode;\r\n                // remove cell\r\n                if (!option) {\r\n                    const removeCells = [selectedCells[0]];\r\n                    \r\n                    for (let i = 1, len = selectedCells.length, cell; i < len; i++) {\r\n                        cell = selectedCells[i];\r\n                        if (firstRow === cell.parentNode) {\r\n                            removeCells.push(cell);\r\n                        } else {\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    for (let i = 0, len = removeCells.length; i < len; i++) {\r\n                        tablePlugin.setCellInfo.call(this, removeCells[i], true);\r\n                        tablePlugin.editCell.call(this, option);\r\n                    }\r\n                } else { // edit cell\r\n                    let rightCell = null;\r\n\r\n                    for (let i = 0, len = selectedCells.length - 1; i < len; i++) {\r\n                        if (firstRow !== selectedCells[i + 1].parentNode) {\r\n                            rightCell = selectedCells[i];\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    tablePlugin.setCellInfo.call(this, option === 'left' ? selectedCells[0] : rightCell || selectedCells[0], true);\r\n                    tablePlugin.editCell.call(this, option, positionCell);\r\n                }\r\n            }\r\n\r\n            if (!option) tablePlugin.init.call(this);\r\n        } // one\r\n        else {\r\n            tablePlugin[isRow ? 'editRow' : 'editCell'].call(this, option);\r\n        }\r\n\r\n        // after remove\r\n        if (!option) {\r\n            const children = table.children;\r\n            for (let i = 0; i < children.length; i++) {\r\n                if (children[i].children.length === 0) {\r\n                    this.util.removeItem(children[i]);\r\n                    i--;\r\n                }\r\n            }\r\n\r\n            if (table.children.length === 0) this.util.removeItem(table);\r\n        }\r\n    },\r\n\r\n    editRow: function (option, positionResetElement) {\r\n        const contextTable = this.context.table;\r\n        const remove = !option;\r\n\r\n        const up = option === 'up';\r\n        const originRowIndex = contextTable._rowIndex;\r\n        const rowIndex = remove || up ? originRowIndex : originRowIndex + contextTable._current_rowSpan + 1;\r\n        const sign = remove ? -1 : 1;\r\n        \r\n        const rows = contextTable._trElements;\r\n        let cellCnt = contextTable._logical_cellCnt;\r\n\r\n        for (let i = 0, len = originRowIndex + (remove ? -1 : 0), cell; i <= len; i++) {\r\n            cell = rows[i].cells;\r\n            if (cell.length === 0) return;\r\n            \r\n            for (let c = 0, cLen = cell.length, rs, cs; c < cLen; c++) {\r\n                rs = cell[c].rowSpan;\r\n                cs = cell[c].colSpan;\r\n                if (rs < 2 && cs < 2) continue;\r\n\r\n                if (rs + i > rowIndex && rowIndex > i) {\r\n                    cell[c].rowSpan = rs + sign;\r\n                    cellCnt -= cs;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (remove) {\r\n            const next = rows[originRowIndex + 1];\r\n            if (next) {\r\n                const spanCells = [];\r\n                let cells = rows[originRowIndex].cells;\r\n                let colSpan = 0;\r\n\r\n                for (let i = 0, len = cells.length, cell, logcalIndex; i < len; i++) {\r\n                    cell = cells[i];\r\n                    logcalIndex = i + colSpan;\r\n                    colSpan += cell.colSpan - 1;\r\n\r\n                    if (cell.rowSpan > 1) {\r\n                        cell.rowSpan -= 1;\r\n                        spanCells.push({cell: cell.cloneNode(false), index: logcalIndex});\r\n                    }\r\n                }\r\n\r\n                if (spanCells.length > 0) {\r\n                    let spanCell = spanCells.shift();\r\n                    cells = next.cells;\r\n                    colSpan = 0;\r\n\r\n                    for (let i = 0, len = cells.length, cell, logcalIndex; i < len; i++) {\r\n                        cell = cells[i];\r\n                        logcalIndex = i + colSpan;\r\n                        colSpan += cell.colSpan - 1;\r\n    \r\n                        if (logcalIndex >= spanCell.index) {\r\n                            i--, colSpan--;\r\n                            colSpan += spanCell.cell.colSpan - 1;\r\n                            next.insertBefore(spanCell.cell, cell);\r\n                            spanCell = spanCells.shift();\r\n                            if (!spanCell) break;\r\n                        }\r\n                    }\r\n\r\n                    if (spanCell) {\r\n                        next.appendChild(spanCell.cell);\r\n                        for (let i = 0, len = spanCells.length; i < len; i++) {\r\n                            next.appendChild(spanCells[i].cell);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            contextTable._element.deleteRow(rowIndex);\r\n        } else {\r\n            const newRow = contextTable._element.insertRow(rowIndex);\r\n            newRow.innerHTML = this.plugins.table.createCells.call(this, 'td', cellCnt, false);\r\n        }\r\n\r\n        if (!remove) {\r\n            this.plugins.table.setPositionControllerDiv.call(this, positionResetElement || contextTable._tdElement, true);\r\n        } else {\r\n            this.controllersOff();\r\n        }\r\n    },\r\n\r\n    editCell: function (option, positionResetElement) {\r\n        const contextTable = this.context.table;\r\n        const util = this.util;\r\n        const remove = !option;\r\n\r\n        const left = option === 'left';\r\n        const colSpan = contextTable._current_colSpan;\r\n        const cellIndex = remove || left ? contextTable._logical_cellIndex : contextTable._logical_cellIndex + colSpan + 1;\r\n\r\n        const rows = contextTable._trElements;\r\n        let rowSpanArr = [];\r\n        let spanIndex = [];\r\n        let passCell = 0;\r\n        const removeCell = [];\r\n        const removeSpanArr = [];\r\n\r\n        for (let i = 0, len = contextTable._rowCnt, row, insertIndex, cells, newCell, applySpan, cellColSpan; i < len; i++) {\r\n            row = rows[i];\r\n            insertIndex = cellIndex;\r\n            applySpan = false;\r\n            cells = row.cells;\r\n            cellColSpan = 0;\r\n\r\n            for (let c = 0, cell, cLen = cells.length, rs, cs, removeIndex; c < cLen; c++) {\r\n                cell = cells[c];\r\n                if (!cell) break;\r\n\r\n                rs = cell.rowSpan - 1;\r\n                cs = cell.colSpan - 1;\r\n\r\n                if (!remove) {\r\n                    if (c >= insertIndex) break;\r\n                    if (cs > 0) {\r\n                        if (passCell < 1 && cs + c >= insertIndex) {\r\n                            cell.colSpan += 1;\r\n                            insertIndex = null;\r\n                            passCell = rs + 1;\r\n                            break;\r\n                        }\r\n\r\n                        insertIndex -= cs;\r\n                    }\r\n\r\n                    if (!applySpan) {\r\n                        for (let r = 0, arr; r < spanIndex.length; r++) {\r\n                            arr = spanIndex[r];\r\n                            insertIndex -= arr.cs;\r\n                            arr.rs -= 1;\r\n                            if (arr.rs < 1) {\r\n                                spanIndex.splice(r, 1);\r\n                                r--;\r\n                            }  \r\n                        }\r\n                        applySpan = true;\r\n                    }\r\n                } else {\r\n                    removeIndex = c + cellColSpan;\r\n\r\n                    if (spanIndex.length > 0) {\r\n                        const lastCell = !cells[c + 1];\r\n                        for (let r = 0, arr; r < spanIndex.length; r++) {\r\n                            arr = spanIndex[r];\r\n                            if (arr.row > i) continue;\r\n\r\n                            if (removeIndex >= arr.index) {\r\n                                cellColSpan += arr.cs;\r\n                                removeIndex = c + cellColSpan;\r\n                                arr.rs -= 1;\r\n                                arr.row = i + 1;\r\n                                if (arr.rs < 1) {\r\n                                    spanIndex.splice(r, 1);\r\n                                    r--;\r\n                                }  \r\n                            } else if (lastCell) {\r\n                                arr.rs -= 1;\r\n                                arr.row = i + 1;\r\n                                if (arr.rs < 1) {\r\n                                    spanIndex.splice(r, 1);\r\n                                    r--;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (rs > 0) {\r\n                        rowSpanArr.push({\r\n                            rs: rs,\r\n                            cs: cs + 1,\r\n                            index: removeIndex,\r\n                            row: -1\r\n                        });\r\n                    }\r\n\r\n                    if (removeIndex >= insertIndex && removeIndex + cs <= insertIndex + colSpan) {\r\n                        removeCell.push(cell);\r\n                    } else if (removeIndex <= insertIndex + colSpan && removeIndex + cs >= insertIndex) {\r\n                        cell.colSpan -= util.getOverlapRangeAtIndex(cellIndex, cellIndex + colSpan, removeIndex, removeIndex + cs); \r\n                    } else if (rs > 0 && (removeIndex < insertIndex || removeIndex + cs > insertIndex + colSpan)) {\r\n                        removeSpanArr.push({\r\n                            cell: cell,\r\n                            i: i,\r\n                            rs: i + rs\r\n                        });\r\n                    }\r\n\r\n                    cellColSpan += cs;\r\n                }\r\n            }\r\n\r\n            spanIndex = spanIndex.concat(rowSpanArr).sort(function (a, b) {return a.index - b.index;});\r\n            rowSpanArr = [];\r\n\r\n            if (!remove) {\r\n                if (passCell > 0) {\r\n                    passCell -= 1;\r\n                    continue;\r\n                }\r\n\r\n                if (insertIndex !== null && cells.length > 0) {\r\n                    newCell = this.plugins.table.createCells.call(this, cells[0].nodeName, 0, true);\r\n                    newCell = row.insertBefore(newCell, cells[insertIndex]);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (remove) {\r\n            let removeFirst, removeEnd;\r\n            for (let r = 0, rLen = removeCell.length, row; r < rLen; r++) {\r\n                row = removeCell[r].parentNode;\r\n                util.removeItem(removeCell[r]);\r\n                if (row.cells.length === 0) {\r\n                    if (!removeFirst) removeFirst = util.getArrayIndex(rows, row);\r\n                    removeEnd = util.getArrayIndex(rows, row);\r\n                    util.removeItem(row);\r\n                }\r\n            }\r\n\r\n            for (let c = 0, cLen = removeSpanArr.length, rowSpanCell; c < cLen; c++) {\r\n                rowSpanCell = removeSpanArr[c];\r\n                rowSpanCell.cell.rowSpan = util.getOverlapRangeAtIndex(removeFirst, removeEnd, rowSpanCell.i, rowSpanCell.rs);\r\n            }\r\n\r\n            this.controllersOff();\r\n        } else {\r\n            this.plugins.table.setPositionControllerDiv.call(this, positionResetElement || contextTable._tdElement, true);\r\n        }\r\n    },\r\n\r\n    _closeSplitMenu: null,\r\n    openSplitMenu: function () {\r\n        this.util.addClass(this.context.table.splitButton, 'on');\r\n        this.context.table.splitMenu.style.display = 'inline-table';\r\n\r\n        this.plugins.table._closeSplitMenu = function () {\r\n            this.util.removeClass(this.context.table.splitButton, 'on');\r\n            this.context.table.splitMenu.style.display = 'none';\r\n            this.removeDocEvent('click', this.plugins.table._closeSplitMenu);\r\n            this.plugins.table._closeSplitMenu = null;\r\n        }.bind(this);\r\n\r\n        this.addDocEvent('click', this.plugins.table._closeSplitMenu);\r\n    },\r\n\r\n    splitCells: function (direction) {\r\n        const util = this.util;\r\n        const vertical = direction === 'vertical';\r\n        const contextTable = this.context.table;\r\n        const currentCell = contextTable._tdElement;\r\n        const rows = contextTable._trElements;\r\n        const currentRow = contextTable._trElement;\r\n        const index = contextTable._logical_cellIndex;\r\n        const rowIndex = contextTable._rowIndex;\r\n        const newCell = this.plugins.table.createCells.call(this, currentCell.nodeName, 0, true);\r\n\r\n        // vertical\r\n        if (vertical) {\r\n            const currentColSpan = currentCell.colSpan;\r\n            newCell.rowSpan = currentCell.rowSpan;\r\n\r\n            // colspan > 1\r\n            if (currentColSpan > 1) {\r\n                newCell.colSpan = this._w.Math.floor(currentColSpan/2);\r\n                currentCell.colSpan = currentColSpan - newCell.colSpan;\r\n                currentRow.insertBefore(newCell, currentCell.nextElementSibling);\r\n            } else { // colspan - 1\r\n                let rowSpanArr = [];\r\n                let spanIndex = [];\r\n\r\n                for (let i = 0, len = contextTable._rowCnt, cells, colSpan; i < len; i++) {\r\n                    cells = rows[i].cells;\r\n                    colSpan = 0;\r\n                    for (let c = 0, cLen = cells.length, cell, cs, rs, logcalIndex; c < cLen; c++) {\r\n                        cell = cells[c];\r\n                        cs = cell.colSpan - 1;\r\n                        rs = cell.rowSpan - 1;\r\n                        logcalIndex = c + colSpan;\r\n\r\n                        if (spanIndex.length > 0) {\r\n                            for (let r = 0, arr; r < spanIndex.length; r++) {\r\n                                arr = spanIndex[r];\r\n                                if (arr.row > i) continue;\r\n                                if (logcalIndex >= arr.index) {\r\n                                    colSpan += arr.cs;\r\n                                    logcalIndex += arr.cs;\r\n                                    arr.rs -= 1;\r\n                                    arr.row = i + 1;\r\n                                    if (arr.rs < 1) {\r\n                                        spanIndex.splice(r, 1);\r\n                                        r--;\r\n                                    }  \r\n                                } else if (c === cLen - 1) {\r\n                                    arr.rs -= 1;\r\n                                    arr.row = i + 1;\r\n                                    if (arr.rs < 1) {\r\n                                        spanIndex.splice(r, 1);\r\n                                        r--;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (logcalIndex <= index && rs > 0) {\r\n                            rowSpanArr.push({\r\n                                index: logcalIndex,\r\n                                cs: cs + 1,\r\n                                rs: rs,\r\n                                row: -1\r\n                            });\r\n                        }\r\n\r\n                        if (cell !== currentCell && logcalIndex <= index && logcalIndex + cs >= index + currentColSpan - 1) {\r\n                            cell.colSpan += 1;\r\n                            break;\r\n                        }\r\n\r\n                        if (logcalIndex > index) break;\r\n                        \r\n                        colSpan += cs;\r\n                    }\r\n\r\n                    spanIndex = spanIndex.concat(rowSpanArr).sort(function (a, b) {return a.index - b.index;});\r\n                    rowSpanArr = [];\r\n                }\r\n\r\n                currentRow.insertBefore(newCell, currentCell.nextElementSibling);\r\n            }\r\n        } else { // horizontal\r\n            const currentRowSpan = currentCell.rowSpan;\r\n            newCell.colSpan = currentCell.colSpan;\r\n\r\n            // rowspan > 1\r\n            if (currentRowSpan > 1) {\r\n                newCell.rowSpan = this._w.Math.floor(currentRowSpan/2);\r\n                const newRowSpan = currentRowSpan - newCell.rowSpan;\r\n\r\n                const rowSpanArr = [];\r\n                const nextRowIndex = util.getArrayIndex(rows, currentRow) + newRowSpan;\r\n\r\n                for (let i = 0, cells, colSpan; i < nextRowIndex; i++) {\r\n                    cells = rows[i].cells;\r\n                    colSpan = 0;\r\n                    for (let c = 0, cLen = cells.length, cell, cs, logcalIndex; c < cLen; c++) {\r\n                        logcalIndex = c + colSpan;\r\n                        if (logcalIndex >= index) break;\r\n\r\n                        cell = cells[c];\r\n                        cs = cell.rowSpan - 1;\r\n                        if (cs > 0 && cs + i >= nextRowIndex && logcalIndex < index) {\r\n                            rowSpanArr.push({\r\n                                index: logcalIndex,\r\n                                cs: cell.colSpan\r\n                            });\r\n                        }\r\n                        colSpan += cell.colSpan - 1;\r\n                    }\r\n                }\r\n\r\n                const nextRow = rows[nextRowIndex];\r\n                const nextCells = nextRow.cells;\r\n                let rs = rowSpanArr.shift();\r\n\r\n                for (let c = 0, cLen = nextCells.length, colSpan = 0, cell, cs, logcalIndex, insertIndex; c < cLen; c++) {\r\n                    logcalIndex = c + colSpan;\r\n                    cell = nextCells[c];\r\n                    cs = cell.colSpan - 1;\r\n                    insertIndex = logcalIndex + cs + 1;\r\n\r\n                    if (rs && insertIndex >= rs.index) {\r\n                        colSpan += rs.cs;\r\n                        insertIndex += rs.cs;\r\n                        rs = rowSpanArr.shift();\r\n                    }\r\n                    \r\n                    if (insertIndex >= index || c === cLen - 1) {\r\n                        nextRow.insertBefore(newCell, cell.nextElementSibling);\r\n                        break;\r\n                    }\r\n\r\n                    colSpan += cs;\r\n                }\r\n\r\n                currentCell.rowSpan = newRowSpan;\r\n            } else { // rowspan - 1\r\n                newCell.rowSpan = currentCell.rowSpan;\r\n                const newRow = util.createElement('TR');\r\n                newRow.appendChild(newCell);\r\n\r\n                for (let i = 0, cells; i < rowIndex; i++) {\r\n                    cells = rows[i].cells;\r\n                    if (cells.length === 0) return;\r\n\r\n                    for (let c = 0, cLen = cells.length; c < cLen; c++) {\r\n                        if (i + cells[c].rowSpan - 1 >= rowIndex) {\r\n                            cells[c].rowSpan += 1;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                const physicalIndex = contextTable._physical_cellIndex;\r\n                const cells = currentRow.cells;\r\n\r\n                for (let c = 0, cLen = cells.length; c < cLen; c++) {\r\n                    if (c === physicalIndex) continue;       \r\n                    cells[c].rowSpan += 1;                    \r\n                }\r\n\r\n                currentRow.parentNode.insertBefore(newRow, currentRow.nextElementSibling);\r\n            }\r\n        }\r\n\r\n        this.focusEdge(currentCell);\r\n        this.plugins.table.setPositionControllerDiv.call(this, currentCell, true);\r\n    },\r\n\r\n    mergeCells: function () {\r\n        const tablePlugin = this.plugins.table;\r\n        const contextTable = this.context.table;\r\n        const util = this.util;\r\n\r\n        const ref = tablePlugin._ref;\r\n        const selectedCells = tablePlugin._selectedCells;\r\n        const mergeCell = selectedCells[0];\r\n        \r\n        let emptyRowFirst = null;\r\n        let emptyRowLast = null;\r\n        let cs = (ref.ce - ref.cs) + 1;\r\n        let rs = (ref.re - ref.rs) + 1;\r\n        let mergeHTML = '';\r\n        let row = null;\r\n\r\n        for (let i = 1, len = selectedCells.length, cell, ch; i < len; i++) {\r\n            cell = selectedCells[i];\r\n            if (row !== cell.parentNode) row = cell.parentNode;\r\n\r\n            ch = cell.children;\r\n            for (let c = 0, cLen = ch.length; c < cLen; c++) {\r\n                if (util.isFormatElement(ch[c]) && util.onlyZeroWidthSpace(ch[c].textContent)) {\r\n                    util.removeItem(ch[c]);\r\n                }  \r\n            }\r\n\r\n            mergeHTML += cell.innerHTML;\r\n            util.removeItem(cell);\r\n\r\n            if (row.cells.length === 0) {\r\n                if (!emptyRowFirst) emptyRowFirst = row;\r\n                else emptyRowLast = row;\r\n                rs -= 1;\r\n            }\r\n        }\r\n\r\n        if (emptyRowFirst) {\r\n            const rows = contextTable._trElements;\r\n            const rowIndexFirst = util.getArrayIndex(rows, emptyRowFirst);\r\n            const rowIndexLast = util.getArrayIndex(rows, emptyRowLast || emptyRowFirst);\r\n            const removeRows = [];\r\n    \r\n            for (let i = 0, cells; i <= rowIndexLast; i++) {\r\n                cells = rows[i].cells;\r\n                if (cells.length === 0) {\r\n                    removeRows.push(rows[i]);\r\n                    continue;\r\n                }\r\n    \r\n                for (let c = 0, cLen = cells.length, cell, rs; c < cLen; c++) {\r\n                    cell = cells[c];\r\n                    rs = cell.rowSpan - 1;\r\n                    if (rs > 0 && i + rs >= rowIndexFirst) {\r\n                        cell.rowSpan -= util.getOverlapRangeAtIndex(rowIndexFirst, rowIndexLast, i, i + rs);\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (let i = 0, len = removeRows.length; i < len; i++) {\r\n                util.removeItem(removeRows[i]);\r\n            }\r\n        }\r\n\r\n        mergeCell.innerHTML += mergeHTML;\r\n        mergeCell.colSpan = cs;\r\n        mergeCell.rowSpan = rs;\r\n\r\n        this.controllersOff();\r\n        tablePlugin.setActiveButton.call(this, true, false);\r\n        tablePlugin.call_controller_tableEdit.call(this, mergeCell);\r\n\r\n        util.addClass(mergeCell, 'se-table-selected-cell');\r\n        this.focusEdge(mergeCell);\r\n    },\r\n\r\n    toggleHeader: function () {\r\n        const util = this.util;\r\n        const headerButton = this.context.table.headerButton;\r\n        const active = util.hasClass(headerButton, 'active');\r\n        const table = this.context.table._element;\r\n\r\n        if (!active) {\r\n            const header = util.createElement('THEAD');\r\n            header.innerHTML = '<tr>' + this.plugins.table.createCells.call(this, 'th', this.context.table._logical_cellCnt, false) + '</tr>';\r\n            table.insertBefore(header, table.firstElementChild);\r\n        } else {\r\n            util.removeItem(table.querySelector('thead'));\r\n        }\r\n\r\n        util.toggleClass(headerButton, 'active');\r\n\r\n        if (/TH/i.test(this.context.table._tdElement.nodeName)) {\r\n            this.controllersOff();\r\n        } else {\r\n            this.plugins.table.setPositionControllerDiv.call(this, this.context.table._tdElement, false);\r\n        }\r\n    },\r\n\r\n    setTableStyle: function (styles) {\r\n        const contextTable = this.context.table;\r\n        const tableElement = contextTable._element;\r\n        let icon, span, sizeIcon, text;\r\n\r\n        if (styles.indexOf('width') > -1) {\r\n            icon =  contextTable.resizeButton.firstElementChild;\r\n            span = contextTable.resizeText;\r\n\r\n            if (!contextTable._maxWidth) {\r\n                sizeIcon = contextTable.icons.expansion;\r\n                text = contextTable.maxText;\r\n                contextTable.columnFixedButton.style.display = 'none';\r\n                this.util.removeClass(tableElement, 'se-table-size-100');\r\n                this.util.addClass(tableElement, 'se-table-size-auto');\r\n            } else {\r\n                sizeIcon = contextTable.icons.reduction;\r\n                text = contextTable.minText;\r\n                contextTable.columnFixedButton.style.display = 'block';\r\n                this.util.removeClass(tableElement, 'se-table-size-auto');\r\n                this.util.addClass(tableElement, 'se-table-size-100');\r\n            }\r\n            \r\n            this.util.changeElement(icon, sizeIcon);\r\n            this.util.changeTxt(span, text);\r\n        }\r\n\r\n        if (styles.indexOf('column') > -1) {\r\n            if (!contextTable._fixedColumn) {\r\n                this.util.removeClass(tableElement, 'se-table-layout-fixed');\r\n                this.util.addClass(tableElement, 'se-table-layout-auto');\r\n                this.util.removeClass(contextTable.columnFixedButton, 'active');\r\n            } else {\r\n                this.util.removeClass(tableElement, 'se-table-layout-auto');\r\n                this.util.addClass(tableElement, 'se-table-layout-fixed');\r\n                this.util.addClass(contextTable.columnFixedButton, 'active');\r\n            }\r\n            \r\n        }\r\n    },\r\n\r\n    setActiveButton: function (fixedCell, selectedCell) {\r\n        const contextTable = this.context.table;\r\n\r\n        if (/^TH$/i.test(fixedCell.nodeName)) {\r\n            contextTable.insertRowAboveButton.setAttribute('disabled', true);\r\n            contextTable.insertRowBelowButton.setAttribute('disabled', true);\r\n        } else {\r\n            contextTable.insertRowAboveButton.removeAttribute('disabled');\r\n            contextTable.insertRowBelowButton.removeAttribute('disabled');\r\n        }\r\n\r\n        if (!selectedCell || fixedCell === selectedCell) {\r\n            contextTable.splitButton.removeAttribute('disabled');\r\n            contextTable.mergeButton.setAttribute('disabled', true);\r\n        } else {\r\n            contextTable.splitButton.setAttribute('disabled', true);\r\n            contextTable.mergeButton.removeAttribute('disabled');\r\n        }\r\n    },\r\n\r\n    // multi selecte\r\n    _bindOnSelect: null,\r\n    _bindOffSelect: null,\r\n    _bindOffShift: null,\r\n    _selectedCells: null,\r\n    _shift: false,\r\n    _fixedCell: null,\r\n    _fixedCellName: null,\r\n    _selectedCell: null,\r\n    _selectedTable: null,\r\n    _ref: null,\r\n    _toggleEditor: function (enabled) {\r\n        this.context.element.wysiwyg.setAttribute('contenteditable', enabled);\r\n        if (enabled) this.util.removeClass(this.context.element.wysiwyg, 'se-disabled');\r\n        else this.util.addClass(this.context.element.wysiwyg, 'se-disabled');\r\n    },\r\n\r\n    _offCellMultiSelect: function (e) {\r\n        e.stopPropagation();\r\n        const tablePlugin = this.plugins.table;\r\n\r\n        if (!tablePlugin._shift) {\r\n            tablePlugin._removeEvents.call(this);\r\n            tablePlugin._toggleEditor.call(this, true);\r\n        } else if (tablePlugin._initBind) {\r\n            this._wd.removeEventListener('touchmove', tablePlugin._initBind);\r\n            tablePlugin._initBind = null;\r\n        }\r\n\r\n        if (!tablePlugin._fixedCell || !tablePlugin._selectedTable) return;\r\n        \r\n        tablePlugin.setActiveButton.call(this, tablePlugin._fixedCell, tablePlugin._selectedCell);\r\n        tablePlugin.call_controller_tableEdit.call(this, tablePlugin._selectedCell || tablePlugin._fixedCell);\r\n\r\n        tablePlugin._selectedCells = tablePlugin._selectedTable.querySelectorAll('.se-table-selected-cell');\r\n        if (tablePlugin._selectedCell && tablePlugin._fixedCell) this.focusEdge(tablePlugin._selectedCell);\r\n\r\n        if (!tablePlugin._shift) {\r\n            tablePlugin._fixedCell = null;\r\n            tablePlugin._selectedCell = null;\r\n            tablePlugin._fixedCellName = null;\r\n        }\r\n    },\r\n\r\n    _onCellMultiSelect: function (e) {\r\n        this._antiBlur = true;\r\n        const tablePlugin = this.plugins.table;\r\n        const target = this.util.getParentElement(e.target, this.util.isCell);\r\n\r\n        if (tablePlugin._shift) {\r\n            if (target === tablePlugin._fixedCell) tablePlugin._toggleEditor.call(this, true);\r\n            else tablePlugin._toggleEditor.call(this, false);\r\n        } else if (!tablePlugin._ref) {\r\n            if (target === tablePlugin._fixedCell) return;\r\n            else tablePlugin._toggleEditor.call(this, false);\r\n        }\r\n\r\n        if (!target || target === tablePlugin._selectedCell || tablePlugin._fixedCellName !== target.nodeName || \r\n            tablePlugin._selectedTable !== this.util.getParentElement(target, 'TABLE')) {\r\n            return;\r\n        }\r\n\r\n        tablePlugin._selectedCell = target;\r\n        tablePlugin._setMultiCells.call(this, tablePlugin._fixedCell, target);\r\n    },\r\n\r\n    _setMultiCells: function (startCell, endCell) {\r\n        const tablePlugin = this.plugins.table;\r\n        const rows = tablePlugin._selectedTable.rows;\r\n        const util = this.util;\r\n\r\n        const selectedCells = tablePlugin._selectedTable.querySelectorAll('.se-table-selected-cell');\r\n        for (let i = 0, len = selectedCells.length; i < len; i++) {\r\n            util.removeClass(selectedCells[i], 'se-table-selected-cell');\r\n        }\r\n\r\n        if (startCell === endCell) {\r\n            util.addClass(startCell, 'se-table-selected-cell');\r\n            if (!tablePlugin._shift) return;\r\n        }\r\n\r\n        let findSelectedCell = true;\r\n        let spanIndex = [];\r\n        let rowSpanArr = [];\r\n        const ref = tablePlugin._ref = {_i: 0, cs: null, ce: null, rs: null, re: null};\r\n\r\n        for (let i = 0, len = rows.length, cells, colSpan; i < len; i++) {\r\n            cells = rows[i].cells;\r\n            colSpan = 0;\r\n\r\n            for (let c = 0, cLen = cells.length, cell, logcalIndex, cs, rs; c < cLen; c++) {\r\n                cell = cells[c];\r\n                cs = cell.colSpan - 1;\r\n                rs = cell.rowSpan - 1;\r\n                logcalIndex = c + colSpan;\r\n\r\n                if (spanIndex.length > 0) {\r\n                    for (let r = 0, arr; r < spanIndex.length; r++) {\r\n                        arr = spanIndex[r];\r\n                        if (arr.row > i) continue;\r\n                        if (logcalIndex >= arr.index) {\r\n                            colSpan += arr.cs;\r\n                            logcalIndex += arr.cs;\r\n                            arr.rs -= 1;\r\n                            arr.row = i + 1;\r\n                            if (arr.rs < 1) {\r\n                                spanIndex.splice(r, 1);\r\n                                r--;\r\n                            }\r\n                        } else if (c === cLen - 1) {\r\n                            arr.rs -= 1;\r\n                            arr.row = i + 1;\r\n                            if (arr.rs < 1) {\r\n                                spanIndex.splice(r, 1);\r\n                                r--;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (findSelectedCell) {\r\n                    if (cell === startCell || cell === endCell) {\r\n                        ref.cs = ref.cs !== null && ref.cs < logcalIndex ? ref.cs : logcalIndex;\r\n                        ref.ce = ref.ce !== null && ref.ce > logcalIndex + cs ? ref.ce : logcalIndex + cs;\r\n                        ref.rs = ref.rs !== null && ref.rs < i ? ref.rs : i;\r\n                        ref.re = ref.re !== null && ref.re > i + rs ? ref.re : i + rs;\r\n                        ref._i += 1;\r\n                    }\r\n                    \r\n                    if (ref._i === 2) {\r\n                        findSelectedCell = false;\r\n                        spanIndex = [];\r\n                        rowSpanArr = [];\r\n                        i = -1;\r\n                        break;\r\n                    }\r\n                } else if (util.getOverlapRangeAtIndex(ref.cs, ref.ce, logcalIndex, logcalIndex + cs) && util.getOverlapRangeAtIndex(ref.rs, ref.re, i, i + rs)) {\r\n                    const newCs = ref.cs < logcalIndex ? ref.cs : logcalIndex;\r\n                    const newCe = ref.ce > logcalIndex + cs ? ref.ce : logcalIndex + cs;\r\n                    const newRs = ref.rs < i ? ref.rs : i;\r\n                    const newRe = ref.re > i + rs ? ref.re : i + rs;\r\n\r\n                    if (ref.cs !== newCs || ref.ce !== newCe || ref.rs !== newRs || ref.re !== newRe) {\r\n                        ref.cs = newCs;\r\n                        ref.ce = newCe;\r\n                        ref.rs = newRs;\r\n                        ref.re = newRe;\r\n                        i = -1;\r\n\r\n                        spanIndex = [];\r\n                        rowSpanArr = [];\r\n                        break;\r\n                    }\r\n\r\n                    util.addClass(cell, 'se-table-selected-cell');\r\n                }\r\n\r\n                if (rs > 0) {\r\n                    rowSpanArr.push({\r\n                        index: logcalIndex,\r\n                        cs: cs + 1,\r\n                        rs: rs,\r\n                        row: -1\r\n                    });\r\n                }\r\n\r\n                colSpan += cell.colSpan - 1;\r\n            }\r\n\r\n            spanIndex = spanIndex.concat(rowSpanArr).sort(function (a, b) {return a.index - b.index;});\r\n            rowSpanArr = [];\r\n        }\r\n    },\r\n\r\n    _removeEvents: function () {\r\n        const tablePlugin = this.plugins.table;\r\n\r\n        if (tablePlugin._initBind) {\r\n            this._wd.removeEventListener('touchmove', tablePlugin._initBind);\r\n            tablePlugin._initBind = null;\r\n        }\r\n\r\n        if (tablePlugin._bindOnSelect) {\r\n            this._wd.removeEventListener('mousedown', tablePlugin._bindOnSelect);\r\n            this._wd.removeEventListener('mousemove', tablePlugin._bindOnSelect);\r\n            tablePlugin._bindOnSelect = null;\r\n        }\r\n\r\n        if (tablePlugin._bindOffSelect) {\r\n            this._wd.removeEventListener('mouseup', tablePlugin._bindOffSelect);\r\n            tablePlugin._bindOffSelect = null;\r\n        }\r\n\r\n        if (tablePlugin._bindOffShift) {\r\n            this._wd.removeEventListener('keyup', tablePlugin._bindOffShift);\r\n            tablePlugin._bindOffShift = null;\r\n        }\r\n    },\r\n\r\n    _initBind: null,\r\n    onTableCellMultiSelect: function (tdElement, shift) {\r\n        const tablePlugin = this.plugins.table;\r\n\r\n        tablePlugin._removeEvents.call(this);\r\n        this.controllersOff();\r\n\r\n        tablePlugin._shift = shift;\r\n        tablePlugin._fixedCell = tdElement;\r\n        tablePlugin._fixedCellName = tdElement.nodeName;\r\n        tablePlugin._selectedTable = this.util.getParentElement(tdElement, 'TABLE');\r\n\r\n        const selectedCells = tablePlugin._selectedTable.querySelectorAll('.se-table-selected-cell');\r\n        for (let i = 0, len = selectedCells.length; i < len; i++) {\r\n            this.util.removeClass(selectedCells[i], 'se-table-selected-cell');\r\n        }\r\n\r\n        this.util.addClass(tdElement, 'se-table-selected-cell');\r\n        \r\n        tablePlugin._bindOnSelect = tablePlugin._onCellMultiSelect.bind(this);\r\n        tablePlugin._bindOffSelect = tablePlugin._offCellMultiSelect.bind(this);\r\n\r\n        if (!shift) {\r\n            this._wd.addEventListener('mousemove', tablePlugin._bindOnSelect, false);\r\n        } else {\r\n            tablePlugin._bindOffShift = function () {\r\n                this.controllersOn(this.context.table.resizeDiv, this.context.table.tableController, this.plugins.table.init.bind(this), tdElement, 'table');\r\n                if (!tablePlugin._ref) this.controllersOff();\r\n            }.bind(this);\r\n\r\n            this._wd.addEventListener('keyup', tablePlugin._bindOffShift, false);\r\n            this._wd.addEventListener('mousedown', tablePlugin._bindOnSelect, false);\r\n        }\r\n\r\n        this._wd.addEventListener('mouseup', tablePlugin._bindOffSelect, false);\r\n        tablePlugin._initBind = tablePlugin.init.bind(this);\r\n        this._wd.addEventListener('touchmove', tablePlugin._initBind, false);\r\n    },\r\n\r\n    onClick_tableController: function (e) {\r\n        e.stopPropagation();\r\n        const target = e.target.getAttribute('data-command') ? e.target : e.target.parentNode;\r\n\r\n        if (target.getAttribute('disabled')) return;\r\n\r\n        const command = target.getAttribute('data-command');\r\n        const value = target.getAttribute('data-value');\r\n        const option = target.getAttribute('data-option');\r\n        const tablePlugin = this.plugins.table;\r\n        \r\n        if (typeof tablePlugin._closeSplitMenu === 'function') {\r\n            tablePlugin._closeSplitMenu();\r\n            if (command === 'onsplit') return;\r\n        }\r\n\r\n        if (!command) return;\r\n\r\n        e.preventDefault();\r\n        const contextTable = this.context.table;\r\n\r\n        switch (command) {\r\n            case 'insert':\r\n            case 'delete':\r\n                tablePlugin.editTable.call(this, value, option);\r\n                break;\r\n            case 'header':\r\n                tablePlugin.toggleHeader.call(this);\r\n                break;\r\n            case 'onsplit':\r\n                tablePlugin.openSplitMenu.call(this);\r\n                break;\r\n            case 'split':\r\n                tablePlugin.splitCells.call(this, value);\r\n                break;\r\n            case 'merge':\r\n                tablePlugin.mergeCells.call(this);\r\n                break;\r\n            case 'resize':\r\n                contextTable._maxWidth = !contextTable._maxWidth;\r\n                tablePlugin.setTableStyle.call(this, 'width');\r\n                tablePlugin.setPositionControllerTop.call(this, contextTable._element);\r\n                tablePlugin.setPositionControllerDiv.call(this, contextTable._tdElement, tablePlugin._shift);\r\n                break;\r\n            case 'layout':\r\n                contextTable._fixedColumn = !contextTable._fixedColumn;\r\n                tablePlugin.setTableStyle.call(this, 'column');\r\n                tablePlugin.setPositionControllerTop.call(this, contextTable._element);\r\n                tablePlugin.setPositionControllerDiv.call(this, contextTable._tdElement, tablePlugin._shift);\r\n                break;\r\n            case 'remove':\r\n                const emptyDiv = contextTable._element.parentNode;\r\n                this.util.removeItem(contextTable._element);\r\n                this.controllersOff();\r\n\r\n                if (emptyDiv !== this.context.element.wysiwyg) this.util.removeItemAllParents(emptyDiv, function (current) { return current.childNodes.length === 0; }, null);\r\n                this.focus();\r\n        }\r\n\r\n        // history stack\r\n        this.history.push(false);\r\n    }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}